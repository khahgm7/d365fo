<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenAI</name>
    </assembly>
    <members>
        <member name="P:OpenAI.Assistants.Assistant.Object">
            <summary> The object type, which is always `assistant`. </summary>
        </member>
        <member name="P:OpenAI.Assistants.Assistant.ResponseFormat">
            <inheritdoc cref="T:OpenAI.Assistants.AssistantResponseFormat"/>
        </member>
        <member name="P:OpenAI.Assistants.Assistant.NucleusSamplingFactor">
             <summary>
             An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.
            
             We generally recommend altering this or temperature but not both.
             </summary>
        </member>
        <member name="T:OpenAI.Assistants.AssistantClient">
            <summary> The service client for OpenAI assistants operations. </summary>
        </member>
        <member name="P:OpenAI.Assistants.AssistantClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Assistants.AssistantClient.#ctor(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Assistants.AssistantClient.#ctor(System.ClientModel.ApiKeyCredential)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Assistants.AssistantClient.#ctor(System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Assistants.AssistantClient.#ctor(System.ClientModel.Primitives.ClientPipeline,OpenAI.OpenAIClientOptions)" -->
        <member name="M:OpenAI.Assistants.AssistantClient.CreateAssistantAsync(System.String,OpenAI.Assistants.AssistantCreationOptions,System.Threading.CancellationToken)">
            <summary> Creates a new assistant. </summary>
            <param name="model"> The default model that the assistant should use. </param>
            <param name="options"> The additional <see cref="T:OpenAI.Assistants.AssistantCreationOptions"/> to use. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <exception cref="T:System.ArgumentException"> <paramref name="model"/> is null or empty. </exception>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateAssistant(System.String,OpenAI.Assistants.AssistantCreationOptions,System.Threading.CancellationToken)">
            <summary> Creates a new assistant. </summary>
            <param name="model"> The default model that the assistant should use. </param>
            <param name="options"> The additional <see cref="T:OpenAI.Assistants.AssistantCreationOptions"/> to use. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <exception cref="T:System.ArgumentException"> <paramref name="model"/> is null or empty. </exception>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetAssistantsAsync(OpenAI.Assistants.AssistantCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a page collection holding <see cref="T:OpenAI.Assistants.Assistant"/> instances.
            </summary>
            <param name="options"> Options describing the collection to return. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.Assistant"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetAssistantsAsync(System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Rehydrates a page collection holding <see cref="T:OpenAI.Assistants.Assistant"/> instances from a page token.
            </summary>
            <param name="firstPageToken"> Page token corresponding to the first page of the collection to rehydrate. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.Assistant"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetAssistants(OpenAI.Assistants.AssistantCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a page collection holding <see cref="T:OpenAI.Assistants.Assistant"/> instances.
            </summary>
            <param name="options"> Options describing the collection to return. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.Assistant"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetAssistants(System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Rehydrates a page collection holding <see cref="T:OpenAI.Assistants.Assistant"/> instances from a page token.
            </summary>
            <param name="firstPageToken"> Page token corresponding to the first page of the collection to rehydrate. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.Assistant"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetAssistantAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an instance representing an existing <see cref="T:OpenAI.Assistants.Assistant"/> based on its ID.
            </summary>
            <param name="assistantId"> The ID of the Assistant to retrieve. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns>An <see cref="T:OpenAI.Assistants.Assistant"/> instance representing the state of the Assistant with the provided ID.</returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetAssistant(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an instance representing an existing <see cref="T:OpenAI.Assistants.Assistant"/> based on its ID.
            </summary>
            <param name="assistantId"> The ID of the Assistant to retrieve. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns>An <see cref="T:OpenAI.Assistants.Assistant"/> instance representing the state of the Assistant with the provided ID.</returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.ModifyAssistantAsync(System.String,OpenAI.Assistants.AssistantModificationOptions,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing <see cref="T:OpenAI.Assistants.Assistant"/>.
            </summary>
            <param name="assistantId"> The ID of the Assistant to retrieve. </param>
            <param name="options"> The new options to apply to the existing Assistant. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <returns> An updated <see cref="T:OpenAI.Assistants.Assistant"/> instance representing the state of the Assistant with the provided ID. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.ModifyAssistant(System.String,OpenAI.Assistants.AssistantModificationOptions,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing <see cref="T:OpenAI.Assistants.Assistant"/>.
            </summary>
            <param name="assistantId"> The ID of the Assistant to retrieve. </param>
            <param name="options"> The new options to apply to the existing Assistant. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <returns> An updated <see cref="T:OpenAI.Assistants.Assistant"/> instance representing the state of the Assistant with the provided ID. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.DeleteAssistantAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing <see cref="T:OpenAI.Assistants.Assistant"/>. 
            </summary>
            <param name="assistantId"> The ID of the assistant to delete. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.Assistants.AssistantDeletionResult"/> instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.DeleteAssistant(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing <see cref="T:OpenAI.Assistants.Assistant"/>. 
            </summary>
            <param name="assistantId"> The ID of the assistant to delete. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.Assistants.AssistantDeletionResult"/> instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateThreadAsync(OpenAI.Assistants.ThreadCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a new <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="options"> Additional options to use when creating the thread. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A new thread. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateThread(OpenAI.Assistants.ThreadCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a new <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="options"> Additional options to use when creating the thread. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A new thread. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetThreadAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an existing <see cref="T:OpenAI.Assistants.AssistantThread"/>, retrieved via a known ID.
            </summary>
            <param name="threadId"> The ID of the thread to retrieve. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> The existing thread instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetThread(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an existing <see cref="T:OpenAI.Assistants.AssistantThread"/>, retrieved via a known ID.
            </summary>
            <param name="threadId"> The ID of the thread to retrieve. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> The existing thread instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.ModifyThreadAsync(System.String,OpenAI.Assistants.ThreadModificationOptions,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="threadId"> The ID of the thread to modify. </param>
            <param name="options"> The modifications to apply to the thread. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> The updated <see cref="T:OpenAI.Assistants.AssistantThread"/> instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.ModifyThread(System.String,OpenAI.Assistants.ThreadModificationOptions,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="threadId"> The ID of the thread to modify. </param>
            <param name="options"> The modifications to apply to the thread. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> The updated <see cref="T:OpenAI.Assistants.AssistantThread"/> instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.DeleteThreadAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="threadId"> The ID of the thread to delete. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.Assistants.ThreadDeletionResult"/> instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.DeleteThread(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="threadId"> The ID of the thread to delete. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.Assistants.ThreadDeletionResult"/> instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateMessageAsync(System.String,OpenAI.Assistants.MessageRole,System.Collections.Generic.IEnumerable{OpenAI.Assistants.MessageContent},OpenAI.Assistants.MessageCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a new <see cref="T:OpenAI.Assistants.ThreadMessage"/> on an existing <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="threadId"> The ID of the thread to associate the new message with. </param>
            <param name="role"> The role to associate with the new message. </param>
            <param name="content"> The collection of <see cref="T:OpenAI.Assistants.MessageContent"/> items for the message. </param>
            <param name="options"> Additional options to apply to the new message. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A new <see cref="T:OpenAI.Assistants.ThreadMessage"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateMessage(System.String,OpenAI.Assistants.MessageRole,System.Collections.Generic.IEnumerable{OpenAI.Assistants.MessageContent},OpenAI.Assistants.MessageCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a new <see cref="T:OpenAI.Assistants.ThreadMessage"/> on an existing <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="threadId"> The ID of the thread to associate the new message with. </param>
            <param name="role"> The role to associate with the new message. </param>
            <param name="content"> The collection of <see cref="T:OpenAI.Assistants.MessageContent"/> items for the message. </param>
            <param name="options"> Additional options to apply to the new message. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A new <see cref="T:OpenAI.Assistants.ThreadMessage"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetMessagesAsync(System.String,OpenAI.Assistants.MessageCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a page collection of <see cref="T:OpenAI.Assistants.ThreadMessage"/> instances from an existing <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="threadId"> The ID of the thread to list messages from. </param>
            <param name="options"> Options describing the collection to return. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.ThreadMessage"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetMessagesAsync(System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Rehydrates a page collection of <see cref="T:OpenAI.Assistants.ThreadMessage"/> instances from a page token.
            </summary>
            <param name="firstPageToken"> Page token corresponding to the first page of the collection to rehydrate. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.ThreadMessage"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetMessages(System.String,OpenAI.Assistants.MessageCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a page collection holding <see cref="T:OpenAI.Assistants.ThreadMessage"/> instances from an existing <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="threadId"> The ID of the thread to list messages from. </param>
            <param name="options"> Options describing the collection to return. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.ThreadMessage"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetMessages(System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Rehydrates a page collection holding <see cref="T:OpenAI.Assistants.ThreadMessage"/> instances from a page token.
            </summary>
            <param name="firstPageToken"> Page token corresponding to the first page of the collection to rehydrate. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.ThreadMessage"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetMessageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an existing <see cref="T:OpenAI.Assistants.ThreadMessage"/> from a known <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="threadId"> The ID of the thread to retrieve the message from. </param>
            <param name="messageId"> The ID of the message to retrieve. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> The existing <see cref="T:OpenAI.Assistants.ThreadMessage"/> instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetMessage(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an existing <see cref="T:OpenAI.Assistants.ThreadMessage"/> from a known <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="threadId"> The ID of the thread to retrieve the message from. </param>
            <param name="messageId"> The ID of the message to retrieve. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> The existing <see cref="T:OpenAI.Assistants.ThreadMessage"/> instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.ModifyMessageAsync(System.String,System.String,OpenAI.Assistants.MessageModificationOptions,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing <see cref="T:OpenAI.Assistants.ThreadMessage"/>.
            </summary>
            <param name="threadId"> The ID of the thread associated with the message to modify. </param>
            <param name="messageId"> The ID of the message to modify. </param>
            <param name="options"> The changes to apply to the message. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> The updated <see cref="T:OpenAI.Assistants.ThreadMessage"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.ModifyMessage(System.String,System.String,OpenAI.Assistants.MessageModificationOptions,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing <see cref="T:OpenAI.Assistants.ThreadMessage"/>.
            </summary>
            <param name="threadId"> The ID of the thread associated with the message to modify. </param>
            <param name="messageId"> The ID of the message to modify. </param>
            <param name="options"> The changes to apply to the message. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> The updated <see cref="T:OpenAI.Assistants.ThreadMessage"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.DeleteMessageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing <see cref="T:OpenAI.Assistants.ThreadMessage"/>.
            </summary>
            <param name="threadId"> The ID of the thread associated with the message. </param>
            <param name="messageId"> The ID of the message. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.Assistants.MessageDeletionResult"/> instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.DeleteMessage(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing <see cref="T:OpenAI.Assistants.ThreadMessage"/>.
            </summary>
            <param name="threadId"> The ID of the thread associated with the message. </param>
            <param name="messageId"> The ID of the message. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.Assistants.MessageDeletionResult"/> instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateRunAsync(System.String,System.String,OpenAI.Assistants.RunCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Begins a new <see cref="T:OpenAI.Assistants.ThreadRun"/> that evaluates a <see cref="T:OpenAI.Assistants.AssistantThread"/> using a specified
            <see cref="T:OpenAI.Assistants.Assistant"/>.
            </summary>
            <param name="threadId"> The ID of the thread that the run should evaluate. </param>
            <param name="assistantId"> The ID of the assistant that should be used when evaluating the thread. </param>
            <param name="options"> Additional options for the run. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A new <see cref="T:OpenAI.Assistants.ThreadRun"/> instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateRun(System.String,System.String,OpenAI.Assistants.RunCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Begins a new <see cref="T:OpenAI.Assistants.ThreadRun"/> that evaluates a <see cref="T:OpenAI.Assistants.AssistantThread"/> using a specified
            <see cref="T:OpenAI.Assistants.Assistant"/>.
            </summary>
            <param name="threadId"> The ID of the thread that the run should evaluate. </param>
            <param name="assistantId"> The ID of the assistant that should be used when evaluating the thread. </param>
            <param name="options"> Additional options for the run. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A new <see cref="T:OpenAI.Assistants.ThreadRun"/> instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateRunStreamingAsync(System.String,System.String,OpenAI.Assistants.RunCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Begins a new streaming <see cref="T:OpenAI.Assistants.ThreadRun"/> that evaluates a <see cref="T:OpenAI.Assistants.AssistantThread"/> using a specified
            <see cref="T:OpenAI.Assistants.Assistant"/>.
            </summary>
            <param name="threadId"> The ID of the thread that the run should evaluate. </param>
            <param name="assistantId"> The ID of the assistant that should be used when evaluating the thread. </param>
            <param name="options"> Additional options for the run. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateRunStreaming(System.String,System.String,OpenAI.Assistants.RunCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Begins a new streaming <see cref="T:OpenAI.Assistants.ThreadRun"/> that evaluates a <see cref="T:OpenAI.Assistants.AssistantThread"/> using a specified
            <see cref="T:OpenAI.Assistants.Assistant"/>.
            </summary>
            <param name="threadId"> The ID of the thread that the run should evaluate. </param>
            <param name="assistantId"> The ID of the assistant that should be used when evaluating the thread. </param>
            <param name="options"> Additional options for the run. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateThreadAndRunAsync(System.String,OpenAI.Assistants.ThreadCreationOptions,OpenAI.Assistants.RunCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a new thread and immediately begins a run against it using the specified <see cref="T:OpenAI.Assistants.Assistant"/>.
            </summary>
            <param name="assistantId"> The ID of the assistant that the new run should use. </param>
            <param name="threadOptions"> Options for the new thread that will be created. </param>
            <param name="runOptions"> Additional options to apply to the run that will begin. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A new <see cref="T:OpenAI.Assistants.ThreadRun"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateThreadAndRun(System.String,OpenAI.Assistants.ThreadCreationOptions,OpenAI.Assistants.RunCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a new thread and immediately begins a run against it using the specified <see cref="T:OpenAI.Assistants.Assistant"/>.
            </summary>
            <param name="assistantId"> The ID of the assistant that the new run should use. </param>
            <param name="threadOptions"> Options for the new thread that will be created. </param>
            <param name="runOptions"> Additional options to apply to the run that will begin. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A new <see cref="T:OpenAI.Assistants.ThreadRun"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateThreadAndRunStreamingAsync(System.String,OpenAI.Assistants.ThreadCreationOptions,OpenAI.Assistants.RunCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a new thread and immediately begins a streaming run against it using the specified <see cref="T:OpenAI.Assistants.Assistant"/>.
            </summary>
            <param name="assistantId"> The ID of the assistant that the new run should use. </param>
            <param name="threadOptions"> Options for the new thread that will be created. </param>
            <param name="runOptions"> Additional options to apply to the run that will begin. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateThreadAndRunStreaming(System.String,OpenAI.Assistants.ThreadCreationOptions,OpenAI.Assistants.RunCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a new thread and immediately begins a streaming run against it using the specified <see cref="T:OpenAI.Assistants.Assistant"/>.
            </summary>
            <param name="assistantId"> The ID of the assistant that the new run should use. </param>
            <param name="threadOptions"> Options for the new thread that will be created. </param>
            <param name="runOptions"> Additional options to apply to the run that will begin. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRunsAsync(System.String,OpenAI.Assistants.RunCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a page collection holding <see cref="T:OpenAI.Assistants.ThreadRun"/> instances associated with an existing <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="threadId"> The ID of the thread that runs in the list should be associated with. </param>
            <param name="options"> Options describing the collection to return. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.ThreadRun"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRunsAsync(System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Rehydrates a page collection holding <see cref="T:OpenAI.Assistants.ThreadRun"/> instances from a page token.
            </summary>
            <param name="firstPageToken"> Page token corresponding to the first page of the collection to rehydrate. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.ThreadRun"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRuns(System.String,OpenAI.Assistants.RunCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a page collection holding <see cref="T:OpenAI.Assistants.ThreadRun"/> instances associated with an existing <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="threadId"> The ID of the thread that runs in the list should be associated with. </param>
            <param name="options"> Options describing the collection to return. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.ThreadRun"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRuns(System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Rehydrates a page collection holding <see cref="T:OpenAI.Assistants.ThreadRun"/> instances from a page token.
            </summary>
            <param name="firstPageToken"> Page token corresponding to the first page of the collection to rehydrate. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.ThreadRun"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRunAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an existing <see cref="T:OpenAI.Assistants.ThreadRun"/> from a known <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="threadId"> The ID of the thread to retrieve the run from. </param>
            <param name="runId"> The ID of the run to retrieve. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> The existing <see cref="T:OpenAI.Assistants.ThreadRun"/> instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRun(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an existing <see cref="T:OpenAI.Assistants.ThreadRun"/> from a known <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
            <param name="threadId"> The ID of the thread to retrieve the run from. </param>
            <param name="runId"> The ID of the run to retrieve. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> The existing <see cref="T:OpenAI.Assistants.ThreadRun"/> instance. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.SubmitToolOutputsToRunAsync(System.String,System.String,System.Collections.Generic.IEnumerable{OpenAI.Assistants.ToolOutput},System.Threading.CancellationToken)">
            <summary>
            Submits a collection of required tool call outputs to a run and resumes the run.
            </summary>
            <param name="threadId"> The thread ID of the thread being run. </param>
            <param name="runId"> The ID of the run that reached a <c>requires_action</c> status. </param>
            <param name="toolOutputs">
            The tool outputs, corresponding to <see cref="T:OpenAI.Assistants.InternalRequiredToolCall"/> instances from the run.
            </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> The <see cref="T:OpenAI.Assistants.ThreadRun"/>, updated after the submission was processed. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.SubmitToolOutputsToRun(System.String,System.String,System.Collections.Generic.IEnumerable{OpenAI.Assistants.ToolOutput},System.Threading.CancellationToken)">
            <summary>
            Submits a collection of required tool call outputs to a run and resumes the run.
            </summary>
            <param name="threadId"> The thread ID of the thread being run. </param>
            <param name="runId"> The ID of the run that reached a <c>requires_action</c> status. </param>
            <param name="toolOutputs">
            The tool outputs, corresponding to <see cref="T:OpenAI.Assistants.InternalRequiredToolCall"/> instances from the run.
            </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> The <see cref="T:OpenAI.Assistants.ThreadRun"/>, updated after the submission was processed. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.SubmitToolOutputsToRunStreamingAsync(System.String,System.String,System.Collections.Generic.IEnumerable{OpenAI.Assistants.ToolOutput},System.Threading.CancellationToken)">
            <summary>
            Submits a collection of required tool call outputs to a run and resumes the run with streaming enabled.
            </summary>
            <param name="threadId"> The thread ID of the thread being run. </param>
            <param name="runId"> The ID of the run that reached a <c>requires_action</c> status. </param>
            <param name="toolOutputs">
            The tool outputs, corresponding to <see cref="T:OpenAI.Assistants.InternalRequiredToolCall"/> instances from the run.
            </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.SubmitToolOutputsToRunStreaming(System.String,System.String,System.Collections.Generic.IEnumerable{OpenAI.Assistants.ToolOutput},System.Threading.CancellationToken)">
            <summary>
            Submits a collection of required tool call outputs to a run and resumes the run with streaming enabled.
            </summary>
            <param name="threadId"> The thread ID of the thread being run. </param>
            <param name="runId"> The ID of the run that reached a <c>requires_action</c> status. </param>
            <param name="toolOutputs">
            The tool outputs, corresponding to <see cref="T:OpenAI.Assistants.InternalRequiredToolCall"/> instances from the run.
            </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CancelRunAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels an in-progress <see cref="T:OpenAI.Assistants.ThreadRun"/>.
            </summary>
            <param name="threadId"> The ID of the thread associated with the run. </param>
            <param name="runId"> The ID of the run to cancel. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> An updated <see cref="T:OpenAI.Assistants.ThreadRun"/> instance, reflecting the new status of the run. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CancelRun(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels an in-progress <see cref="T:OpenAI.Assistants.ThreadRun"/>.
            </summary>
            <param name="threadId"> The ID of the thread associated with the run. </param>
            <param name="runId"> The ID of the run to cancel. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> An updated <see cref="T:OpenAI.Assistants.ThreadRun"/> instance, reflecting the new status of the run. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRunStepsAsync(System.String,System.String,OpenAI.Assistants.RunStepCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a page collection holding <see cref="T:OpenAI.Assistants.RunStep"/> instances associated with a <see cref="T:OpenAI.Assistants.ThreadRun"/>.
            </summary>
            <param name="threadId"> The ID of the thread associated with the run. </param>
            <param name="runId"> The ID of the run to list run steps from. </param>
            <param name="options"></param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.RunStep"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRunStepsAsync(System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Rehydrates a page collection holding <see cref="T:OpenAI.Assistants.RunStep"/> instances from a page token.
            </summary>
            <param name="firstPageToken"> Page token corresponding to the first page of the collection to rehydrate. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.RunStep"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRunSteps(System.String,System.String,OpenAI.Assistants.RunStepCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a page collection holding <see cref="T:OpenAI.Assistants.RunStep"/> instances associated with a <see cref="T:OpenAI.Assistants.ThreadRun"/>.
            </summary>
            <param name="threadId"> The ID of the thread associated with the run. </param>
            <param name="runId"> The ID of the run to list run steps from. </param>
            <param name="options"></param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.RunStep"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRunSteps(System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Rehydrates a page collection holding <see cref="T:OpenAI.Assistants.RunStep"/> instances from a page token.
            </summary>
            <param name="firstPageToken"> Page token corresponding to the first page of the collection to rehydrate. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.Assistants.RunStep"/>. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRunStepAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a single run step from a run.
            </summary>
            <param name="threadId"> The ID of the thread associated with the run. </param>
            <param name="runId"> The ID of the run. </param>
            <param name="stepId"> The ID of the run step. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.Assistants.RunStep"/> instance corresponding to the specified step. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRunStep(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a single run step from a run.
            </summary>
            <param name="threadId"> The ID of the thread associated with the run. </param>
            <param name="runId"> The ID of the run. </param>
            <param name="stepId"> The ID of the run step. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.Assistants.RunStep"/> instance corresponding to the specified step. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateAssistantAsync(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Create an assistant with a model and instructions.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateAssistant(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Create an assistant with a model and instructions.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetAssistantsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Returns a paginated collection of assistants.
            </summary>
            <param name="limit">
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the
            default is 20.
            </param>
            <param name="order">
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`
            for descending order. Allowed values: "asc" | "desc"
            </param>
            <param name="after">
            A cursor for use in pagination. `after` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include after=obj_foo in order to fetch the next page of the list.
            </param>
            <param name="before">
            A cursor for use in pagination. `before` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include before=obj_foo in order to fetch the previous page of the list.
            </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A collection of service responses, each holding a page of values. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetAssistants(System.Nullable{System.Int32},System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Returns a paginated collection of assistants.
            </summary>
            <param name="limit">
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the
            default is 20.
            </param>
            <param name="order">
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`
            for descending order. Allowed values: "asc" | "desc"
            </param>
            <param name="after">
            A cursor for use in pagination. `after` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include after=obj_foo in order to fetch the next page of the list.
            </param>
            <param name="before">
            A cursor for use in pagination. `before` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include before=obj_foo in order to fetch the previous page of the list.
            </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A collection of service responses, each holding a page of values. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetAssistantAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves an assistant.
            </summary>
            <param name="assistantId"> The ID of the assistant to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="assistantId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="assistantId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetAssistant(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves an assistant.
            </summary>
            <param name="assistantId"> The ID of the assistant to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="assistantId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="assistantId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.ModifyAssistantAsync(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Modifies an assistant.
            </summary>
            <param name="assistantId"> The ID of the assistant to modify. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="assistantId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="assistantId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.ModifyAssistant(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Modifies an assistant.
            </summary>
            <param name="assistantId"> The ID of the assistant to modify. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="assistantId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="assistantId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.DeleteAssistantAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Delete an assistant.
            </summary>
            <param name="assistantId"> The ID of the assistant to delete. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="assistantId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="assistantId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.DeleteAssistant(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Delete an assistant.
            </summary>
            <param name="assistantId"> The ID of the assistant to delete. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="assistantId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="assistantId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateMessageAsync(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantMessageClient.CreateMessageAsync(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateMessage(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantMessageClient.CreateMessage(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetMessagesAsync(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Returns a paginated collection of messages for a given thread.
            </summary>
            <param name="threadId"> The ID of the [thread](/docs/api-reference/threads) the messages belong to. </param>
            <param name="limit">
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the
            default is 20.
            </param>
            <param name="order">
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`
            for descending order. Allowed values: "asc" | "desc"
            </param>
            <param name="after">
            A cursor for use in pagination. `after` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include after=obj_foo in order to fetch the next page of the list.
            </param>
            <param name="before">
            A cursor for use in pagination. `before` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include before=obj_foo in order to fetch the previous page of the list.
            </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A collection of service responses, each holding a page of values. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetMessages(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Returns a paginated collection of messages for a given thread.
            </summary>
            <param name="threadId"> The ID of the [thread](/docs/api-reference/threads) the messages belong to. </param>
            <param name="limit">
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the
            default is 20.
            </param>
            <param name="order">
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`
            for descending order. Allowed values: "asc" | "desc"
            </param>
            <param name="after">
            A cursor for use in pagination. `after` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include after=obj_foo in order to fetch the next page of the list.
            </param>
            <param name="before">
            A cursor for use in pagination. `before` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include before=obj_foo in order to fetch the previous page of the list.
            </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A collection of service responses, each holding a page of values. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetMessageAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantMessageClient.GetMessageAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetMessage(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantMessageClient.GetMessage(System.String,System.String,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.ModifyMessageAsync(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantMessageClient.ModifyMessageAsync(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.ModifyMessage(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantMessageClient.ModifyMessage(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.DeleteMessageAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantMessageClient.DeleteMessageAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.DeleteMessage(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantMessageClient.DeleteMessage(System.String,System.String,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateThreadAndRunAsync(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantRunClient.CreateThreadAndRunAsync(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateThreadAndRun(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantRunClient.CreateThreadAndRun(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateRunAsync(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantRunClient.CreateRunAsync(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateRun(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantRunClient.CreateRun(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRunsAsync(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Returns a paginated collection of runs belonging to a thread.
            </summary>
            <param name="threadId"> The ID of the thread the run belongs to. </param>
            <param name="limit">
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the
            default is 20.
            </param>
            <param name="order">
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`
            for descending order. Allowed values: "asc" | "desc"
            </param>
            <param name="after">
            A cursor for use in pagination. `after` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include after=obj_foo in order to fetch the next page of the list.
            </param>
            <param name="before">
            A cursor for use in pagination. `before` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include before=obj_foo in order to fetch the previous page of the list.
            </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A collection of service responses, each holding a page of values. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRuns(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Returns a paginated collection of runs belonging to a thread.
            </summary>
            <param name="threadId"> The ID of the thread the run belongs to. </param>
            <param name="limit">
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the
            default is 20.
            </param>
            <param name="order">
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`
            for descending order. Allowed values: "asc" | "desc"
            </param>
            <param name="after">
            A cursor for use in pagination. `after` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include after=obj_foo in order to fetch the next page of the list.
            </param>
            <param name="before">
            A cursor for use in pagination. `before` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include before=obj_foo in order to fetch the previous page of the list.
            </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A collection of service responses, each holding a page of values. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRunAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantRunClient.GetRunAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRun(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantRunClient.GetRun(System.String,System.String,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.ModifyRunAsync(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantRunClient.ModifyRunAsync(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.ModifyRun(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantRunClient.ModifyRun(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CancelRunAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantRunClient.CancelRunAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CancelRun(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantRunClient.CancelRun(System.String,System.String,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.SubmitToolOutputsToRunAsync(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantRunClient.SubmitToolOutputsToRunAsync(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.SubmitToolOutputsToRun(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantRunClient.SubmitToolOutputsToRun(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRunStepsAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Returns a paginated collection of run steps belonging to a run.
            </summary>
            <param name="threadId"> The ID of the thread the run and run steps belong to. </param>
            <param name="runId"> The ID of the run the run steps belong to. </param>
            <param name="limit">
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the
            default is 20.
            </param>
            <param name="order">
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`
            for descending order. Allowed values: "asc" | "desc"
            </param>
            <param name="after">
            A cursor for use in pagination. `after` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include after=obj_foo in order to fetch the next page of the list.
            </param>
            <param name="before">
            A cursor for use in pagination. `before` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include before=obj_foo in order to fetch the previous page of the list.
            </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="runId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="runId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A collection of service responses, each holding a page of values. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRunSteps(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Returns a paginated collection of run steps belonging to a run.
            </summary>
            <param name="threadId"> The ID of the thread the run and run steps belong to. </param>
            <param name="runId"> The ID of the run the run steps belong to. </param>
            <param name="limit">
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the
            default is 20.
            </param>
            <param name="order">
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`
            for descending order. Allowed values: "asc" | "desc"
            </param>
            <param name="after">
            A cursor for use in pagination. `after` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include after=obj_foo in order to fetch the next page of the list.
            </param>
            <param name="before">
            A cursor for use in pagination. `before` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include before=obj_foo in order to fetch the previous page of the list.
            </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="runId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="runId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A collection of service responses, each holding a page of values. </returns>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRunStepAsync(System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantRunClient.GetRunStepAsync(System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetRunStep(System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantRunClient.GetRunStep(System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateThreadAsync(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantThreadClient.CreateThreadAsync(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.CreateThread(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantThreadClient.CreateThread(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetThreadAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantThreadClient.GetThreadAsync(System.String,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.GetThread(System.String,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantThreadClient.GetThread(System.String,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.ModifyThreadAsync(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantThreadClient.ModifyThreadAsync(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.ModifyThread(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantThreadClient.ModifyThread(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.DeleteThreadAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantThreadClient.DeleteThreadAsync(System.String,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="M:OpenAI.Assistants.AssistantClient.DeleteThread(System.String,System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc cref="M:OpenAI.Assistants.InternalAssistantThreadClient.DeleteThread(System.String,System.ClientModel.Primitives.RequestOptions)"/>
        </member>
        <member name="T:OpenAI.Assistants.AssistantCollectionOptions">
            <summary> The options to configure how <see cref="T:OpenAI.Assistants.Assistant"/> objects are retrieved and paginated. </summary>
        </member>
        <member name="M:OpenAI.Assistants.AssistantCollectionOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Assistants.AssistantCollectionOptions"/>. </summary>
        </member>
        <member name="P:OpenAI.Assistants.AssistantCollectionOptions.PageSizeLimit">
            <summary> 
                A limit on the number of <see cref="T:OpenAI.Assistants.Assistant"/> objects to be returned per page.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.AssistantCollectionOptions.Order">
            <summary>
                The order in which to retrieve <see cref="T:OpenAI.Assistants.Assistant"/> objects when sorted by their
                <see cref="P:OpenAI.Assistants.Assistant.CreatedAt"/> timestamp.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.AssistantCollectionOptions.AfterId">
            <summary>
                The <see cref="P:OpenAI.Assistants.Assistant.Id"/> used to retrieve the page of <see cref="T:OpenAI.Assistants.Assistant"/> objects that come
                after this one.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.AssistantCollectionOptions.BeforeId">
            <summary>
                The <see cref="P:OpenAI.Assistants.Assistant.Id"/> used to retrieve the page of <see cref="T:OpenAI.Assistants.Assistant"/> objects that come
                before this one.
            </summary>
        </member>
        <member name="T:OpenAI.Assistants.AssistantCreationOptions">
            <summary>
            Represents additional options available when creating a new <see cref="T:OpenAI.Assistants.Assistant"/>.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.AssistantCreationOptions.Tools">
            <summary>
            <para>
            A list of tool enabled on the assistant.
            </para>
            There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `file_search`, or `function`.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.AssistantCreationOptions.ToolResources">
            <inheritdoc cref="P:OpenAI.Assistants.AssistantCreationOptions.ToolResources"/>
        </member>
        <member name="P:OpenAI.Assistants.AssistantCreationOptions.ResponseFormat">
            <inheritdoc cref="T:OpenAI.Assistants.AssistantResponseFormat"/>
        </member>
        <member name="P:OpenAI.Assistants.AssistantCreationOptions.NucleusSamplingFactor">
             <summary>
             An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.
            
             We generally recommend altering this or temperature but not both.
             </summary>
        </member>
        <member name="M:OpenAI.Assistants.AssistantCreationOptions.#ctor">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Assistants.AssistantCreationOptions"/>.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.AssistantDeletionResult.Object">
            <summary> The object type, which is always `assistant.deleted`. </summary>
        </member>
        <member name="T:OpenAI.Assistants.AssistantModificationOptions">
            <summary>
            Represents additional options available when modifying an existing <see cref="T:OpenAI.Assistants.Assistant"/>.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.AssistantModificationOptions.Model">
            <summary>
            The replacement model that the assistant should use.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.AssistantModificationOptions.DefaultTools">
            <summary>
            <para>
            A list of tool enabled on the assistant.
            </para>
            There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `file_search`, or `function`.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.AssistantModificationOptions.ToolResources">
            <inheritdoc cref="P:OpenAI.Assistants.AssistantModificationOptions.ToolResources"/>
        </member>
        <member name="P:OpenAI.Assistants.AssistantModificationOptions.ResponseFormat">
            <inheritdoc cref="T:OpenAI.Assistants.AssistantResponseFormat"/>
        </member>
        <member name="P:OpenAI.Assistants.AssistantModificationOptions.NucleusSamplingFactor">
             <summary>
             An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.
            
             We generally recommend altering this or temperature but not both.
             </summary>
        </member>
        <member name="P:OpenAI.Assistants.AssistantThread.Object">
            <summary> The object type, which is always `thread`. </summary>
        </member>
        <member name="P:OpenAI.Assistants.AssistantThread.ToolResources">
            <summary>
            The set of resources that are made available to the assistant's tools on this thread.
            The resources are specific to the type of tool.
            For example, the `code_interpreter` tool requires a list of file IDs, while the `file_search` tool requires a list of vector store IDs.
            </summary>
        </member>
        <member name="T:OpenAI.Assistants.CodeInterpreterToolResources">
            <summary> The AssistantObjectToolResourcesCodeInterpreter. </summary>
        </member>
        <member name="P:OpenAI.Assistants.CodeInterpreterToolResources.FileIds">
            <summary> A list of [file](/docs/api-reference/files) IDs made available to the `code_interpreter`` tool. There can be a maximum of 20 files associated with the tool. </summary>
        </member>
        <member name="M:OpenAI.Assistants.FileSearchToolDefinition.#ctor">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Assistants.FileSearchToolDefinition"/>.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.FunctionToolDefinition.FunctionName">
            <inheritdoc cref="P:OpenAI.InternalFunctionDefinition.Name"/>
        </member>
        <member name="P:OpenAI.Assistants.FunctionToolDefinition.Description">
            <inheritdoc cref="P:OpenAI.InternalFunctionDefinition.Description"/>
        </member>
        <member name="P:OpenAI.Assistants.FunctionToolDefinition.Parameters">
            <inheritdoc cref="F:OpenAI.InternalFunctionDefinition.Parameters"/>
        </member>
        <member name="M:OpenAI.Assistants.FunctionToolDefinition.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Assistants.FunctionToolDefinition"/>. 
            </summary>
        </member>
        <member name="M:OpenAI.Assistants.FunctionToolDefinition.#ctor">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Assistants.FunctionToolDefinition"/>. 
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunStepCodeInterpreterOutput.ImageFileId">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDetailsToolCallsCodeOutputImageObject.FileId"/>
        </member>
        <member name="P:OpenAI.Assistants.RunStepCodeInterpreterOutput.Logs">
            <inheritdoc cref="!:InternalRunStepCodeInterpreterLogOutput.Logs"/>
        </member>
        <member name="P:OpenAI.Assistants.InternalAssistantMessageClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Assistants.InternalAssistantMessageClient.#ctor(System.ClientModel.ApiKeyCredential)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Assistants.InternalAssistantMessageClient.#ctor(System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Assistants.InternalAssistantMessageClient.#ctor(System.ClientModel.Primitives.ClientPipeline,OpenAI.OpenAIClientOptions)" -->
        <member name="M:OpenAI.Assistants.InternalAssistantMessageClient.CreateMessageAsync(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Create a message.
            </summary>
            <param name="threadId"> The ID of the [thread](/docs/api-reference/threads) to create a message for. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantMessageClient.CreateMessage(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Create a message.
            </summary>
            <param name="threadId"> The ID of the [thread](/docs/api-reference/threads) to create a message for. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantMessageClient.GetMessageAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieve a message.
            </summary>
            <param name="threadId"> The ID of the [thread](/docs/api-reference/threads) to which this message belongs. </param>
            <param name="messageId"> The ID of the message to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="messageId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="messageId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantMessageClient.GetMessage(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieve a message.
            </summary>
            <param name="threadId"> The ID of the [thread](/docs/api-reference/threads) to which this message belongs. </param>
            <param name="messageId"> The ID of the message to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="messageId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="messageId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantMessageClient.ModifyMessageAsync(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Modifies a message.
            </summary>
            <param name="threadId"> The ID of the thread to which this message belongs. </param>
            <param name="messageId"> The ID of the message to modify. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/>, <paramref name="messageId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="messageId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantMessageClient.ModifyMessage(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Modifies a message.
            </summary>
            <param name="threadId"> The ID of the thread to which this message belongs. </param>
            <param name="messageId"> The ID of the message to modify. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/>, <paramref name="messageId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="messageId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantMessageClient.DeleteMessageAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Deletes a message.
            </summary>
            <param name="threadId"> The ID of the thread to which this message belongs. </param>
            <param name="messageId"> The ID of the message to delete. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="messageId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="messageId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantMessageClient.DeleteMessage(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Deletes a message.
            </summary>
            <param name="threadId"> The ID of the thread to which this message belongs. </param>
            <param name="messageId"> The ID of the message to delete. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="messageId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="messageId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="P:OpenAI.Assistants.InternalAssistantRunClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Assistants.InternalAssistantRunClient.#ctor(System.ClientModel.ApiKeyCredential)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Assistants.InternalAssistantRunClient.#ctor(System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Assistants.InternalAssistantRunClient.#ctor(System.ClientModel.Primitives.ClientPipeline,OpenAI.OpenAIClientOptions)" -->
        <member name="M:OpenAI.Assistants.InternalAssistantRunClient.CreateThreadAndRunAsync(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Create a thread and run it in one request.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantRunClient.CreateThreadAndRun(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Create a thread and run it in one request.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantRunClient.CreateRunAsync(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Create a run.
            </summary>
            <param name="threadId"> The ID of the thread to run. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantRunClient.CreateRun(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Create a run.
            </summary>
            <param name="threadId"> The ID of the thread to run. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantRunClient.GetRunAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a run.
            </summary>
            <param name="threadId"> The ID of the [thread](/docs/api-reference/threads) that was run. </param>
            <param name="runId"> The ID of the run to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="runId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="runId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantRunClient.GetRun(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a run.
            </summary>
            <param name="threadId"> The ID of the [thread](/docs/api-reference/threads) that was run. </param>
            <param name="runId"> The ID of the run to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="runId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="runId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantRunClient.ModifyRunAsync(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Modifies a run.
            </summary>
            <param name="threadId"> The ID of the [thread](/docs/api-reference/threads) that was run. </param>
            <param name="runId"> The ID of the run to modify. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/>, <paramref name="runId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="runId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantRunClient.ModifyRun(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Modifies a run.
            </summary>
            <param name="threadId"> The ID of the [thread](/docs/api-reference/threads) that was run. </param>
            <param name="runId"> The ID of the run to modify. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/>, <paramref name="runId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="runId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantRunClient.CancelRunAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Cancels a run that is `in_progress`.
            </summary>
            <param name="threadId"> The ID of the thread to which this run belongs. </param>
            <param name="runId"> The ID of the run to cancel. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="runId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="runId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantRunClient.CancelRun(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Cancels a run that is `in_progress`.
            </summary>
            <param name="threadId"> The ID of the thread to which this run belongs. </param>
            <param name="runId"> The ID of the run to cancel. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="runId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="runId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantRunClient.SubmitToolOutputsToRunAsync(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] When a run has the `status: "requires_action"` and `required_action.type` is
            `submit_tool_outputs`, this endpoint can be used to submit the outputs from the tool calls once
            they're all completed. All outputs must be submitted in a single request.
            </summary>
            <param name="threadId"> The ID of the [thread](/docs/api-reference/threads) to which this run belongs. </param>
            <param name="runId"> The ID of the run that requires the tool output submission. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/>, <paramref name="runId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="runId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantRunClient.SubmitToolOutputsToRun(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] When a run has the `status: "requires_action"` and `required_action.type` is
            `submit_tool_outputs`, this endpoint can be used to submit the outputs from the tool calls once
            they're all completed. All outputs must be submitted in a single request.
            </summary>
            <param name="threadId"> The ID of the [thread](/docs/api-reference/threads) to which this run belongs. </param>
            <param name="runId"> The ID of the run that requires the tool output submission. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/>, <paramref name="runId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> or <paramref name="runId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantRunClient.GetRunStepAsync(System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a run step.
            </summary>
            <param name="threadId"> The ID of the thread to which the run and run step belongs. </param>
            <param name="runId"> The ID of the run to which the run step belongs. </param>
            <param name="stepId"> The ID of the run step to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/>, <paramref name="runId"/> or <paramref name="stepId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/>, <paramref name="runId"/> or <paramref name="stepId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantRunClient.GetRunStep(System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a run step.
            </summary>
            <param name="threadId"> The ID of the thread to which the run and run step belongs. </param>
            <param name="runId"> The ID of the run to which the run step belongs. </param>
            <param name="stepId"> The ID of the run step to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/>, <paramref name="runId"/> or <paramref name="stepId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/>, <paramref name="runId"/> or <paramref name="stepId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="P:OpenAI.Assistants.InternalAssistantThreadClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Assistants.InternalAssistantThreadClient.#ctor(System.ClientModel.ApiKeyCredential)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Assistants.InternalAssistantThreadClient.#ctor(System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Assistants.InternalAssistantThreadClient.#ctor(System.ClientModel.Primitives.ClientPipeline,OpenAI.OpenAIClientOptions)" -->
        <member name="M:OpenAI.Assistants.InternalAssistantThreadClient.CreateThreadAsync(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Create a thread.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantThreadClient.CreateThread(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Create a thread.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantThreadClient.GetThreadAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a thread.
            </summary>
            <param name="threadId"> The ID of the thread to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantThreadClient.GetThread(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a thread.
            </summary>
            <param name="threadId"> The ID of the thread to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantThreadClient.ModifyThreadAsync(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Modifies a thread.
            </summary>
            <param name="threadId"> The ID of the thread to modify. Only the `metadata` can be modified. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantThreadClient.ModifyThread(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Modifies a thread.
            </summary>
            <param name="threadId"> The ID of the thread to modify. Only the `metadata` can be modified. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantThreadClient.DeleteThreadAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Delete a thread.
            </summary>
            <param name="threadId"> The ID of the thread to delete. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Assistants.InternalAssistantThreadClient.DeleteThread(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Delete a thread.
            </summary>
            <param name="threadId"> The ID of the thread to delete. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="threadId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="threadId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="T:OpenAI.Assistants.InternalMessageImageFileContent">
            <summary>
            Represents an item of image file content within an Assistants API message.
            </summary>
            <remarks>
            Use the <see cref="M:OpenAI.Assistants.MessageContent.FromImageFileId(System.String,System.Nullable{OpenAI.Assistants.MessageImageDetail})"/> method to
            create an instance of this type.
            </remarks>
        </member>
        <member name="P:OpenAI.Assistants.InternalMessageImageFileContent.InternalFileId">
            <inheritdoc cref="P:OpenAI.Assistants.InternalMessageContentItemFileObjectImageFile.FileId"/>
        </member>
        <member name="P:OpenAI.Assistants.InternalMessageImageFileContent.InternalDetail">
            <inheritdoc cref="P:OpenAI.Assistants.InternalMessageContentItemFileObjectImageFile.Detail"/>
        </member>
        <member name="M:OpenAI.Assistants.InternalMessageImageFileContent.#ctor(System.String,System.Nullable{OpenAI.Assistants.MessageImageDetail})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Assistants.InternalMessageImageFileContent"/>. </summary>
        </member>
        <member name="M:OpenAI.Assistants.InternalMessageImageFileContent.#ctor(OpenAI.Assistants.InternalMessageContentItemFileObjectImageFile)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Assistants.InternalMessageImageFileContent"/>. </summary>
            <param name="imageFile"></param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageFile"/> is null. </exception>
        </member>
        <member name="T:OpenAI.Assistants.InternalMessageImageUrlContent">
            <summary>
            Represents an item of image URL content within an Assistants API message.
            </summary>
            <remarks>
            Use the <see cref="!:MessageContent.FromImageUrl(Uri,MessageImageDetail?)"/> method to
            create an instance of this type.
            </remarks>
        </member>
        <member name="P:OpenAI.Assistants.InternalMessageImageUrlContent.InternalUrl">
            <inheritdoc cref="P:OpenAI.Assistants.InternalMessageContentImageUrlObjectImageUrl.Url"/>
        </member>
        <member name="P:OpenAI.Assistants.InternalMessageImageUrlContent.InternalDetail">
            <inheritdoc cref="P:OpenAI.Assistants.InternalMessageContentImageUrlObjectImageUrl.Detail"/>
        </member>
        <member name="M:OpenAI.Assistants.InternalMessageImageUrlContent.#ctor(System.Uri,System.Nullable{OpenAI.Assistants.MessageImageDetail})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Assistants.InternalMessageImageUrlContent"/>. </summary>
        </member>
        <member name="M:OpenAI.Assistants.InternalMessageImageUrlContent.#ctor(OpenAI.Assistants.InternalMessageContentImageUrlObjectImageUrl)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Assistants.InternalMessageImageUrlContent"/>. </summary>
            <param name="imageUrl"></param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageUrl"/> is null. </exception>
        </member>
        <member name="T:OpenAI.Assistants.InternalMessageRefusalContent">
            <summary>
            Represents an item of image URL content within an Assistants API message.
            </summary>
            <remarks>
            Use the <see cref="!:MessageContent.FromImageUrl(Uri,MessageImageDetail?)"/> method to
            create an instance of this type.
            </remarks>
        </member>
        <member name="T:OpenAI.Assistants.InternalRequestMessageTextContent">
            <summary>
            Represents an item of text content within an Assistants API message.
            </summary>
            <remarks>
            Use the <see cref="M:OpenAI.Assistants.MessageContent.FromText(System.String)"/> method to create an instance of this
            type.
            </remarks>
        </member>
        <member name="T:OpenAI.Assistants.InternalRequiredFunctionToolCall">
            <summary>
            A requested invocation of a defined function tool, needed by an Assistants API run to continue.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.InternalRequiredFunctionToolCall.InternalName">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunToolCallObjectFunction.Name"/>
        </member>
        <member name="P:OpenAI.Assistants.InternalRequiredFunctionToolCall.InternalArguments">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunToolCallObjectFunction.Arguments"/>
        </member>
        <member name="T:OpenAI.Assistants.InternalRequiredToolCall">
            <summary>
            An abstract, base representation for a tool call that an Assistants API run requires outputs
            from in order to continue.
            </summary>
            <remarks>
            <see cref="T:OpenAI.Assistants.InternalRequiredToolCall"/> is the abstract base type for all required tool calls. Its
            concrete type can be one of:
            <list type="bullet">
            <item> <see cref="T:OpenAI.Assistants.InternalRequiredFunctionToolCall"/> </item> 
            </list>
            </remarks>
        </member>
        <member name="T:OpenAI.Assistants.InternalResponseMessageTextContent">
            <summary>
            Represents an item of annotated text content within an Assistants API response message.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.InternalResponseMessageTextContent.InternalText">
            <inheritdoc cref="P:OpenAI.Assistants.InternalMessageContentTextObjectText.Value"/>
        </member>
        <member name="M:OpenAI.Assistants.InternalResponseMessageTextContent.#ctor(OpenAI.Assistants.InternalMessageContentTextObjectText)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Assistants.InternalResponseMessageTextContent"/>. </summary>
            <param name="internalText"></param>
            <exception cref="!:ArgumentNullException"> <paramref name="internalText"/> is null. </exception>
        </member>
        <member name="T:OpenAI.Assistants.InternalRunStepCodeInterpreterLogOutput">
            <summary> Text output from the Code Interpreter tool call as part of a run step. </summary>
        </member>
        <member name="P:OpenAI.Assistants.InternalRunStepCodeInterpreterLogOutput.InternalLogs">
            <summary> The text output from the Code Interpreter tool call. </summary>
        </member>
        <member name="P:OpenAI.Assistants.InternalRunStepCodeInterpreterToolCallDetails.Input">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDetailsToolCallsCodeObjectCodeInterpreter.Input"/>
        </member>
        <member name="P:OpenAI.Assistants.InternalRunStepCodeInterpreterToolCallDetails.Outputs">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDetailsToolCallsCodeObjectCodeInterpreter.Outputs"/>
        </member>
        <member name="P:OpenAI.Assistants.InternalRunStepDetailsMessageCreationObject.InternalMessageId">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDetailsMessageCreationObjectMessageCreation.MessageId"/>
        </member>
        <member name="P:OpenAI.Assistants.InternalRunStepDetailsToolCallsCodeOutputImageObject.FileId">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDetailsToolCallsCodeOutputImageObjectImage.FileId"/>
        </member>
        <member name="P:OpenAI.Assistants.InternalRunStepDetailsToolCallsFileSearchObjectFileSearch.RankingOptions">
            <inheritdoc cref="P:OpenAI.Assistants.FileSearchToolDefinition.RankingOptions"/>
        </member>
        <member name="P:OpenAI.Assistants.InternalRunStepDetailsToolCallsObject.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:OpenAI.Assistants.InternalRunStepDetailsToolCallsObject.Count">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.Assistants.InternalRunStepDetailsToolCallsObject.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:OpenAI.Assistants.MessageCollectionOptions">
            <summary> The options to configure how <see cref="T:OpenAI.Assistants.ThreadMessage"/> objects are retrieved and paginated. </summary>
        </member>
        <member name="M:OpenAI.Assistants.MessageCollectionOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Assistants.MessageCollectionOptions"/>. </summary>
        </member>
        <member name="P:OpenAI.Assistants.MessageCollectionOptions.PageSizeLimit">
            <summary> 
                A limit on the number of <see cref="T:OpenAI.Assistants.ThreadMessage"/> objects to be returned per page.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.MessageCollectionOptions.Order">
            <summary>
                The order in which to retrieve <see cref="T:OpenAI.Assistants.ThreadMessage"/> objects when sorted by their
                <see cref="P:OpenAI.Assistants.ThreadMessage.CreatedAt"/> timestamp.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.MessageCollectionOptions.AfterId">
            <summary>
                The <see cref="P:OpenAI.Assistants.ThreadMessage.Id"/> used to retrieve the page of <see cref="T:OpenAI.Assistants.ThreadMessage"/> objects that come
                after this one.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.MessageCollectionOptions.BeforeId">
            <summary>
                The <see cref="P:OpenAI.Assistants.ThreadMessage.Id"/> used to retrieve the page of <see cref="T:OpenAI.Assistants.ThreadMessage"/> objects that come
                before this one.
            </summary>
        </member>
        <member name="M:OpenAI.Assistants.MessageContent.FromImageFileId(System.String,System.Nullable{OpenAI.Assistants.MessageImageDetail})">
            <summary>
            Creates a new <see cref="T:OpenAI.Assistants.MessageContent"/> instance that refers to an uploaded image with a known file ID.
            </summary>
            <param name="imageFileId"></param>
            <param name="detail"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Assistants.MessageContent.FromImageUri(System.Uri,System.Nullable{OpenAI.Assistants.MessageImageDetail})">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Assistants.MessageContent"/> that refers to an image at a model-accessible
            internet location.
            </summary>
            <param name="imageUri"></param>
            <param name="detail"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Assistants.MessageContent.FromText(System.String)">
            <summary>
            Creates a new <see cref="T:OpenAI.Assistants.MessageContent"/> instance that encapsulates a simple string input.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:OpenAI.Assistants.MessageContent.ImageUri">
            <inheritdoc cref="P:OpenAI.Assistants.InternalMessageImageUrlContent.InternalUrl"/>
        </member>
        <member name="P:OpenAI.Assistants.MessageContent.ImageFileId">
            <inheritdoc cref="P:OpenAI.Assistants.InternalMessageImageFileContent.InternalFileId"/>
        </member>
        <member name="P:OpenAI.Assistants.MessageContent.ImageDetail">
            <inheritdoc cref="P:OpenAI.Assistants.InternalMessageImageFileContent.InternalDetail"/>
        </member>
        <member name="P:OpenAI.Assistants.MessageContent.Text">
            <inheritdoc cref="P:OpenAI.Assistants.InternalResponseMessageTextContent.InternalText"/>
        </member>
        <member name="P:OpenAI.Assistants.MessageContent.TextAnnotations">
            <inheritdoc cref="P:OpenAI.Assistants.InternalResponseMessageTextContent.InternalAnnotations"/>
        </member>
        <member name="M:OpenAI.Assistants.MessageContent.op_Implicit(System.String)~OpenAI.Assistants.MessageContent">
            <summary>
            The implicit conversion operator that infers an equivalent <see cref="T:OpenAI.Assistants.MessageContent"/> 
            instance from a plain <see cref="T:System.String"/>.
            </summary>
            <param name="value"> The text for the message content. </param>
        </member>
        <member name="M:OpenAI.Assistants.MessageContent.#ctor">
            Creates a new instance of <see cref="T:OpenAI.Assistants.MessageContent"/> for mocking.
        </member>
        <member name="P:OpenAI.Assistants.MessageCreationAttachment.Tools">
            <summary>
            The tools to which the attachment applies to.
            </summary>
            <remarks>
            These are <see cref="T:OpenAI.Assistants.ToolDefinition"/> instances that can be checked via downcast, e.g.:
            <code>
            if (message.Attachments[0].Tools[0] is <see cref="T:OpenAI.Assistants.CodeInterpreterToolDefinition"/>)
            {
                // The attachment applies to the code interpreter tool
            }
            </code>
            </remarks>
        </member>
        <member name="T:OpenAI.Assistants.MessageCreationOptions">
            <summary>
            Represents additional options available when creating a new <see cref="T:OpenAI.Assistants.ThreadMessage"/>.
            </summary>
        </member>
        <member name="M:OpenAI.Assistants.MessageCreationOptions.#ctor">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Assistants.MessageCreationOptions"/>.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.MessageDeletionResult.Object">
            <summary> The object type, which is always `thread.message.deleted`. </summary>
        </member>
        <member name="T:OpenAI.Assistants.MessageImageDetail">
            <summary>
            The available detail settings to use when processing an image.
            These settings balance token consumption and the resolution of evaluation performed.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.MessageImageDetail.Auto">
            <summary> Default. Allows the model to automatically select detail. </summary>
        </member>
        <member name="F:OpenAI.Assistants.MessageImageDetail.Low">
            <summary> Reduced detail that uses fewer tokens than <see cref="F:OpenAI.Assistants.MessageImageDetail.High"/>. </summary>
        </member>
        <member name="F:OpenAI.Assistants.MessageImageDetail.High">
            <summary> Increased detail that uses more tokens than <see cref="F:OpenAI.Assistants.MessageImageDetail.Low"/>. </summary>
        </member>
        <member name="T:OpenAI.Assistants.MessageModificationOptions">
            <summary>
            Represents additional options available when modifying an existing <see cref="T:OpenAI.Assistants.ThreadMessage"/>.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.MessageRole.User">
            <summary>
            Indicates the message is sent by an actual user.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.MessageRole.Assistant">
            <summary>
            Indicates the message was generated by the assistant.
            </summary>
        </member>
        <member name="T:OpenAI.Assistants.RequiredAction">
            <summary>
            An abstract, base representation for an action that an Assistants API run requires outputs
            from in order to continue.
            </summary>
            <remarks>
            <see cref="T:OpenAI.Assistants.RequiredAction"/> is the abstract base type for all required actions. Its
            concrete type can be one of:
            <list type="bullet">
            <item> <see cref="T:OpenAI.Assistants.InternalRequiredFunctionToolCall"/> </item> 
            </list>
            </remarks>
        </member>
        <member name="P:OpenAI.Assistants.RequiredAction.FunctionName">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRequiredFunctionToolCall.InternalName"/>
        </member>
        <member name="P:OpenAI.Assistants.RequiredAction.FunctionArguments">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRequiredFunctionToolCall.InternalArguments"/>
        </member>
        <member name="P:OpenAI.Assistants.RequiredAction.ToolCallId">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRequiredFunctionToolCall.Id"/>
        </member>
        <member name="T:OpenAI.Assistants.RunCollectionOptions">
            <summary> The options to configure how <see cref="T:OpenAI.Assistants.ThreadRun"/> objects are retrieved and paginated. </summary>
        </member>
        <member name="M:OpenAI.Assistants.RunCollectionOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Assistants.RunCollectionOptions"/>. </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCollectionOptions.PageSizeLimit">
            <summary> 
                A limit on the number of <see cref="T:OpenAI.Assistants.ThreadRun"/> objects to be returned per page.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCollectionOptions.Order">
            <summary>
                The order in which to retrieve <see cref="T:OpenAI.Assistants.ThreadRun"/> objects when sorted by their
                <see cref="P:OpenAI.Assistants.ThreadRun.CreatedAt"/> timestamp.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCollectionOptions.AfterId">
            <summary>
                The <see cref="P:OpenAI.Assistants.ThreadRun.Id"/> used to retrieve the page of <see cref="T:OpenAI.Assistants.ThreadRun"/> objects that come
                after this one.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCollectionOptions.BeforeId">
            <summary>
                The <see cref="P:OpenAI.Assistants.ThreadRun.Id"/> used to retrieve the page of <see cref="T:OpenAI.Assistants.ThreadRun"/> objects that come
                before this one.
            </summary>
        </member>
        <member name="T:OpenAI.Assistants.RunCreationOptions">
            <summary>
            Represents additional options available when creating a new <see cref="T:OpenAI.Assistants.ThreadRun"/>.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCreationOptions.ResponseFormat">
            <inheritdoc cref="T:OpenAI.Assistants.AssistantResponseFormat"/>
        </member>
        <member name="P:OpenAI.Assistants.RunCreationOptions.ModelOverride">
            <summary>
            A run-specific model name that will override the assistant's defined model. If not provided, the assistant's
            selection will be used.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCreationOptions.InstructionsOverride">
            <summary>
            A run specific replacement for the assistant's default instructions that will override the assistant-level
            instructions. If not specified, the assistant's instructions will be used.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCreationOptions.AdditionalInstructions">
            <summary>
            Run-specific additional instructions that will be appended to the assistant-level instructions solely for this
            run. Unlike <see cref="P:OpenAI.Assistants.RunCreationOptions.InstructionsOverride"/>, the assistant's instructions are preserved and these additional
            instructions are concatenated.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCreationOptions.AdditionalMessages">
            <summary> Adds additional messages to the thread before creating the run. </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCreationOptions.AllowParallelToolCalls">
            <summary>
            Whether to enable parallel function calling during tool use. 
            </summary>
            <remarks>
            Assumed <c>true</c> if not otherwise specified.
            </remarks>
        </member>
        <member name="P:OpenAI.Assistants.RunCreationOptions.ToolsOverride">
            <summary>
            A run-specific collection of tool definitions that will override the assistant-level defaults. If not provided,
            the assistant's defined tools will be used. Available tools include:
            <para>
            <list type="bullet">
            <item>
                <c>code_interpreter</c> - <see cref="T:OpenAI.Assistants.CodeInterpreterToolDefinition"/> 
                - works with data, math, and computer code
            </item>
            <item>
                <c>file_search</c> - <see cref="T:OpenAI.Assistants.FileSearchToolDefinition"/> 
                - dynamically enriches an Run's context with content from vector stores
            </item>
            <item>
                <c>function</c> - <see cref="T:OpenAI.Assistants.FunctionToolDefinition"/>
                - enables caller-provided custom functions for actions and enrichment
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCreationOptions.Metadata">
            <summary> Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCreationOptions.Temperature">
            <summary> What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCreationOptions.NucleusSamplingFactor">
             <summary>
             An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.
            
             We generally recommend altering this or temperature but not both.
             </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCreationOptions.MaxInputTokenCount">
            <summary> The maximum number of prompt tokens that may be used over the course of the run. The run will make a best effort to use only the number of prompt tokens specified, across multiple turns of the run. If the run exceeds the number of prompt tokens specified, the run will end with status `incomplete`. See `incomplete_details` for more info. </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCreationOptions.MaxOutputTokenCount">
            <summary> The maximum number of completion tokens that may be used over the course of the run. The run will make a best effort to use only the number of completion tokens specified, across multiple turns of the run. If the run exceeds the number of completion tokens specified, the run will end with status `incomplete`. See `incomplete_details` for more info. </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCreationOptions.TruncationStrategy">
            <summary> Gets or sets the truncation strategy. </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunCreationOptions.ToolConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenAI.Assistants.RunCreationOptions.#ctor">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Assistants.RunCreationOptions"/>.
            </summary>
        </member>
        <member name="T:OpenAI.Assistants.RunModificationOptions">
            <summary>
            Represents additional options available when modifying an existing <see cref="T:OpenAI.Assistants.ThreadRun"/>.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunStatus.IsTerminal">
            <summary>
            [Helper property] Gets a value indicating whether this run status represents a condition wherein the run can
            no longer continue.
            </summary>
            <remarks>
            For more information, please refer to:
            https://platform.openai.com/docs/assistants/how-it-works/run-lifecycle
            </remarks>
        </member>
        <member name="P:OpenAI.Assistants.RunStep.Object">
            <summary> The object type, which is always `thread.run.step`. </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunStep.Details">
            <summary>
            The <c>step_details</c> associated with this run step.
            </summary>
            <remarks>
            <para>
            Please note <see cref="T:OpenAI.Assistants.RunStepDetails"/> is the base class.
            </para>
            </remarks>
        </member>
        <member name="T:OpenAI.Assistants.RunStepCollectionOptions">
            <summary> The options to configure how <see cref="T:OpenAI.Assistants.RunStep"/> objects are retrieved and paginated. </summary>
        </member>
        <member name="M:OpenAI.Assistants.RunStepCollectionOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Assistants.RunStepCollectionOptions"/>. </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunStepCollectionOptions.PageSizeLimit">
            <summary> 
                A limit on the number of <see cref="T:OpenAI.Assistants.RunStep"/> objects to be returned per page.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunStepCollectionOptions.Order">
            <summary>
                The order in which to retrieve <see cref="T:OpenAI.Assistants.RunStep"/> objects when sorted by their
                <see cref="P:OpenAI.Assistants.RunStep.CreatedAt"/> timestamp.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunStepCollectionOptions.AfterId">
            <summary>
                The <see cref="P:OpenAI.Assistants.RunStep.Id"/> used to retrieve the page of <see cref="T:OpenAI.Assistants.RunStep"/> objects that come
                after this one.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunStepCollectionOptions.BeforeId">
            <summary>
                The <see cref="P:OpenAI.Assistants.RunStep.Id"/> used to retrieve the page of <see cref="T:OpenAI.Assistants.RunStep"/> objects that come
                before this one.
            </summary>
        </member>
        <member name="T:OpenAI.Assistants.RunTruncationStrategy">
            <summary> Controls for how a thread will be truncated prior to the run. Use this to control the intial context window of the run. </summary>
        </member>
        <member name="F:OpenAI.Assistants.RunTruncationStrategy.SerializedAdditionalRawData">
            <summary>
            Keeps track of any properties unknown to the library.
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)"/>.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)"/>.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.RunTruncationStrategy._type">
            <summary> The truncation strategy to use for the thread. The default is `auto`. If set to `last_messages`, the thread will be truncated to the n most recent messages in the thread. When set to `auto`, messages in the middle of the thread will be dropped to fit the context length of the model, `max_prompt_tokens`. </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunTruncationStrategy.LastMessages">
            <summary> The number of most recent messages from the thread when constructing the context for the run. </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:OpenAI.Assistants.RunTruncationStrategy.Auto">
            <summary>
            The default <see cref="T:OpenAI.Assistants.RunTruncationStrategy"/> that will eliminate messages in the middle of the thread
            to fit within the context length of the model or the max prompt tokens.
            </summary>
        </member>
        <member name="M:OpenAI.Assistants.RunTruncationStrategy.CreateLastMessagesStrategy(System.Int32)">
            <summary>
            Creates a new <see cref="T:OpenAI.Assistants.RunTruncationStrategy"/> instance using the <c>last_messages</c> strategy type,
            which will truncate the thread to specified count of preceding messages for the run.
            </summary>
            <param name="lastMessageCount"> The count of last messages that the run should evaluate. </param>
            <returns></returns>
        </member>
        <member name="T:OpenAI.Assistants.AsyncStreamingUpdateCollection">
            <summary>
            Implementation of collection abstraction over streaming assistant updates.
            </summary>
        </member>
        <member name="T:OpenAI.Assistants.MessageContentUpdate">
            <summary>
            Represents a streaming update to <see cref="T:OpenAI.Assistants.ThreadMessage"/> content as part of the Assistants API.
            </summary>
            <remarks>
            Distinct <see cref="T:OpenAI.Assistants.MessageContentUpdate"/> instances will be generated for each <see cref="T:OpenAI.Assistants.MessageContent"/> part
            and each content subcomponent, such as <see cref="T:OpenAI.Assistants.TextAnnotationUpdate"/> instances, even if this information
            arrived in the same response chunk.
            </remarks>
        </member>
        <member name="P:OpenAI.Assistants.MessageContentUpdate.MessageId">
            <inheritdoc cref="!:MessageDeltaObject.Id"/>
        </member>
        <member name="P:OpenAI.Assistants.MessageContentUpdate.MessageIndex">
            <inheritdoc cref="P:OpenAI.Assistants.InternalMessageDeltaContentImageFileObject.Index"/>
        </member>
        <member name="P:OpenAI.Assistants.MessageContentUpdate.Role">
            <inheritdoc cref="P:OpenAI.Assistants.InternalMessageDeltaObjectDelta.Role"/>
        </member>
        <member name="P:OpenAI.Assistants.MessageContentUpdate.ImageFileId">
            <inheritdoc cref="P:OpenAI.Assistants.InternalMessageDeltaContentImageFileObjectImageFile.FileId"/>
        </member>
        <member name="P:OpenAI.Assistants.MessageContentUpdate.ImageDetail">
            <inheritdoc cref="T:OpenAI.Assistants.MessageImageDetail"/>
        </member>
        <member name="P:OpenAI.Assistants.MessageContentUpdate.Text">
            <inheritdoc cref="P:OpenAI.Assistants.InternalMessageDeltaContentTextObjectText.Value"/>
        </member>
        <member name="P:OpenAI.Assistants.MessageContentUpdate.TextAnnotation">
            <summary>
            An update to an annotation associated with a specific content item in the message's content items collection.
            </summary>
        </member>
        <member name="T:OpenAI.Assistants.MessageStatusUpdate">
            <summary>
            The update type presented when the status of a message changes.
            </summary>
        </member>
        <member name="T:OpenAI.Assistants.RequiredActionUpdate">
            <summary>
            The update type presented when the status of a <see cref="T:OpenAI.Assistants.ThreadRun"/> has changed to <c>requires_action</c>,
            indicating that tool output submission or another intervention is needed for the run to continue.
            </summary>
            <remarks>
            Distinct <see cref="T:OpenAI.Assistants.RequiredActionUpdate"/> instances will generated for each required action, meaning that
            parallel function calling will present multiple updates even if the tool calls arrive at the same time.
            </remarks>
        </member>
        <member name="P:OpenAI.Assistants.RequiredActionUpdate.FunctionName">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRequiredFunctionToolCall.InternalName"/>
        </member>
        <member name="P:OpenAI.Assistants.RequiredActionUpdate.FunctionArguments">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRequiredFunctionToolCall.InternalArguments"/>
        </member>
        <member name="P:OpenAI.Assistants.RequiredActionUpdate.ToolCallId">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRequiredFunctionToolCall.Id"/>
        </member>
        <member name="M:OpenAI.Assistants.RequiredActionUpdate.GetThreadRun">
            <summary>
            Gets the full, deserialized <see cref="T:OpenAI.Assistants.ThreadRun"/> instance associated with this streaming required action
            update.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenAI.Assistants.RunStepDetailsUpdate">
            <summary>
            The update type presented when run step details, including tool call progress, have changed.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.RunStepDetailsUpdate.StepId">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDelta.Id"/>
        </member>
        <member name="P:OpenAI.Assistants.RunStepDetailsUpdate.CreatedMessageId">
            <inheritdoc cref="T:OpenAI.Assistants.InternalRunStepDeltaStepDetailsMessageCreationObjectMessageCreation"/>
        </member>
        <member name="P:OpenAI.Assistants.RunStepDetailsUpdate.ToolCallId">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDeltaStepDetailsToolCallsCodeObject.Id"/>
        </member>
        <member name="P:OpenAI.Assistants.RunStepDetailsUpdate.ToolCallIndex">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDeltaStepDetailsToolCallsCodeObject.Index"/>
        </member>
        <member name="P:OpenAI.Assistants.RunStepDetailsUpdate.CodeInterpreterInput">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter.Input"/>
        </member>
        <member name="P:OpenAI.Assistants.RunStepDetailsUpdate.CodeInterpreterOutputs">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter.Outputs"/>
        </member>
        <member name="P:OpenAI.Assistants.RunStepDetailsUpdate.FunctionName">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDeltaStepDetailsToolCallsFunctionObjectFunction.Name"/>
        </member>
        <member name="P:OpenAI.Assistants.RunStepDetailsUpdate.FunctionArguments">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDeltaStepDetailsToolCallsFunctionObjectFunction.Arguments"/>
        </member>
        <member name="P:OpenAI.Assistants.RunStepDetailsUpdate.FunctionOutput">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDeltaStepDetailsToolCallsFunctionObjectFunction.Output"/>
        </member>
        <member name="P:OpenAI.Assistants.RunStepUpdateCodeInterpreterOutput.OutputIndex">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDeltaStepDetailsToolCallsCodeOutputLogsObject.Index"/>
        </member>
        <member name="P:OpenAI.Assistants.RunStepUpdateCodeInterpreterOutput.Logs">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDeltaStepDetailsToolCallsCodeOutputLogsObject.InternalLogs"/>
        </member>
        <member name="P:OpenAI.Assistants.RunStepUpdateCodeInterpreterOutput.ImageFileId">
            <inheritdoc cref="P:OpenAI.Assistants.InternalRunStepDeltaStepDetailsToolCallsCodeOutputImageObjectImage.FileId"/>
        </member>
        <member name="T:OpenAI.Assistants.RunStepUpdate">
            <summary>
            The update type presented when the status of a run step changes.
            </summary>
        </member>
        <member name="T:OpenAI.Assistants.RunUpdate">
            <summary>
            The update type presented when the status of a <see cref="T:OpenAI.Assistants.ThreadRun"/> has changed.
            </summary>
        </member>
        <member name="T:OpenAI.Assistants.StreamingUpdate">
            <summary>
            Represents a single item of streamed Assistants API data.
            </summary>
            <remarks>
            Please note that this is the abstract base type. To access data, downcast an instance of this type to an
            appropriate, derived update type:
            <para>
            For messages: <see cref="T:OpenAI.Assistants.MessageStatusUpdate"/>, <see cref="T:OpenAI.Assistants.MessageContentUpdate"/>
            </para>
            <para>
            For runs and run steps: <see cref="T:OpenAI.Assistants.RunUpdate"/>, <see cref="T:OpenAI.Assistants.RunStepUpdate"/>, <see cref="T:OpenAI.Assistants.RunStepDetailsUpdate"/>,
            <see cref="T:OpenAI.Assistants.RequiredActionUpdate"/>
            </para>
            <para>
            For threads: <see cref="T:OpenAI.Assistants.ThreadUpdate"/>
            </para>
            </remarks>
        </member>
        <member name="P:OpenAI.Assistants.StreamingUpdate.UpdateKind">
            <summary>
            A value indicating what type of event this update represents.
            </summary>
            <remarks>
            Many events share the same response type. For example, <see cref="F:OpenAI.Assistants.StreamingUpdateReason.RunCreated"/> and
            <see cref="F:OpenAI.Assistants.StreamingUpdateReason.RunCompleted"/> are both associated with a <see cref="T:OpenAI.Assistants.ThreadRun"/> instance.
            You can use the value of <see cref="P:OpenAI.Assistants.StreamingUpdate.UpdateKind"/> to differentiate between these events when the type is not
            sufficient to do so.
            </remarks>
        </member>
        <member name="T:OpenAI.Assistants.StreamingUpdate`1">
            <summary>
            Represents a single item of streamed data that encapsulates an underlying response value type.
            </summary>
            <typeparam name="T"> The response value type of the "delta" payload. </typeparam>
        </member>
        <member name="P:OpenAI.Assistants.StreamingUpdate`1.Value">
            <summary>
            The underlying response value received with the streaming event.
            </summary>
        </member>
        <member name="M:OpenAI.Assistants.StreamingUpdate`1.op_Implicit(OpenAI.Assistants.StreamingUpdate{`0})~`0">
            <summary>
            Implicit operator that allows the underlying value type of the <see cref="T:OpenAI.Assistants.StreamingUpdate`1"/> to be used
            directly.
            </summary>
            <param name="update"></param>
        </member>
        <member name="T:OpenAI.Assistants.StreamingUpdateCollection">
            <summary>
            Implementation of collection abstraction over streaming assistant updates.
            </summary>
        </member>
        <member name="T:OpenAI.Assistants.StreamingUpdateReason">
            <summary>
            The collection of values associated with the event names of streaming update payloads. These correspond to the
            expected downcast data type of the <see cref="T:OpenAI.Assistants.StreamingUpdate"/> as well as to the expected data present in the
            payload.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.Unknown">
            <summary>
            Indicates that there is no known reason associated with the streaming update.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.ThreadCreated">
            <summary>
            Indicates that an update was generated as part of a <c>thread.created</c> event.
            </summary>
            <remarks> This reason is typically only associated with calls to
            <see cref="!:AssistantClient.CreateThreadAndRunStreaming(Assistant, ThreadCreationOptions, RunCreationOptions)"/>,
            as other run-related methods operate on a thread that has previously been created.
            </remarks>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunCreated">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.created</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunQueued">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.queued</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunInProgress">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.in_progress</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunRequiresAction">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.requires_action</c> event.
            </summary>
            <remarks>
            Note that, if multiple actions occur within a single event, as can be the case with the parallel tool calling,
            distinct <see cref="T:OpenAI.Assistants.RequiredActionUpdate"/> instances will be generated for each
            <see cref="T:OpenAI.Assistants.RequiredAction"/>.
            </remarks>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunCompleted">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.completed</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunIncomplete">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.incomplete</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunFailed">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.failed</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunCancelling">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.cancelling</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunCancelled">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.cancelled</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunExpired">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.expired</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunStepCreated">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.step.created</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunStepInProgress">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.step.in_progress</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunStepUpdated">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.step.delta</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunStepCompleted">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.step.completed</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunStepFailed">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.step.failed</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunStepCancelled">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.step.cancelled</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.RunStepExpired">
            <summary>
            Indicates that an update was generated as part of a <c>thread.run.step.expired</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.MessageCreated">
            <summary>
            Indicates that an update was generated as part of a <c>thread.message.created</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.MessageInProgress">
            <summary>
            Indicates that an update was generated as part of a <c>thread.message.in_progress</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.MessageUpdated">
            <summary>
            Indicates that an update was generated as part of a <c>thread.message.delta</c> event.
            </summary>
            <remarks>
            Distinct <see cref="T:OpenAI.Assistants.MessageContentUpdate"/> instances will be created per each content update and/or content
            annotation present on the event.
            </remarks>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.MessageCompleted">
            <summary>
            Indicates that an update was generated as part of a <c>thread.message.completed</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.MessageFailed">
            <summary>
            Indicates that an update was generated as part of a <c>thread.message.failed</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.Error">
            <summary>
            Indicates that an update was generated as part of a <c>thread.message.error</c> event.
            </summary>
        </member>
        <member name="F:OpenAI.Assistants.StreamingUpdateReason.Done">
            <summary>
            Indicates the end of streaming update events. This value should never be typically observed.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.TextAnnotationUpdate.ContentIndex">
            <summary>
            The index of the content item that this annotation applies to.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.TextAnnotationUpdate.StartIndex">
            <summary>
            The index in the message content at which the citation begins.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.TextAnnotationUpdate.EndIndex">
            <summary>
            The index in the message content at which the citation ends.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.TextAnnotationUpdate.TextToReplace">
            <summary>
            The text in the message content that should be replaced.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.TextAnnotationUpdate.InputFileId">
            <summary>
            The ID of the file cited by the <c>file_search</c> tool for this annotation.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.TextAnnotationUpdate.OutputFileId">
            <summary>
            The ID of the file that was generated by the <c>code_interpreter</c> tool for this citation.
            </summary>
        </member>
        <member name="T:OpenAI.Assistants.ThreadUpdate">
            <summary>
            The update type presented when a streamed event indicates a thread was created.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.ThreadUpdate.Id">
            <see cref="P:OpenAI.Assistants.AssistantThread.Id"/>
        </member>
        <member name="P:OpenAI.Assistants.ThreadUpdate.Metadata">
            <see cref="P:OpenAI.Assistants.AssistantThread.Metadata"/>
        </member>
        <member name="P:OpenAI.Assistants.ThreadUpdate.CreatedAt">
            <see cref="P:OpenAI.Assistants.AssistantThread.CreatedAt"/>
        </member>
        <member name="P:OpenAI.Assistants.ThreadUpdate.ToolResources">
            <see cref="P:OpenAI.Assistants.AssistantThread.ToolResources"/>
        </member>
        <member name="P:OpenAI.Assistants.TextAnnotation.StartIndex">
            <summary>
            The index in the message content at which the citation begins.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.TextAnnotation.EndIndex">
            <summary>
            The index in the message content at which the citation ends.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.TextAnnotation.TextToReplace">
            <summary>
            The text in the message content that should be replaced.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.TextAnnotation.InputFileId">
            <summary>
            The ID of the file cited by the <c>file_search</c> tool for this annotation.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.TextAnnotation.OutputFileId">
            <summary>
            The ID of the file that was generated by the <c>code_interpreter</c> tool for this citation.
            </summary>
        </member>
        <member name="T:OpenAI.Assistants.ThreadCreationOptions">
            <summary>
            Represents additional options available when creating a new <see cref="T:OpenAI.Assistants.Assistant"/>.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.ThreadCreationOptions.ToolResources">
            <inheritdoc cref="P:OpenAI.Assistants.ThreadCreationOptions.ToolResources"/>
        </member>
        <member name="P:OpenAI.Assistants.ThreadCreationOptions.InitialMessages">
            <summary>
            The collection of new message definitions that should be added to the thread immediately upon its creation.
            </summary>
            <remarks>
            Items may be inserted into this collection via list initializer, e.g.:
            <para><code>
            <see cref="T:OpenAI.Assistants.MessageCreationOptions"/> options = new()
            {
                InitialMessages = { new <see cref="T:OpenAI.Assistants.ThreadInitializationMessage"/>(["Hello, world!"]) },
            }
            </code></para>
            </remarks>
        </member>
        <member name="P:OpenAI.Assistants.ThreadDeletionResult.Object">
            <summary> The object type, which is always `thread.deleted`. </summary>
        </member>
        <member name="M:OpenAI.Assistants.ThreadInitializationMessage.#ctor(OpenAI.Assistants.MessageRole,System.Collections.Generic.IEnumerable{OpenAI.Assistants.MessageContent})">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Assistants.ThreadInitializationMessage"/>.
            </summary>
            <param name="content">
            The content items that should be included in the message, added to the thread being created.
            </param>
        </member>
        <member name="M:OpenAI.Assistants.ThreadInitializationMessage.op_Implicit(System.String)~OpenAI.Assistants.ThreadInitializationMessage">
            <summary>
            Implicitly creates a new instance of <see cref="T:OpenAI.Assistants.ThreadInitializationMessage"/> from a single item of plain text
            content, assuming the role of <see cref="F:OpenAI.Assistants.MessageRole.User"/>.
            </summary>
            <remarks>
            Using a <see cref="T:System.String"/> in the position of a <see cref="T:OpenAI.Assistants.ThreadInitializationMessage"/> is equivalent to
            using the <see cref="M:OpenAI.Assistants.ThreadInitializationMessage.#ctor(OpenAI.Assistants.MessageRole,System.Collections.Generic.IEnumerable{OpenAI.Assistants.MessageContent})"/> constructor with
            <see cref="F:OpenAI.Assistants.MessageRole.User"/> and a single <see cref="M:OpenAI.Assistants.MessageContent.FromText(System.String)"/> content instance.
            </remarks>
        </member>
        <member name="P:OpenAI.Assistants.ThreadMessage.Object">
            <summary> The object type, which is always `thread.message`. </summary>
        </member>
        <member name="P:OpenAI.Assistants.ThreadMessage.Role">
            <inheritdoc cref="T:OpenAI.Assistants.MessageRole"/>
        </member>
        <member name="P:OpenAI.Assistants.ThreadMessage.Attachments">
            <summary> A list of files attached to the message, and the tools they were added to. </summary>
        </member>
        <member name="T:OpenAI.Assistants.ThreadModificationOptions">
            <summary>
            Represents additional options available when modifying an existing <see cref="T:OpenAI.Assistants.AssistantThread"/>.
            </summary>
        </member>
        <member name="P:OpenAI.Assistants.ThreadModificationOptions.ToolResources">
            <inheritdoc cref="P:OpenAI.Assistants.ThreadModificationOptions.ToolResources"/>
        </member>
        <member name="P:OpenAI.Assistants.ThreadRun.Object">
            <summary> The object type, which is always `thread.run`. </summary>
        </member>
        <member name="P:OpenAI.Assistants.ThreadRun.RequiredActions">
            <summary>
            The list of required actions that must have their results submitted for the run to continue.
            </summary>
            <remarks>
            <see cref="T:OpenAI.Assistants.RequiredAction"/> is the abstract base type for all required actions. Its
            concrete type can be one of:
            <list type="bullet">
            <item> <see cref="T:OpenAI.Assistants.InternalRequiredFunctionToolCall"/> </item> 
            </list>
            </remarks>
        </member>
        <member name="P:OpenAI.Assistants.ThreadRun.ResponseFormat">
            <inheritdoc cref="T:OpenAI.Assistants.AssistantResponseFormat"/>
        </member>
        <member name="P:OpenAI.Assistants.ThreadRun.NucleusSamplingFactor">
             <summary>
             An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.
            
             We generally recommend altering this or temperature but not both.
             </summary>
        </member>
        <member name="P:OpenAI.Assistants.ThreadRun.AllowParallelToolCalls">
            <summary>
            Whether parallel function calling is enabled during tool use for the thread. 
            </summary>
            <remarks>
            Assumed <c>true</c> if not otherwise specified.
            </remarks>
        </member>
        <member name="P:OpenAI.Assistants.ToolConstraint.Function">
            <summary> Gets or sets the function. </summary>
        </member>
        <member name="M:OpenAI.Assistants.ToolOutput.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Assistants.ToolOutput"/>.
            </summary>
            <param name="toolCallId">
            The ID of <see cref="T:OpenAI.Assistants.InternalRequiredToolCall"/> that the provided output resolves.
            </param>
            <param name="output"> The output from the specified tool. </param>
        </member>
        <member name="P:OpenAI.Assistants.ToolResources.CodeInterpreter">
            <summary> Gets the code interpreter. </summary>
        </member>
        <member name="P:OpenAI.Assistants.ToolResources.FileSearch">
            <summary> Gets the file search. </summary>
        </member>
        <member name="T:OpenAI.Audio.AudioClient">
            <summary> The service client for OpenAI audio operations. </summary>
        </member>
        <member name="P:OpenAI.Audio.AudioClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Audio.AudioClient.#ctor(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Audio.AudioClient.#ctor(System.String,System.ClientModel.ApiKeyCredential)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Audio.AudioClient.#ctor(System.String,System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Audio.AudioClient.#ctor(System.ClientModel.Primitives.ClientPipeline,System.String,OpenAI.OpenAIClientOptions)" -->
        <member name="M:OpenAI.Audio.AudioClient.GenerateSpeechAsync(System.String,OpenAI.Audio.GeneratedSpeechVoice,OpenAI.Audio.SpeechGenerationOptions,System.Threading.CancellationToken)">
            <summary> Generates a life-like, spoken audio recording of the input text. </summary>
            <remarks>
                The default format of the generated audio is <see cref="P:OpenAI.Audio.GeneratedSpeechFormat.Mp3"/> unless otherwise specified
                via <see cref="P:OpenAI.Audio.SpeechGenerationOptions.ResponseFormat"/>.
            </remarks>
            <param name="text"> The text to generate audio for. </param>
            <param name="voice"> The voice to use in the generated audio. </param>
            <param name="options"> The options to configure the audio generation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text"/> is null. </exception>
            <returns> The generated audio in the specified output format. </returns>
        </member>
        <member name="M:OpenAI.Audio.AudioClient.GenerateSpeech(System.String,OpenAI.Audio.GeneratedSpeechVoice,OpenAI.Audio.SpeechGenerationOptions,System.Threading.CancellationToken)">
            <summary> Generates a life-like, spoken audio recording of the input text. </summary>
            <remarks>
                The default format of the generated audio is <see cref="P:OpenAI.Audio.GeneratedSpeechFormat.Mp3"/> unless otherwise specified
                via <see cref="P:OpenAI.Audio.SpeechGenerationOptions.ResponseFormat"/>.
            </remarks>
            <param name="text"> The text to generate audio for. </param>
            <param name="voice"> The voice to use in the generated audio. </param>
            <param name="options"> The options to configure the audio generation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text"/> is null. </exception>
            <returns> The generated audio in the specified output format. </returns>
        </member>
        <member name="M:OpenAI.Audio.AudioClient.TranscribeAudioAsync(System.IO.Stream,System.String,OpenAI.Audio.AudioTranscriptionOptions,System.Threading.CancellationToken)">
            <summary> Transcribes the input audio. </summary>
            <param name="audio"> The audio stream to transcribe. </param>
            <param name="audioFilename">
                The filename associated with the audio stream. The filename's extension (for example: .mp3) will be used to
                validate the format of the input audio. The request may fail if the filename's extension and the actual
                format of the input audio do not match.
            </param>
            <param name="options"> The options to configure the audio transcription. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="audio"/> or <paramref name="audioFilename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="audioFilename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Audio.AudioClient.TranscribeAudio(System.IO.Stream,System.String,OpenAI.Audio.AudioTranscriptionOptions,System.Threading.CancellationToken)">
            <summary> Transcribes the input audio. </summary>
            <param name="audio"> The audio stream to transcribe. </param>
            <param name="audioFilename">
                The filename associated with the audio stream. The filename's extension (for example: .mp3) will be used to
                validate the format of the input audio. The request may fail if the filename's extension and the actual
                format of the input audio do not match.
            </param>
            <param name="options"> The options to configure the audio transcription. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="audio"/> or <paramref name="audioFilename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="audioFilename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Audio.AudioClient.TranscribeAudioAsync(System.String,OpenAI.Audio.AudioTranscriptionOptions)">
            <summary> Transcribes the input audio. </summary>
            <param name="audioFilePath">
                The path of the audio file to transcribe. The provided file path's extension (for example: .mp3) will be
                used to validate the format of the input audio. The request may fail if the file path's extension and the
                actual format of the input audio do not match.
            </param>
            <param name="options"> The options to configure the audio transcription. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="audioFilePath"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="audioFilePath"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Audio.AudioClient.TranscribeAudio(System.String,OpenAI.Audio.AudioTranscriptionOptions)">
            <summary> Transcribes the input audio. </summary>
            <param name="audioFilePath">
                The path of the audio file to transcribe. The provided file path's extension (for example: .mp3) will be
                used to validate the format of the input audio. The request may fail if the file path's extension and the
                actual format of the input audio do not match.
            </param>
            <param name="options"> The options to configure the audio transcription. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="audioFilePath"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="audioFilePath"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Audio.AudioClient.TranslateAudioAsync(System.IO.Stream,System.String,OpenAI.Audio.AudioTranslationOptions,System.Threading.CancellationToken)">
            <summary> Translates the input audio into English. </summary>
            <param name="audio"> The audio stream to translate. </param>
            <param name="audioFilename">
                The filename associated with the audio stream. The filename's extension (for example: .mp3) will be used to
                validate the format of the input audio. The request may fail if the filename's extension and the actual
                format of the input audio do not match.
            </param>
            <param name="options"> The options to configure the audio translation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="audio"/> or <paramref name="audioFilename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="audioFilename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Audio.AudioClient.TranslateAudio(System.IO.Stream,System.String,OpenAI.Audio.AudioTranslationOptions,System.Threading.CancellationToken)">
            <summary> Translates the input audio into English. </summary>
            <param name="audio"> The audio stream to translate. </param>
            <param name="audioFilename">
                The filename associated with the audio stream. The filename's extension (for example: .mp3) will be used to
                validate the format of the input audio. The request may fail if the filename's extension and the actual
                format of the input audio do not match.
            </param>
            <param name="options"> The options to configure the audio translation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="audio"/> or <paramref name="audioFilename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="audioFilename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Audio.AudioClient.TranslateAudio(System.String,OpenAI.Audio.AudioTranslationOptions)">
            <summary> Translates the input audio into English. </summary>
            <param name="audioFilePath">
                The path of the audio file to translate. The provided file path's extension (for example: .mp3) will be
                used to validate the format of the input audio. The request may fail if the file path's extension and the
                actual format of the input audio do not match.
            </param>
            <param name="options"> The options to configure the audio translation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="audioFilePath"/> was null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="audioFilePath"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Audio.AudioClient.TranslateAudioAsync(System.String,OpenAI.Audio.AudioTranslationOptions)">
            <summary> Translates the input audio into English. </summary>
            <param name="audioFilePath">
                The path of the audio file to translate. The provided file path's extension (for example: .mp3) will be
                used to validate the format of the input audio. The request may fail if the file path's extension and the
                actual format of the input audio do not match.
            </param>
            <param name="options"> The options to configure the audio translation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="audioFilePath"/> was null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="audioFilePath"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Audio.AudioClient.GenerateSpeechAsync(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Generates text-to-speech audio using the specified voice speaking the provided input text.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Audio.AudioClient.GenerateSpeech(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Generates text-to-speech audio using the specified voice speaking the provided input text.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Audio.AudioClient.TranscribeAudioAsync(System.ClientModel.BinaryContent,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Transcribes audio.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="contentType"> The content type of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> or <paramref name="contentType"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="contentType"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Audio.AudioClient.TranscribeAudio(System.ClientModel.BinaryContent,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Transcribes audio.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="contentType"> The content type of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> or <paramref name="contentType"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="contentType"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Audio.AudioClient.TranslateAudioAsync(System.ClientModel.BinaryContent,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Translates audio into English.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="contentType"> The content type of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> or <paramref name="contentType"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="contentType"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Audio.AudioClient.TranslateAudio(System.ClientModel.BinaryContent,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Translates audio into English.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="contentType"> The content type of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> or <paramref name="contentType"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="contentType"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="T:OpenAI.Audio.AudioTimestampGranularities">
            <summary>
            Specifies the timestamp granularities to populate for a transcription.
            </summary>
        </member>
        <member name="F:OpenAI.Audio.AudioTimestampGranularities.Default">
            <summary>
            The default value that, when equivalent to a request's flags, specifies no specific audio timestamp granularity
            and defers to the default timestamp behavior.
            </summary>
        </member>
        <member name="F:OpenAI.Audio.AudioTimestampGranularities.Word">
            <summary>
            The value that, when present in the request's flags, specifies that audio information should include word-level
            timestamp information.
            </summary>
        </member>
        <member name="F:OpenAI.Audio.AudioTimestampGranularities.Segment">
            <summary>
            The value that, when present in the request's flags, specifies that audio information should include
            segment-level timestamp information.
            </summary>
        </member>
        <member name="P:OpenAI.Audio.AudioTranscription.Duration">
            <summary> The duration of the input audio. </summary>
        </member>
        <member name="T:OpenAI.Audio.AudioTranscriptionFormat">
            <summary> The format of the transcription. </summary>
        </member>
        <member name="P:OpenAI.Audio.AudioTranscriptionFormat.Text">
            <summary> Plain text only. </summary>
        </member>
        <member name="P:OpenAI.Audio.AudioTranscriptionFormat.Simple">
            <summary> Plain text only. </summary>
        </member>
        <member name="P:OpenAI.Audio.AudioTranscriptionFormat.Verbose">
            <summary> Plain text provided with additional metadata, such as duration and timestamps. </summary>
        </member>
        <member name="P:OpenAI.Audio.AudioTranscriptionFormat.Srt">
            <summary> Text formatted as SubRip (.srt) file. </summary>
        </member>
        <member name="P:OpenAI.Audio.AudioTranscriptionFormat.Vtt">
            <summary> Text formatted as a Web Video Text Tracks, a.k.a. WebVTT, (.vtt) file. </summary>
        </member>
        <member name="M:OpenAI.Audio.AudioTranscriptionOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Audio.AudioTranscriptionOptions"/>. </summary>
        </member>
        <member name="P:OpenAI.Audio.AudioTranscriptionOptions.TimestampGranularities">
            <summary>
            The timestamp granularities to populate for this transcription.
            </summary>
        </member>
        <member name="P:OpenAI.Audio.AudioTranslation.Duration">
            <summary> The duration of the input audio. </summary>
        </member>
        <member name="T:OpenAI.Audio.AudioTranslationFormat">
            <summary> The format of the transcription. </summary>
        </member>
        <member name="P:OpenAI.Audio.AudioTranslationFormat.Text">
            <summary> Plain text only. </summary>
        </member>
        <member name="P:OpenAI.Audio.AudioTranslationFormat.Simple">
            <summary> Plain text only. </summary>
        </member>
        <member name="P:OpenAI.Audio.AudioTranslationFormat.Verbose">
            <summary> Plain text provided with additional metadata, such as duration and timestamps. </summary>
        </member>
        <member name="P:OpenAI.Audio.AudioTranslationFormat.Srt">
            <summary> Text formatted as SubRip (.srt) file. </summary>
        </member>
        <member name="P:OpenAI.Audio.AudioTranslationFormat.Vtt">
            <summary> Text formatted as a Web Video Text Tracks, a.k.a. WebVTT, (.vtt) file. </summary>
        </member>
        <member name="M:OpenAI.Audio.AudioTranslationOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Audio.AudioTranslationOptions"/>. </summary>
        </member>
        <member name="T:OpenAI.Audio.GeneratedSpeechFormat">
            <summary> The audio format in which to generate the speech. </summary>
        </member>
        <member name="T:OpenAI.Audio.GeneratedSpeechVoice">
            <summary>
                The voice to use in the generated speech. Previews of the available voices can be found in the
                <see href="https://platform.openai.com/docs/guides/text-to-speech/voice-options">text-to-speech guide</see>.
            </summary>
        </member>
        <member name="T:OpenAI.Audio.OpenAIAudioModelFactory">
            <summary> Model factory for models. </summary>
        </member>
        <member name="M:OpenAI.Audio.OpenAIAudioModelFactory.AudioTranscription(System.String,System.Nullable{System.TimeSpan},System.String,System.Collections.Generic.IEnumerable{OpenAI.Audio.TranscribedWord},System.Collections.Generic.IEnumerable{OpenAI.Audio.TranscribedSegment})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Audio.AudioTranscription"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Audio.AudioTranscription"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Audio.OpenAIAudioModelFactory.AudioTranslation(System.String,System.Nullable{System.TimeSpan},System.String,System.Collections.Generic.IEnumerable{OpenAI.Audio.TranscribedSegment})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Audio.AudioTranslation"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Audio.AudioTranslation"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Audio.OpenAIAudioModelFactory.TranscribedSegment(System.Int32,System.Int32,System.TimeSpan,System.TimeSpan,System.String,System.ReadOnlyMemory{System.Int32},System.Single,System.Single,System.Single,System.Single)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Audio.TranscribedSegment"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Audio.TranscribedSegment"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Audio.OpenAIAudioModelFactory.TranscribedWord(System.String,System.TimeSpan,System.TimeSpan)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Audio.TranscribedWord"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Audio.TranscribedWord"/> instance for mocking. </returns>
        </member>
        <member name="T:OpenAI.Audio.SpeechGenerationOptions">
            <summary> The options to configure text-to-speech audio generation. </summary>
        </member>
        <member name="P:OpenAI.Audio.SpeechGenerationOptions.Input">
            <summary> The text to generate audio for. The maximum length is 4096 characters. </summary>
        </member>
        <member name="M:OpenAI.Audio.SpeechGenerationOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Audio.SpeechGenerationOptions"/>. </summary>
        </member>
        <member name="P:OpenAI.Audio.SpeechGenerationOptions.SpeedRatio">
            <summary>
                The speed of the generated audio expressed as a ratio between 0.5 and 2.0. The default is 1.0.
            </summary>
        </member>
        <member name="T:OpenAI.Audio.TranscribedSegment">
            <summary> A segment of the transcribed audio. </summary>
        </member>
        <member name="P:OpenAI.Audio.TranscribedSegment.StartTime">
            <summary> The start time of the segment. </summary>
        </member>
        <member name="P:OpenAI.Audio.TranscribedSegment.EndTime">
            <summary> The end time of the segment. </summary>
        </member>
        <member name="P:OpenAI.Audio.TranscribedSegment.SeekOffset">
            <summary> The seek offset of the segment. </summary>
        </member>
        <member name="P:OpenAI.Audio.TranscribedSegment.TokenIds">
            <summary> The token IDs corresponding to the text content of the segment. </summary>
        </member>
        <member name="P:OpenAI.Audio.TranscribedSegment.AverageLogProbability">
            <summary> The average log probability of the segment. </summary>
        </member>
        <member name="P:OpenAI.Audio.TranscribedSegment.NoSpeechProbability">
            <summary> The probability that the segment contains no speech. </summary>
        </member>
        <member name="T:OpenAI.Audio.TranscribedWord">
            <summary> A word of the transcribed audio. </summary>
        </member>
        <member name="P:OpenAI.Audio.TranscribedWord.StartTime">
            <summary> The start time of the word. </summary>
        </member>
        <member name="P:OpenAI.Audio.TranscribedWord.EndTime">
            <summary> The end time of the word. </summary>
        </member>
        <member name="T:OpenAI.Batch.BatchClient">
            <summary> The service client for OpenAI batch operations. </summary>
        </member>
        <member name="P:OpenAI.Batch.BatchClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Batch.BatchClient.#ctor(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Batch.BatchClient.#ctor(System.ClientModel.ApiKeyCredential)" -->
        <member name="M:OpenAI.Batch.BatchClient.#ctor(System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)">
            <summary>
            Initializes a new instance of <see cref="T:OpenAI.Batch.BatchClient"/> that will use an API key when authenticating.
            </summary>
            <param name="credential"> The API key used to authenticate with the service endpoint. </param>
            <param name="options"> Additional options to customize the client. </param>
            <exception cref="T:System.ArgumentNullException"> The provided <paramref name="credential"/> was null. </exception>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Batch.BatchClient.#ctor(System.ClientModel.Primitives.ClientPipeline,OpenAI.OpenAIClientOptions)" -->
        <member name="M:OpenAI.Batch.BatchClient.CreateBatchAsync(System.ClientModel.BinaryContent,System.Boolean,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Creates and executes a batch from an uploaded file of requests
            </summary>
            <param name="waitUntilCompleted"> Value indicating whether the method
            should return after the operation has been started and is still running
            on the service, or wait until the operation has completed to return.
            </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A <see cref="T:OpenAI.Batch.CreateBatchOperation"/> that can be used to wait for 
            the operation to complete, or cancel the operation. </returns>
        </member>
        <member name="M:OpenAI.Batch.BatchClient.CreateBatch(System.ClientModel.BinaryContent,System.Boolean,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Creates and executes a batch from an uploaded file of requests
            </summary>
            <param name="waitUntilCompleted"> Value indicating whether the method
            should return after the operation has been started and is still running
            on the service, or wait until the operation has completed to return.
            </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A <see cref="T:OpenAI.Batch.CreateBatchOperation"/> that can be used to wait for 
            the operation to complete, or cancel the operation. </returns>
        </member>
        <member name="M:OpenAI.Batch.BatchClient.GetBatchesAsync(System.String,System.Nullable{System.Int32},System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] List your organization's batches.
            </summary>
            <param name="after"> A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
            <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Batch.BatchClient.GetBatches(System.String,System.Nullable{System.Int32},System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] List your organization's batches.
            </summary>
            <param name="after"> A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
            <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Batch.BatchClient.GetBatchAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a batch.
            </summary>
            <param name="batchId"> The ID of the batch to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="batchId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="batchId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Batch.BatchClient.GetBatch(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a batch.
            </summary>
            <param name="batchId"> The ID of the batch to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="batchId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="batchId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="T:OpenAI.Batch.CreateBatchOperation">
            <summary>
            A long-running operation for executing a batch from an uploaded file of 
            requests.
            </summary>
        </member>
        <member name="P:OpenAI.Batch.CreateBatchOperation.RehydrationToken">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.Batch.CreateBatchOperation.RehydrateAsync(OpenAI.Batch.BatchClient,System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Recreates a <see cref="T:OpenAI.Batch.CreateBatchOperation"/> from a rehydration token.
            </summary>
            <param name="client"> The <see cref="T:OpenAI.Batch.BatchClient"/> used to obtain the 
            operation status from the service. </param>
            <param name="rehydrationToken"> The rehydration token corresponding to 
            the operation to rehydrate. </param>
            <param name="cancellationToken"> A token that can be used to cancel the 
            request. </param>
            <returns> The rehydrated operation. </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client"/> or <paramref name="rehydrationToken"/> is null. </exception>
        </member>
        <member name="M:OpenAI.Batch.CreateBatchOperation.Rehydrate(OpenAI.Batch.BatchClient,System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Recreates a <see cref="T:OpenAI.Batch.CreateBatchOperation"/> from a rehydration token.
            </summary>
            <param name="client"> The <see cref="T:OpenAI.Batch.BatchClient"/> used to obtain the 
            operation status from the service. </param>
            <param name="rehydrationToken"> The rehydration token corresponding to 
            the operation to rehydrate. </param>
            <param name="cancellationToken"> A token that can be used to cancel the 
            request. </param>
            <returns> The rehydrated operation. </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client"/> or <paramref name="rehydrationToken"/> is null. </exception>
        </member>
        <member name="M:OpenAI.Batch.CreateBatchOperation.UpdateStatusAsync(System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.Batch.CreateBatchOperation.UpdateStatus(System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.Batch.CreateBatchOperation.GetBatchAsync(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a batch.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Batch.CreateBatchOperation.GetBatch(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a batch.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Batch.CreateBatchOperation.CancelAsync(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Cancels an in-progress batch.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Batch.CreateBatchOperation.Cancel(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Cancels an in-progress batch.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="T:OpenAI.Chat.AssistantChatMessage">
            <summary>
            Represents a chat message of the <c>assistant</c> role as supplied to a chat completion request. As assistant
            messages are originated by the model on responses, <see cref="T:OpenAI.Chat.AssistantChatMessage"/> instances typically
            represent chat history or example interactions to guide model behavior.
            </summary>
        </member>
        <member name="M:OpenAI.Chat.AssistantChatMessage.#ctor(System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessageContentPart})">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.AssistantChatMessage"/> using a collection of content items.
            For <c>assistant</c> messages, this can be one or more of type <c>text</c> or exactly one of type <c>refusal</c>.
            </summary>
            <param name="contentParts">
                The collection of content items associated with the message.
            </param>
        </member>
        <member name="M:OpenAI.Chat.AssistantChatMessage.#ctor(OpenAI.Chat.ChatMessageContentPart[])">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.AssistantChatMessage"/> using a collection of content items.
            For <c>assistant</c> messages, this can be one or more of type <c>text</c> or exactly one of type <c>refusal</c>.
            </summary>
            <param name="contentParts">
                The collection of text and image content items associated with the message.
            </param>
        </member>
        <member name="M:OpenAI.Chat.AssistantChatMessage.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.AssistantChatMessage"/> that represents ordinary text content and
            does not feature tool or function calls.
            </summary>
            <param name="content"> The text content of the message. </param>
        </member>
        <member name="M:OpenAI.Chat.AssistantChatMessage.#ctor(System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatToolCall})">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.AssistantChatMessage"/> that represents <c>tool_calls</c> that
            were provided by the model.
            </summary>
            <param name="toolCalls"> The <c>tool_calls</c> made by the model. </param>
        </member>
        <member name="M:OpenAI.Chat.AssistantChatMessage.#ctor(OpenAI.Chat.ChatFunctionCall)">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.AssistantChatMessage"/> that represents a <c>function_call</c>
            (deprecated in favor of <c>tool_calls</c>) that was made by the model.
            </summary>
            <param name="functionCall"> The <c>function_call</c> made by the model. </param>
        </member>
        <member name="M:OpenAI.Chat.AssistantChatMessage.#ctor(OpenAI.Chat.ChatCompletion)">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.AssistantChatMessage"/> from a <see cref="T:OpenAI.Chat.ChatCompletion"/> with
            an <c>assistant</c> role response.
            </summary>
            <remarks>
                This constructor will copy the <c>content</c>, <c>tool_calls</c>, and <c>function_call</c> from a chat
                completion response into a new <c>assistant</c> role request message. 
            </remarks>
            <param name="chatCompletion">
                The <see cref="T:OpenAI.Chat.ChatCompletion"/> from which the conversation history request message should be created.
            </param>
            <exception cref="T:System.ArgumentException">
                The <c>role</c> of the provided chat completion response was not <see cref="F:OpenAI.Chat.ChatMessageRole.Assistant"/>.
            </exception>
        </member>
        <member name="P:OpenAI.Chat.AssistantChatMessage.ParticipantName">
            <summary>
            An optional <c>name</c> associated with the assistant message. This is typically defined with a <c>system</c>
            message and is used to differentiate between multiple participants of the same role.
            </summary>
        </member>
        <member name="T:OpenAI.Chat.ChatClient">
            <summary> The service client for OpenAI chat operations. </summary>
            <summary> The service client for the OpenAI Chat Completions endpoint. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Chat.ChatClient.#ctor(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Chat.ChatClient.#ctor(System.String,System.ClientModel.ApiKeyCredential)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Chat.ChatClient.#ctor(System.String,System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Chat.ChatClient.#ctor(System.ClientModel.Primitives.ClientPipeline,System.String,OpenAI.OpenAIClientOptions)" -->
        <member name="M:OpenAI.Chat.ChatClient.CompleteChatAsync(System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessage},OpenAI.Chat.ChatCompletionOptions,System.Threading.CancellationToken)">
            <summary> Generates a completion for the given chat. </summary>
            <param name="messages"> The messages comprising the chat so far. </param>
            <param name="options"> The options to configure the chat completion. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="messages"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="messages"/> is an empty collection, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Chat.ChatClient.CompleteChat(System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessage},OpenAI.Chat.ChatCompletionOptions,System.Threading.CancellationToken)">
            <summary> Generates a completion for the given chat. </summary>
            <param name="messages"> The messages comprising the chat so far. </param>
            <param name="options"> The options to configure the chat completion. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="messages"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="messages"/> is an empty collection, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Chat.ChatClient.CompleteChatAsync(OpenAI.Chat.ChatMessage[])">
            <summary> Generates a completion for the given chat. </summary>
            <param name="messages"> The messages comprising the chat so far. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="messages"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="messages"/> is an empty collection, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Chat.ChatClient.CompleteChat(OpenAI.Chat.ChatMessage[])">
            <summary> Generates a completion for the given chat. </summary>
            <param name="messages"> The messages comprising the chat so far. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="messages"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="messages"/> is an empty collection, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Chat.ChatClient.CompleteChatStreamingAsync(System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessage},OpenAI.Chat.ChatCompletionOptions,System.Threading.CancellationToken)">
            <summary>
                Generates a completion for the given chat. The completion is streamed back token by token as it is being
                generated by the model instead of waiting for it to be finished first.
            </summary>
            <remarks>
                <see cref="T:System.ClientModel.AsyncCollectionResult`1"/> implements the <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> interface and can be
                enumerated over using the <c>await foreach</c> pattern.
            </remarks>
            <param name="messages"> The messages comprising the chat so far. </param>
            <param name="options"> The options to configure the chat completion. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="messages"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="messages"/> is an empty collection, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Chat.ChatClient.CompleteChatStreaming(System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessage},OpenAI.Chat.ChatCompletionOptions,System.Threading.CancellationToken)">
            <summary>
                Generates a completion for the given chat. The completion is streamed back token by token as it is being
                generated by the model instead of waiting for it to be finished first.
            </summary>
            <remarks>
                <see cref="T:System.ClientModel.CollectionResult`1"/> implements the <see cref="T:System.Collections.Generic.IEnumerable`1"/> interface and can be
                enumerated over using the <c>await foreach</c> pattern.
            </remarks>
            <param name="messages"> The messages comprising the chat so far. </param>
            <param name="options"> The options to configure the chat completion. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="messages"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="messages"/> is an empty collection, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Chat.ChatClient.CompleteChatStreamingAsync(OpenAI.Chat.ChatMessage[])">
            <summary>
                Generates a completion for the given chat. The completion is streamed back token by token as it is being
                generated by the model instead of waiting for it to be finished first.
            </summary>
            <remarks>
                <see cref="T:System.ClientModel.AsyncCollectionResult`1"/> implements the <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> interface and can be
                enumerated over using the <c>await foreach</c> pattern.
            </remarks>
            <param name="messages"> The messages comprising the chat so far. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="messages"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="messages"/> is an empty collection, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Chat.ChatClient.CompleteChatStreaming(OpenAI.Chat.ChatMessage[])">
            <summary>
                Generates a completion for the given chat. The completion is streamed back token by token as it is being
                generated by the model instead of waiting for it to be finished first.
            </summary>
            <remarks>
                <see cref="T:System.ClientModel.CollectionResult`1"/> implements the <see cref="T:System.Collections.Generic.IEnumerable`1"/> interface and can be
                enumerated over using the <c>await foreach</c> pattern.
            </remarks>
            <param name="messages"> The messages comprising the chat so far. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="messages"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="messages"/> is an empty collection, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Chat.ChatClient.CompleteChatAsync(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Creates a model response for the given chat conversation.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Chat.ChatClient.CompleteChat(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Creates a model response for the given chat conversation.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="T:OpenAI.Chat.ChatCompletion">
            <summary> A chat completion generated by the model. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletion.Object">
            <summary> The object type, which is always `chat.completion`. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletion.CreatedAt">
            <summary> The timestamp when the chat completion was created. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletion.FinishReason">
            <summary>
                The reason the model stopped generating tokens. This will be:
                <list>
                    <item>
                        <see cref="F:OpenAI.Chat.ChatFinishReason.Stop"/> if the model hit a natural stop point or a provided stop sequence
                    </item>
                    <item>
                        <see cref="F:OpenAI.Chat.ChatFinishReason.Length"/> if the maximum number of tokens specified in the request was reached
                    </item>
                    <item>
                        <see cref="F:OpenAI.Chat.ChatFinishReason.ContentFilter"/> if content was omitted due to a flag from our content filters
                    </item>
                    <item>
                        <see cref="F:OpenAI.Chat.ChatFinishReason.ToolCalls"/> if the model called a tool
                    </item>
                    <item>
                        <see cref="F:OpenAI.Chat.ChatFinishReason.FunctionCall"/> (obsolte) if the model called a function
                    </item>
                </list>
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletion.ContentTokenLogProbabilities">
            <summary> The message content tokens with log probability information. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletion.RefusalTokenLogProbabilities">
            <summary> The message refusal tokens with log probability information. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletion.Role">
            <summary> The role of the author of this message. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletion.Content">
            <summary> The contents of the message. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletion.ToolCalls">
            <summary> The tool calls generated by the model, such as function calls. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletion.Refusal">
            <summary> The refusal message generated by the model. </summary>
        </member>
        <member name="T:OpenAI.Chat.ChatCompletionOptions">
            <summary>
            Request-level options for chat completion.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletionOptions.Messages">
            <summary>
            A list of messages comprising the conversation so far. [Example Python code](https://cookbook.openai.com/examples/how_to_format_inputs_to_chatgpt_models).
            Please note <see cref="T:OpenAI.Chat.ChatMessage"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:OpenAI.Chat.AssistantChatMessage"/>, <see cref="T:OpenAI.Chat.FunctionChatMessage"/>, <see cref="T:OpenAI.Chat.SystemChatMessage"/>, <see cref="T:OpenAI.Chat.ToolChatMessage"/> and <see cref="T:OpenAI.Chat.UserChatMessage"/>.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletionOptions.Model">
            <summary>
            ID of the model to use. See the <see href="https://platform.openai.com/docs/models/model-endpoint-compatibility">model endpoint compatibility</see> table for details on which models work with the Chat API.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletionOptions.N">
            <summary> How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep `n` as `1` to minimize costs. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletionOptions.Stream">
            <summary> If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available, with the stream terminated by a `data: [DONE]` message. [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions). </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletionOptions.StreamOptions">
            <summary> Gets or sets the stream options. </summary>
        </member>
        <member name="M:OpenAI.Chat.ChatCompletionOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Chat.ChatCompletionOptions"/> for deserialization. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletionOptions.IncludeLogProbabilities">
            <summary> Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the message content. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletionOptions.TopLogProbabilityCount">
            <summary> An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability. <see cref="P:OpenAI.Chat.ChatCompletionOptions.IncludeLogProbabilities"/> must be set to <see langword="true"/> if this property is used. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletionOptions.StopSequences">
            <summary> Up to 4 sequences where the API will stop generating further tokens. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletionOptions.LogitBiases">
            <summary>
            Modifies the likelihood of specified tokens appearing in the completion. It maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletionOptions.ToolChoice">
            <summary>
            Specifies which tool is called by the model, if any. <see cref="!:ChatToolChoice.None"/> means the model will not call any tool and instead generates a message. <see cref="!:ChatToolChoice.Auto"/> means the model can pick between generating a message or calling one or more tools.
            <see cref="!:ChatToolChoice.Required"/> means the model must call one or more tools. The model can also be forced to call a specific tool by constructing a new instance of <see cref="T:OpenAI.Chat.ChatToolChoice"/> while passing the desired <see cref="T:OpenAI.Chat.ChatTool"/> as a constructor parameter.
            <remarks>
            <see cref="!:ChatToolChoice.None"/> is the default behavior when no tools are present, while <see cref="!:ChatToolChoice.Auto"/> is the default if tools are present.
            </remarks>
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletionOptions.AllowParallelToolCalls">
            <summary>
            Whether to enable parallel function calling during tool use. 
            </summary>
            <remarks>
            Assumed <c>true</c> if not otherwise specified.
            </remarks>
        </member>
        <member name="F:OpenAI.Chat.ChatCompletionOptions._serviceTier">
            <summary>
            An object specifying the format that the model must output.
            </summary>
            <remarks>
            <p>
            Compatible with GPT-4o, GPT-4o mini, GPT-4 Turbo and all GPT-3.5 Turbo models newer than gpt-3.5-turbo-1106.
            </p>
            <p>
            Learn more in the Structured Outputs guide.
            </p>
            </remarks>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletionOptions.EndUserId">
            <summary>
                A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
                <see href="https://platform.openai.com/docs/guides/safety-best-practices/end-user-ids">Learn more</see>.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletionOptions.Seed">
            <summary>
            If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatCompletionOptions.MaxOutputTokenCount">
            <summary>
            An upper bound for the number of tokens that can be generated for a completion, including visible output tokens and, on applicable models, reasoning tokens.
            </summary>
        </member>
        <member name="T:OpenAI.Chat.ChatFinishReason">
            <summary>
            The reason the model stopped generating tokens. This will be:
            <list type="table">
            <listheader>
                <member>Property</member>
                <rest>REST</rest>
                <cond>Condition</cond>
            </listheader>
            <item>
                <member><see cref="F:OpenAI.Chat.ChatFinishReason.Stop"/></member>
                <rest><c>stop</c></rest>
                <cond>The model encountered a natural stop point or provided stop sequence.</cond>
            </item>
            <item>
                <member><see cref="F:OpenAI.Chat.ChatFinishReason.Length"/></member>
                <rest><c>length</c></rest>
                <cond>The maximum number of tokens specified in the request was reached.</cond>
            </item>
            <item>
                <member><see cref="F:OpenAI.Chat.ChatFinishReason.ContentFilter"/></member>
                <rest><c>content_filter</c></rest>
                <cond>Content was omitted due to a triggered content filter rule.</cond>
            </item>
            <item>
                <member><see cref="F:OpenAI.Chat.ChatFinishReason.ToolCalls"/></member>
                <rest><c>tool_calls</c></rest>
                <cond>
                    With no explicit <c>tool_choice</c>, the model called one or more tools that were defined in the request.
                </cond>
            </item>
            <item>
                <member><see cref="F:OpenAI.Chat.ChatFinishReason.FunctionCall"/></member>
                <rest><c>function_call</c></rest>
                <cond>(Deprecated) The model called a function that was defined in the request.</cond>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:OpenAI.Chat.ChatFinishReason.Stop">
            <summary>
            Indicates that the model encountered a natural stop point or provided stop sequence.
            </summary>
        </member>
        <member name="F:OpenAI.Chat.ChatFinishReason.Length">
            <summary>
            Indicates that the model reached the maximum number of tokens allowed for the request.
            </summary>
        </member>
        <member name="F:OpenAI.Chat.ChatFinishReason.ContentFilter">
            <summary>
            Indicates that content was omitted due to a triggered content filter rule.
            </summary>
        </member>
        <member name="F:OpenAI.Chat.ChatFinishReason.ToolCalls">
            <summary>
            Indicates that the model called a function that was defined in the request.
            </summary>
            <remarks>
            To resolve tool calls, append the message associated with the tool calls followed by matching instances of
            <see cref="T:OpenAI.Chat.ToolChatMessage"/> for each tool call, then perform another chat completion with the combined
            set of messages.
            <para>
            <b>Note</b>: <see cref="F:OpenAI.Chat.ChatFinishReason.ToolCalls"/> is <i>not</i> provided as the <c>finish_reason</c> if the model calls a
            tool in response to an explicit <c>tool_choice</c> via <see cref="P:OpenAI.Chat.ChatCompletionOptions.ToolChoice"/>.
            In that case, calling the specified tool is assumed and the expected reason is <see cref="F:OpenAI.Chat.ChatFinishReason.Stop"/>.
            </para>
            </remarks>
        </member>
        <member name="F:OpenAI.Chat.ChatFinishReason.FunctionCall">
            <summary>
            Indicates that the model called a function that was defined in the request.
            </summary>
            <remarks>
            To resolve a function call, append the message associated with the function call followed by a
            <see cref="T:OpenAI.Chat.FunctionChatMessage"/> with the appropriate name and arguments, then perform another chat
            completion with the combined set of messages.
            </remarks>
        </member>
        <member name="T:OpenAI.Chat.ChatFunction">
            <summary>
            Represents the definition of a function that the model may call, as supplied in a chat completion request.
            </summary>
        </member>
        <member name="M:OpenAI.Chat.ChatFunction.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.ChatFunction"/>.
            </summary>
            <param name="functionName"> The <c>name</c> of the function. </param>
        </member>
        <member name="P:OpenAI.Chat.ChatFunction.FunctionName">
            <summary> The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatFunction.FunctionDescription">
            <summary> A description of what the function does, used by the model to choose when and how to call the function. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatFunction.FunctionParameters">
            <summary> Gets or sets the parameters. </summary>
        </member>
        <member name="T:OpenAI.Chat.ChatFunctionCall">
            <summary>
            Represents an <c>assistant</c> call against a supplied <see cref="T:OpenAI.Chat.ChatFunction"/> that is needed by the
            model to continue the logical conversation.
            </summary>
            <remarks>
            <para>
                Note that <c>functions</c> are deprecated in favor of <c>tools</c> and using <see cref="T:OpenAI.Chat.ChatTool"/>
                instances with <see cref="P:OpenAI.Chat.ChatCompletionOptions.Tools"/> will enable the use of <c>tool_calls</c> via
                <see cref="P:OpenAI.Chat.ChatCompletion.ToolCalls"/> instead of this type.
            </para>
            <para>
                The model makes a <c>function_call</c> in response to evaluation of supplied <c>name></c> and
                <c>description</c> information in <c>functions</c> and is resolved by providing a new
                <see cref="T:OpenAI.Chat.FunctionChatMessage"/> with matching functioning output on a subsequent chat completion
                request.
            </para>
            </remarks>
        </member>
        <member name="P:OpenAI.Chat.ChatFunctionCall.FunctionName">
            <summary> The name of the function to call. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatFunctionCall.FunctionArguments">
            <summary> 
            The arguments to call the function with, as generated by the model in JSON format. Note
            that the model does not always generate valid JSON, and may hallucinate parameters not
            defined by your function schema. Validate the arguments in your code before calling your
            function.
            </summary>
        </member>
        <member name="T:OpenAI.Chat.ChatFunctionChoice">
            <summary>
            Represents a desired manner in which the model should use the functions defined in a chat completion request.
            </summary>
        </member>
        <member name="M:OpenAI.Chat.ChatFunctionChoice.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Chat.ChatFunctionChoice"/>. </summary>
            <param name="functionName"> The function name. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:OpenAI.Chat.ChatFunctionChoice.CreateNamedChoice(System.String)">
            <summary>
            Creates an instance of <see cref="T:OpenAI.Chat.ChatFunctionChoice"/> that specifies the model must call a specific function,
            referred to via its name.
            </summary>
            <param name="functionName"> The name of the function the model must call. </param>
            <returns> A new instance of <see cref="T:OpenAI.Chat.ChatFunctionChoice"/>. </returns>
        </member>
        <member name="M:OpenAI.Chat.ChatFunctionChoice.CreateAutoChoice">
            <summary>
            Creates an instance of <see cref="T:OpenAI.Chat.ChatFunctionChoice"/> that specifies the model may freely pick between
            generating a message or calling a function.
            </summary>
            <returns> A new instance of <see cref="T:OpenAI.Chat.ChatFunctionChoice"/>. </returns>
        </member>
        <member name="M:OpenAI.Chat.ChatFunctionChoice.CreateNoneChoice">
            <summary>
            Creates an instance of <see cref="T:OpenAI.Chat.ChatFunctionChoice"/> that specifies the model should not call any function
            and instead only generate a message.
            </summary>
            <returns> A new instance of <see cref="T:OpenAI.Chat.ChatFunctionChoice"/>. </returns>
        </member>
        <member name="T:OpenAI.Chat.ChatImageDetailLevel">
            <summary>
                The level of detail with which the model should process the image and generate its textual understanding of
                it. Learn more in the <see href="https://platform.openai.com/docs/guides/vision/low-or-high-fidelity-image-understanding">vision guide</see>.
            </summary>
        </member>
        <member name="T:OpenAI.Chat.ChatInputTokenUsageDetails">
            <summary>
            A collection of additional information about the value reported in <see cref="P:OpenAI.Chat.ChatTokenUsage.InputTokenCount"/>.
            </summary>
        </member>
        <member name="T:OpenAI.Chat.ChatMessage">
            <summary>
            A common, base representation of a message provided as input into a chat completion request.
            </summary>
            <remarks>
            <list type="table">
            <listheader>
                <type>Type -</type>
                <role>Role -</role>
                <note>Description</note>
            </listheader>
            <item>
                <type><see cref="T:OpenAI.Chat.SystemChatMessage"/> -</type>
                <role><c>system</c> -</role>
                <note>Instructions to the model that guide the behavior of future <c>assistant</c> messages.</note>
            </item>
            <item>
                <type><see cref="T:OpenAI.Chat.UserChatMessage"/> -</type>
                <role><c>user</c> -</role>
                <note>Input messages from the caller, typically paired with <c>assistant</c> messages in a conversation.</note>
            </item>
            <item>
                <type><see cref="T:OpenAI.Chat.AssistantChatMessage"/> -</type>
                <role><c>assistant</c> -</role>
                <note>
                    Output messages from the model with responses to the <c>user</c> or calls to tools or functions that are
                    needed to continue the logical conversation.
                </note>
            </item>
            <item>
                <type><see cref="T:OpenAI.Chat.ToolChatMessage"/> -</type>
                <role><c>tool</c> -</role>
                <note>
                    Resolution information for a <see cref="T:OpenAI.Chat.ChatToolCall"/> in an earlier
                    <see cref="T:OpenAI.Chat.AssistantChatMessage"/> that was made against a supplied
                    <see cref="T:OpenAI.Chat.ChatTool"/>.
                </note>
            </item>
            <item>
                <type><see cref="T:OpenAI.Chat.FunctionChatMessage"/> -</type>
                <role><c>function</c> -</role>
                <note>
                    Resolution information for a <see cref="T:OpenAI.Chat.ChatFunctionCall"/> in an earlier
                    <see cref="T:OpenAI.Chat.AssistantChatMessage"/> that was made against a supplied
                    <see cref="T:OpenAI.Chat.ChatFunction"/>. Note that <c>functions</c> are deprecated in favor of
                    <c>tool_calls</c>.
                </note>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:OpenAI.Chat.ChatMessage.Content">
            <summary>
            The content associated with the message. The interpretation of this content will vary depending on the message type.
            </summary>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateSystemMessage(System.String)">
            <inheritdoc cref="M:OpenAI.Chat.SystemChatMessage.#ctor(System.String)"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateSystemMessage(System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessageContentPart})">
            <inheritdoc cref="M:OpenAI.Chat.SystemChatMessage.#ctor(System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessageContentPart})"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateSystemMessage(OpenAI.Chat.ChatMessageContentPart[])">
            <inheritdoc cref="M:OpenAI.Chat.SystemChatMessage.#ctor(OpenAI.Chat.ChatMessageContentPart[])"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateUserMessage(System.String)">
            <inheritdoc cref="M:OpenAI.Chat.UserChatMessage.#ctor(System.String)"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateUserMessage(System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessageContentPart})">
            <inheritdoc cref="M:OpenAI.Chat.UserChatMessage.#ctor(System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessageContentPart})"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateUserMessage(OpenAI.Chat.ChatMessageContentPart[])">
            <inheritdoc cref="M:OpenAI.Chat.UserChatMessage.#ctor(OpenAI.Chat.ChatMessageContentPart[])"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateAssistantMessage(System.String)">
            <inheritdoc cref="M:OpenAI.Chat.AssistantChatMessage.#ctor(System.String)"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateAssistantMessage(System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessageContentPart})">
            <inheritdoc cref="M:OpenAI.Chat.AssistantChatMessage.#ctor(System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessageContentPart})"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateAssistantMessage(OpenAI.Chat.ChatMessageContentPart[])">
            <inheritdoc cref="M:OpenAI.Chat.AssistantChatMessage.#ctor(OpenAI.Chat.ChatMessageContentPart[])"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateAssistantMessage(System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatToolCall})">
            <inheritdoc cref="!:AssistantChatMessage(IEnumerable&lt;ChatToolCall&gt;, string)"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateAssistantMessage(OpenAI.Chat.ChatFunctionCall)">
            <inheritdoc cref="!:AssistantChatMessage(ChatFunctionCall, string)"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateAssistantMessage(OpenAI.Chat.ChatCompletion)">
            <inheritdoc cref="M:OpenAI.Chat.AssistantChatMessage.#ctor(OpenAI.Chat.ChatCompletion)"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateToolMessage(System.String,System.String)">
            <inheritdoc cref="M:OpenAI.Chat.ToolChatMessage.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateToolMessage(System.String,System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessageContentPart})">
            <inheritdoc cref="M:OpenAI.Chat.ToolChatMessage.#ctor(System.String,System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessageContentPart})"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateToolMessage(System.String,OpenAI.Chat.ChatMessageContentPart[])">
            <inheritdoc cref="M:OpenAI.Chat.ToolChatMessage.#ctor(System.String,OpenAI.Chat.ChatMessageContentPart[])"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.CreateFunctionMessage(System.String,System.String)">
            <inheritdoc cref="M:OpenAI.Chat.FunctionChatMessage.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:OpenAI.Chat.ChatMessage.op_Implicit(System.String)~OpenAI.Chat.ChatMessage">
            <summary> Creates a new instance of <see cref="T:OpenAI.Chat.UserChatMessage"/>. </summary>
            <param name="content"> The text content of the <see cref="T:OpenAI.Chat.UserChatMessage"/>. </param>
        </member>
        <member name="T:OpenAI.Chat.ChatMessageContentPart">
            <summary>
                A part of the chat message content.
                <list>
                    <item>
                        Call <see cref="M:OpenAI.Chat.ChatMessageContentPart.CreateTextPart(System.String)"/> to create a <see cref="T:OpenAI.Chat.ChatMessageContentPart"/> that
                        encapsulates text.
                    </item>
                    <item>
                        Call <see cref="M:OpenAI.Chat.ChatMessageContentPart.CreateImagePart(System.Uri,System.Nullable{OpenAI.Chat.ChatImageDetailLevel})"/> or
                        <see cref="M:OpenAI.Chat.ChatMessageContentPart.CreateImagePart(System.BinaryData,System.String,System.Nullable{OpenAI.Chat.ChatImageDetailLevel})"/> to create a
                        <see cref="T:OpenAI.Chat.ChatMessageContentPart"/> that encapsulates an image.
                    </item>
                    <item>
                        Call <see cref="M:OpenAI.Chat.ChatMessageContentPart.CreateRefusalPart(System.String)"/> to create a <see cref="T:OpenAI.Chat.ChatMessageContentPart"/> that
                        encapsulates a refusal coming from the model.
                    </item>
                </list>
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatMessageContentPart.Kind">
            <summary> The kind of content part. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatMessageContentPart.Text">
            <summary> The text. </summary>
            <remarks> Present when <see cref="P:OpenAI.Chat.ChatMessageContentPart.Kind"/> is <see cref="F:OpenAI.Chat.ChatMessageContentPartKind.Text"/>. </remarks>
        </member>
        <member name="P:OpenAI.Chat.ChatMessageContentPart.ImageUri">
            <summary> The public internet URI where the image is located. </summary>
            <remarks> Present when <see cref="P:OpenAI.Chat.ChatMessageContentPart.Kind"/> is <see cref="F:OpenAI.Chat.ChatMessageContentPartKind.Image"/>. </remarks>
        </member>
        <member name="P:OpenAI.Chat.ChatMessageContentPart.ImageBytes">
            <summary> The image bytes. </summary>
            <remarks> Present when <see cref="P:OpenAI.Chat.ChatMessageContentPart.Kind"/> is <see cref="F:OpenAI.Chat.ChatMessageContentPartKind.Image"/>. </remarks>
        </member>
        <member name="P:OpenAI.Chat.ChatMessageContentPart.ImageBytesMediaType">
            <summary> The MIME type of the image, e.g., <c>image/png</c>. </summary>
            <remarks> Present when <see cref="P:OpenAI.Chat.ChatMessageContentPart.Kind"/> is <see cref="F:OpenAI.Chat.ChatMessageContentPartKind.Image"/>. </remarks>
        </member>
        <member name="P:OpenAI.Chat.ChatMessageContentPart.ImageDetailLevel">
            <summary>
                The level of detail with which the model should process the image and generate its textual understanding of
                it. Learn more in the <see href="https://platform.openai.com/docs/guides/vision/low-or-high-fidelity-image-understanding">vision guide</see>.
            </summary>
            <remarks> Present when <see cref="P:OpenAI.Chat.ChatMessageContentPart.Kind"/> is <see cref="F:OpenAI.Chat.ChatMessageContentPartKind.Image"/>. </remarks>
        </member>
        <member name="P:OpenAI.Chat.ChatMessageContentPart.Refusal">
            <summary> The refusal message generated by the model. </summary>
            <remarks> Present when <see cref="P:OpenAI.Chat.ChatMessageContentPart.Kind"/> is <see cref="F:OpenAI.Chat.ChatMessageContentPartKind.Refusal"/>. </remarks>
        </member>
        <member name="M:OpenAI.Chat.ChatMessageContentPart.CreateTextPart(System.String)">
            <summary> Creates a new <see cref="T:OpenAI.Chat.ChatMessageContentPart"/> that encapsulates text. </summary>
            <param name="text"> The text. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text"/> is null. </exception>
        </member>
        <member name="M:OpenAI.Chat.ChatMessageContentPart.CreateImagePart(System.Uri,System.Nullable{OpenAI.Chat.ChatImageDetailLevel})">
            <summary> Creates a new <see cref="T:OpenAI.Chat.ChatMessageContentPart"/> that encapsulates an image. </summary>
            <param name="imageUri"> The public internet URI where the image is located. </param>
            <param name="imageDetailLevel">
                The level of detail with which the model should process the image and generate its textual understanding of
                it. Learn more in the <see href="https://platform.openai.com/docs/guides/vision/low-or-high-fidelity-image-understanding">vision guide</see>.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageUri"/> is null. </exception>
        </member>
        <member name="M:OpenAI.Chat.ChatMessageContentPart.CreateImagePart(System.BinaryData,System.String,System.Nullable{OpenAI.Chat.ChatImageDetailLevel})">
            <summary> Creates a new <see cref="T:OpenAI.Chat.ChatMessageContentPart"/> that encapsulates an image. </summary>
            <param name="imageBytes"> The image bytes. </param>
            <param name="imageBytesMediaType"> The MIME type of the image, e.g., <c>image/png</c>. </param>
            <param name="imageDetailLevel">
                The level of detail with which the model should process the image and generate its textual understanding of
                it. Learn more in the <see href="https://platform.openai.com/docs/guides/vision/low-or-high-fidelity-image-understanding">vision guide</see>.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageBytes"/> or <paramref name="imageBytesMediaType"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageBytesMediaType"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Chat.ChatMessageContentPart.CreateRefusalPart(System.String)">
            <summary> Creates a new <see cref="T:OpenAI.Chat.ChatMessageContentPart"/> that encapsulates a refusal coming from the model. </summary>
            <param name="refusal"> The refusal message generated by the model. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="refusal"/> is null. </exception>
        </member>
        <member name="M:OpenAI.Chat.ChatMessageContentPart.op_Implicit(System.String)~OpenAI.Chat.ChatMessageContentPart">
            <summary>
                Implicitly intantiates a new <see cref="T:OpenAI.Chat.ChatMessageContentPart"/> from a <see cref="T:System.String"/>. As such,
                using a <see cref="T:System.String"/> in place of a <see cref="T:OpenAI.Chat.ChatMessageContentPart"/> is equivalent to calling the
                <see cref="M:OpenAI.Chat.ChatMessageContentPart.CreateTextPart(System.String)"/> method.
            </summary>
            <param name="text"> The text encapsulated by this <see cref="T:OpenAI.Chat.ChatMessageContentPart"/>. </param>
        </member>
        <member name="T:OpenAI.Chat.ChatMessageContentPartKind">
            <summary>
            Represents the possibles of underlying data for a chat message's <c>content</c> property.
            </summary>
        </member>
        <member name="T:OpenAI.Chat.ChatMessageRole">
            <summary>
            Represents the <c>role</c> of a chat completion message.
            </summary>
            <remarks>
            <list type="table">
            <listheader>
                <type>Type -</type>
                <role>Role -</role>
                <note>Description</note>
            </listheader>
            <item>
                <type><see cref="F:OpenAI.Chat.ChatMessageRole.System"/> -</type>
                <role><c>system</c> -</role>
                <note>Instructions to the model that guide the behavior of future <c>assistant</c> messages.</note>
            </item>
            <item>
                <type><see cref="F:OpenAI.Chat.ChatMessageRole.User"/> -</type>
                <role><c>user</c> -</role>
                <note>Input messages from the caller, typically paired with <c>assistant</c> messages in a conversation.</note>
            </item>
            <item>
                <type><see cref="F:OpenAI.Chat.ChatMessageRole.Assistant"/> -</type>
                <role><c>assistant</c> -</role>
                <note>
                    Output messages from the model with responses to the <c>user</c> or calls to tools or functions that are
                    needed to continue the logical conversation.
                </note>
            </item>
            <item>
                <type><see cref="F:OpenAI.Chat.ChatMessageRole.Tool"/> -</type>
                <role><c>tool</c> -</role>
                <note>
                    Resolution information for a <see cref="T:OpenAI.Chat.ChatToolCall"/> in an earlier
                    <see cref="T:OpenAI.Chat.AssistantChatMessage"/> that was made against a supplied
                    <see cref="T:OpenAI.Chat.ChatTool"/>.
                </note>
            </item>
            <item>
                <type><see cref="F:OpenAI.Chat.ChatMessageRole.Function"/> -</type>
                <role><c>function</c> -</role>
                <note>
                    Resolution information for a <see cref="T:OpenAI.Chat.ChatFunctionCall"/> in an earlier
                    <see cref="T:OpenAI.Chat.AssistantChatMessage"/> that was made against a supplied
                    <see cref="T:OpenAI.Chat.ChatFunction"/>. Note that <c>functions</c> are deprecated in favor of
                    <c>tool_calls</c>.
                </note>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:OpenAI.Chat.ChatMessageRole.System">
            <summary>
            The <c>system</c> role, which provides instructions to the model that guide the behavior of future
            <c>assistant</c> messages
            </summary>
        </member>
        <member name="F:OpenAI.Chat.ChatMessageRole.User">
            <summary>
            The <c>user</c> role that provides input from the caller as a prompt for model responses.
            </summary>
        </member>
        <member name="F:OpenAI.Chat.ChatMessageRole.Assistant">
            <summary>
            The <c>assistant</c> role that provides output from the model that either issues completions in response to
            <c>user</c> messages or calls provided <c>tools</c> or <c>functions</c>.
            </summary>
        </member>
        <member name="F:OpenAI.Chat.ChatMessageRole.Tool">
            <summary>
            The <c>tool</c> role that provides resolving information to prior <c>tool_calls</c> made by the model against
            supplied <c>tools</c>.
            </summary>
        </member>
        <member name="F:OpenAI.Chat.ChatMessageRole.Function">
            <summary>
            <para>
            The <c>function</c> role that provides resolving information to a prior <c>function_call</c> made by the model
            against a definition supplied in <c>functions</c>.
            </para>
            </summary>
            <remarks>
            <c>functions</c> are deprecated in favor of <c>tools</c> and supplying <c>tools</c> will result in
            <c>tool_calls</c> that must be resolved via the <c>tool</c> role rather than a <c>function_call</c> resolved
            by a <c>function</c> role message.
            </remarks>
        </member>
        <member name="T:OpenAI.Chat.ChatOutputTokenUsageDetails">
            <summary>
            A collection of additional information about the value reported in <see cref="P:OpenAI.Chat.ChatTokenUsage.OutputTokenCount"/>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:OpenAI.Chat.ChatOutputTokenUsageDetails.ReasoningTokenCount" -->
        <member name="T:OpenAI.Chat.ChatResponseFormat">
            <summary>
                The format that the model should output.
                <list>
                    <item>
                        Call <see cref="M:OpenAI.Chat.ChatResponseFormat.CreateTextFormat"/> to create a <see cref="T:OpenAI.Chat.ChatResponseFormat"/> requesting plain
                        text.
                    </item>
                    <item>
                        Call <see cref="M:OpenAI.Chat.ChatResponseFormat.CreateJsonObjectFormat"/> to create a <see cref="T:OpenAI.Chat.ChatResponseFormat"/> requesting
                        valid JSON, a.k.a. JSON mode.
                    </item>
                    <item>
                        Call <see cref="M:OpenAI.Chat.ChatResponseFormat.CreateJsonSchemaFormat(System.String,System.BinaryData,System.String,System.Nullable{System.Boolean})"/> to create a
                        <see cref="T:OpenAI.Chat.ChatResponseFormat"/> requesting adherence to the specified JSON schema,
                        a.k.a. structured outputs.
                    </item>
                </list>
            </summary>
        </member>
        <member name="M:OpenAI.Chat.ChatResponseFormat.CreateTextFormat">
            <summary> Creates a new <see cref="T:OpenAI.Chat.ChatResponseFormat"/> requesting plain text. </summary>
        </member>
        <member name="M:OpenAI.Chat.ChatResponseFormat.CreateJsonObjectFormat">
            <summary> Creates a new <see cref="T:OpenAI.Chat.ChatResponseFormat"/> requesting valid JSON, a.k.a. JSON mode. </summary>
        </member>
        <member name="M:OpenAI.Chat.ChatResponseFormat.CreateJsonSchemaFormat(System.String,System.BinaryData,System.String,System.Nullable{System.Boolean})">
            <summary>
                Creates a new <see cref="T:OpenAI.Chat.ChatResponseFormat"/> requesting adherence to the specified JSON schema,
                a.k.a. structured outputs.
            </summary>
            <param name="jsonSchemaFormatName"> The name of the response format. </param>
            <param name="jsonSchema">
                <para>
                    The schema of the response format, described as a JSON schema. Learn more in the
                    <see href="https://platform.openai.com/docs/guides/structured-outputs">structured outputs guide</see>.
                    and the
                    <see href="https://json-schema.org/understanding-json-schema">JSON schema reference documentation</see>.
                </para>
                <para>
                    You can easily create a JSON schema via the factory methods of the <see cref="T:System.BinaryData"/> class, such
                    as <see cref="M:System.BinaryData.FromBytes(System.Byte[])"/> or <see cref="M:System.BinaryData.FromString(System.String)"/>. For
                    example, the following code defines a simple schema for step-by-step responses to math problems:
                    <code>
                        BinaryData jsonSchema = BinaryData.FromBytes("""
                            {
                                "type": "object",
                                "properties": {
                                    "steps": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "explanation": {"type": "string"},
                                                "output": {"type": "string"}
                                            },
                                            "required": ["explanation", "output"],
                                            "additionalProperties": false
                                        }
                                    },
                                    "final_answer": {"type": "string"}
                                },
                                "required": ["steps", "final_answer"],
                                "additionalProperties": false
                            }
                            """U8.ToArray());
                    </code>
                </para>
            </param>
            <param name="jsonSchemaFormatDescription">
                The description of what the response format is for, which is used by the model to determine how to respond
                in the format.
            </param>
            <param name="jsonSchemaIsStrict">
                <para>
                    Whether to enable strict schema adherence when generating the response. If set to <c>true</c>, the
                    model will follow the exact schema defined in <paramref name="jsonSchema"/>.
                </para>
                <para>
                    Only a subset of the JSON schema specification is supported when this is set to <c>true</c>. Learn more
                    in the
                    <see href="https://platform.openai.com/docs/guides/structured-outputs">structured outputs guide</see>.
                </para>
            </param> 
            <exception cref="T:System.ArgumentNullException"> <paramref name="jsonSchemaFormatName"/> or <paramref name="jsonSchema"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="jsonSchemaFormatName"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="T:OpenAI.Chat.ChatTokenLogProbabilityDetails">
            <summary>
            Represents a single token's log probability information, as requested via
            <see cref="P:OpenAI.Chat.ChatCompletionOptions.IncludeLogProbabilities"/>.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatTokenLogProbabilityDetails.LogProbability">
            <summary> The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value `-9999.0` is used to signify that the token is very unlikely. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatTokenLogProbabilityDetails.Utf8Bytes">
            <summary>
            A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where
            characters are represented by multiple tokens and their byte representations must be combined to generate
            the correct text representation. Can be null if there is no bytes representation for the token.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatTokenLogProbabilityDetails.TopLogProbabilities">
            <summary>
            List of the most likely tokens and their log probability at this token position. In rare cases,
            there may be fewer than the number of requested top_logprobs returned, as supplied via
            <see cref="P:OpenAI.Chat.ChatCompletionOptions.TopLogProbabilityCount"/>.
            </summary>
        </member>
        <member name="T:OpenAI.Chat.ChatTokenTopLogProbabilityDetails">
            <summary>
            Represents a single item of log probability information as requested via
            <see cref="P:OpenAI.Chat.ChatCompletionOptions.IncludeLogProbabilities"/> and
            <see cref="P:OpenAI.Chat.ChatCompletionOptions.TopLogProbabilityCount"/>.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatTokenTopLogProbabilityDetails.LogProbability">
            <summary> The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value `-9999.0` is used to signify that the token is very unlikely. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatTokenTopLogProbabilityDetails.Utf8Bytes">
            <summary>
            A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where
            characters are represented by multiple tokens and their byte representations must be combined to generate
            the correct text representation. Can be null if there is no bytes representation for the token.
            </summary>
        </member>
        <member name="T:OpenAI.Chat.ChatTokenUsage">
            <summary>
            Represents computed token consumption statistics for a chat completion request.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatTokenUsage.OutputTokenCount">
            <summary>
            The combined number of output tokens in the generated completion, as consumed by the model.
            </summary>
            <remarks>
            When using a model that supports <see cref="!:ReasoningTokens"/> such as <c>o1-mini</c>, this value represents
            the sum of those reasoning tokens and conventional, displayed output tokens.
            </remarks>
        </member>
        <member name="P:OpenAI.Chat.ChatTokenUsage.InputTokenCount">
            <summary>
            The number of tokens in the request message input, spanning all message content items.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatTokenUsage.TotalTokenCount">
            <summary>
            The total number of combined input (prompt) and output (completion) tokens used by a chat completion operation.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatTokenUsage.OutputTokenDetails">
            <summary>
            Additional information about the tokens represented by <see cref="P:OpenAI.Chat.ChatTokenUsage.OutputTokenCount"/>, including the count of
            consumed reasoning tokens by supported models.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatTokenUsage.InputTokenDetails">
            <summary>
            Additional information about the tokens represented by <see cref="P:OpenAI.Chat.ChatTokenUsage.InputTokenCount"/>, including the count of
            audio tokens, if applicable to the model.
            </summary>
        </member>
        <member name="T:OpenAI.Chat.ChatTool">
            <summary>
                A tool that the model may call.
                <list>
                    <item>
                        Call <see cref="M:OpenAI.Chat.ChatTool.CreateFunctionTool(System.String,System.String,System.BinaryData,System.Nullable{System.Boolean})"/> to create a
                        <see cref="T:OpenAI.Chat.ChatTool"/> representing a function that the model may call.
                    </item>
                </list>
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatTool.Kind">
            <summary> The kind of tool. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatTool.FunctionName">
            <summary> The name of the function. </summary>
            <remarks> Present when <see cref="P:OpenAI.Chat.ChatTool.Kind"/> is <see cref="F:OpenAI.Chat.ChatToolKind.Function"/>. </remarks>
        </member>
        <member name="P:OpenAI.Chat.ChatTool.FunctionDescription">
            <summary>
                The description of what the function does, which is used by the model to choose when and how to call the
                function.
            </summary>
            <remarks> Present when <see cref="P:OpenAI.Chat.ChatTool.Kind"/> is <see cref="F:OpenAI.Chat.ChatToolKind.Function"/>. </remarks>
        </member>
        <member name="P:OpenAI.Chat.ChatTool.FunctionParameters">
            <summary>
                The parameters that the function accepts, which are described as a JSON schema. If omitted, this
                defines a function with an empty parameter list. Learn more in the
                <see href="https://platform.openai.com/docs/api-reference/chat/docs/guides/function-calling">function calling guide</see>
                and the
                <see href="https://json-schema.org/understanding-json-schema">JSON schema reference documentation</see>.
            </summary>
            <remarks> Present when <see cref="P:OpenAI.Chat.ChatTool.Kind"/> is <see cref="F:OpenAI.Chat.ChatToolKind.Function"/>. </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:OpenAI.Chat.ChatTool.FunctionSchemaIsStrict" -->
        <member name="M:OpenAI.Chat.ChatTool.CreateFunctionTool(System.String,System.String,System.BinaryData,System.Nullable{System.Boolean})">
            <summary> Creates a new <see cref="T:OpenAI.Chat.ChatTool"/> representing a function that the model may call. </summary>
            <param name="functionName"> The name of the function. </param>
            <param name="functionDescription">
                The description of what the function does, which is used by the model to choose when and how to call the
                function.
            </param>
            <param name="functionParameters">
                <para>
                    The parameters that the function accepts, which are described as a JSON schema. If omitted, this
                    defines a function with an empty parameter list. Learn more in the
                    <see href="https://platform.openai.com/docs/api-reference/chat/docs/guides/function-calling">function calling guide</see>
                    and the
                    <see href="https://json-schema.org/understanding-json-schema">JSON schema reference documentation</see>.
                </para>
                <para>
                    You can easily create a JSON schema via the factory methods of the <see cref="T:System.BinaryData"/> class, such
                    as <see cref="M:System.BinaryData.FromBytes(System.Byte[])"/> or <see cref="M:System.BinaryData.FromString(System.String)"/>. For
                    example, the following code defines a simple schema for a function that takes a customer's order ID as
                    a <c>string</c> parameter:
                    <code>
                        BinaryData functionParameters = BinaryData.FromBytes("""
                            {
                                "type": "object",
                                "properties": {
                                    "order_id": {
                                        "type": "string",
                                        "description": "The customer's order ID."
                                    }
                                },
                                "required": ["order_id"],
                                "additionalProperties": false
                            }
                            """u8.ToArray());
                    </code>
                </para>
            </param>
            <param name="functionSchemaIsStrict">
                <para>
                    Whether to enable strict schema adherence when generating the function call. If set to <c>true</c>, the
                    model will follow the exact schema defined in <paramref name="functionParameters"/>.
                </para>
                <para>
                    Only a subset of the JSON schema specification is supported when this is set to <c>true</c>. Learn more
                    about structured outputs in the
                    <see href="https://platform.openai.com/docs/api-reference/chat/docs/guides/function-calling">function calling guide</see>.
                </para>
            </param> 
        </member>
        <member name="T:OpenAI.Chat.ChatToolCall">
            <summary>
                A tool call made by the model.
                <list>
                    <item>
                        Call <see cref="!:CreateFunctionToolCall(string, string, string)"/> to create a
                        <see cref="T:OpenAI.Chat.ChatToolCall"/> representing a function call made by the model.
                    </item>
                </list>
            </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatToolCall.Kind">
            <summary> The kind of tool call. </summary>
        </member>
        <member name="P:OpenAI.Chat.ChatToolCall.FunctionName">
            <summary> The name of the function that the model is calling. </summary>
            <remarks> Present when <see cref="P:OpenAI.Chat.ChatToolCall.Kind"/> is <see cref="F:OpenAI.Chat.ChatToolCallKind.Function"/>. </remarks>
        </member>
        <member name="P:OpenAI.Chat.ChatToolCall.FunctionArguments">
            <summary> 
                The arguments that the model is calling the function with, which are generated by the model in JSON format.
                Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your
                function schema. Validate the arguments in your code before calling your function.
            </summary>
            <remarks> Present when <see cref="P:OpenAI.Chat.ChatToolCall.Kind"/> is <see cref="F:OpenAI.Chat.ChatToolCallKind.Function"/>. </remarks>
        </member>
        <member name="M:OpenAI.Chat.ChatToolCall.CreateFunctionToolCall(System.String,System.String,System.BinaryData)">
            <summary> Creates a new <see cref="T:OpenAI.Chat.ChatToolCall"/> representing a function call made by the model. </summary>
            <param name="id"> The ID of the tool call. </param>
            <param name="functionName"> The name of the function that model is calling. </param>
            <param name="functionArguments">
                The arguments that model is calling the function with, which are generated by the model in JSON format.
                Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your
                function schema. Validate the arguments in your code before calling your function.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id"/>, <paramref name="functionName"/> or <paramref name="functionArguments"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="id"/> or <paramref name="functionName"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="T:OpenAI.Chat.ChatToolChoice">
            <summary>
                The manner in which the model chooses which tool (if any) to call.
                <list>
                    <item>
                        Call <see cref="M:OpenAI.Chat.ChatToolChoice.CreateAutoChoice"/> to create a <see cref="T:OpenAI.Chat.ChatToolChoice"/> indicating that the
                        model can freely pick between generating a message or calling one or more tools.
                    </item>
                    <item>
                        Call <see cref="M:OpenAI.Chat.ChatToolChoice.CreateNoneChoice"/> to create a <see cref="T:OpenAI.Chat.ChatToolChoice"/> indicating that the
                        model must not call any tools and that instead it must generate a message.
                    </item>
                    <item>
                        Call <see cref="M:OpenAI.Chat.ChatToolChoice.CreateRequiredChoice"/> to create a <see cref="T:OpenAI.Chat.ChatToolChoice"/> indicating that the
                        model must call one or more tools.
                    </item>
                    <item>
                        Call <see cref="M:OpenAI.Chat.ChatToolChoice.CreateFunctionChoice(System.String)"/> to create a <see cref="T:OpenAI.Chat.ChatToolChoice"/> indicating
                        that the model must call the specified function.
                    </item>
                </list>
            </summary>
        </member>
        <member name="M:OpenAI.Chat.ChatToolChoice.CreateAutoChoice">
            <summary>
                Creates a new <see cref="T:OpenAI.Chat.ChatToolChoice"/> indicating that the model can freely pick between generating a
                message or calling one or more tools.
            </summary>
        </member>
        <member name="M:OpenAI.Chat.ChatToolChoice.CreateNoneChoice">
            <summary>
                Creates a new <see cref="T:OpenAI.Chat.ChatToolChoice"/> indicating that the model must not call any tools and that
                instead it must generate a message.
            </summary>
        </member>
        <member name="M:OpenAI.Chat.ChatToolChoice.CreateRequiredChoice">
            <summary>
                Creates a new <see cref="T:OpenAI.Chat.ChatToolChoice"/> indicating that the model must call one or more tools.
            </summary>
        </member>
        <member name="M:OpenAI.Chat.ChatToolChoice.CreateFunctionChoice(System.String)">
            <summary>
                Creates a new <see cref="T:OpenAI.Chat.ChatToolChoice"/> indicating that the model must call the specified function.
            </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="functionName"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="functionName"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="T:OpenAI.Chat.FunctionChatMessage">
            <summary>
            Represents a chat message of the <c>function</c> role as provided to a chat completion request. A function message
            resolves a prior <c>function_call</c> received from the model and correlates to both a supplied
            <see cref="T:OpenAI.Chat.ChatFunction"/> instance as well as a <see cref="T:OpenAI.Chat.ChatFunctionCall"/> made by the model on an
            <c>assistant</c> response message.
            </summary>
        </member>
        <member name="M:OpenAI.Chat.FunctionChatMessage.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.FunctionChatMessage"/>.
            </summary>
            <param name="functionName">
                The name of the called function that this message provides information from.
            </param>
            <param name="content">
                The textual content that represents the output or result from the called function. There is no format
                restriction (e.g. JSON) imposed on this content.
            </param>
        </member>
        <member name="P:OpenAI.Chat.FunctionChatMessage.FunctionName">
            <summary>
            The <c>name</c> of the called function that this message provides information from.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.InternalChatCompletionRequestMessageContentPartImageImageUrl.Url">
            <summary> Either a URL of the image or the base64 encoded image data. </summary>
        </member>
        <member name="M:OpenAI.Chat.InternalChatCompletionRequestMessageContentPartImageImageUrl.#ctor(System.Uri)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Chat.InternalChatCompletionRequestMessageContentPartImageImageUrl"/>. </summary>
            <param name="uri"> Either a URL of the image or the base64 encoded image data. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="uri"/> is null. </exception>
        </member>
        <member name="M:OpenAI.Chat.InternalChatCompletionRequestMessageContentPartImageImageUrl.#ctor(System.String,System.Nullable{OpenAI.Chat.ChatImageDetailLevel},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Chat.InternalChatCompletionRequestMessageContentPartImageImageUrl"/>. </summary>
            <param name="url"> Either a URL of the image or the base64 encoded image data. </param>
            <param name="detail"> Specifies the detail level of the image. Learn more in the [Vision guide](/docs/guides/vision/low-or-high-fidelity-image-understanding). </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:OpenAI.Chat.InternalChatCompletionResponseMessage.Role">
            <summary> The role of the author of this message. </summary>
        </member>
        <member name="P:OpenAI.Chat.InternalChatCompletionResponseMessage.Content">
            <summary> The contents of the message. </summary>
        </member>
        <member name="P:OpenAI.Chat.InternalChatCompletionResponseMessage.FunctionCall">
            <summary> Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model. </summary>
        </member>
        <member name="P:OpenAI.Chat.InternalChatCompletionStreamResponseDelta.Role">
            <summary> The role of the author of this message. </summary>
        </member>
        <member name="P:OpenAI.Chat.InternalChatCompletionStreamResponseDelta.Content">
            <summary> The contents of the message. </summary>
        </member>
        <member name="T:OpenAI.Chat.OpenAIChatModelFactory">
            <summary> Model factory for models. </summary>
        </member>
        <member name="M:OpenAI.Chat.OpenAIChatModelFactory.ChatCompletion(System.String,OpenAI.Chat.ChatFinishReason,OpenAI.Chat.ChatMessageContent,System.String,System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatToolCall},OpenAI.Chat.ChatMessageRole,OpenAI.Chat.ChatFunctionCall,System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatTokenLogProbabilityDetails},System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatTokenLogProbabilityDetails},System.DateTimeOffset,System.String,System.String,OpenAI.Chat.ChatTokenUsage)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Chat.ChatCompletion"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Chat.ChatCompletion"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Chat.OpenAIChatModelFactory.ChatTokenLogProbabilityDetails(System.String,System.Single,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatTokenTopLogProbabilityDetails})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Chat.ChatTokenLogProbabilityDetails"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Chat.ChatTokenLogProbabilityDetails"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Chat.OpenAIChatModelFactory.ChatTokenTopLogProbabilityDetails(System.String,System.Single,System.Nullable{System.ReadOnlyMemory{System.Byte}})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Chat.ChatTokenTopLogProbabilityDetails"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Chat.ChatTokenTopLogProbabilityDetails"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Chat.OpenAIChatModelFactory.ChatTokenUsage(System.Int32,System.Int32,System.Int32,OpenAI.Chat.ChatOutputTokenUsageDetails,OpenAI.Chat.ChatInputTokenUsageDetails)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Chat.ChatTokenUsage"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Chat.ChatTokenUsage"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Chat.OpenAIChatModelFactory.ChatInputTokenUsageDetails(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Chat.ChatInputTokenUsageDetails"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Chat.ChatInputTokenUsageDetails"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Chat.OpenAIChatModelFactory.ChatOutputTokenUsageDetails(System.Int32,System.Nullable{System.Int32})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Chat.ChatOutputTokenUsageDetails"/>. </summary>
            <returns> A new <see cref="!:OpenAI.Chat.ChatOutputTokenusageDetails"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Chat.OpenAIChatModelFactory.StreamingChatCompletionUpdate(System.String,OpenAI.Chat.ChatMessageContent,OpenAI.Chat.StreamingChatFunctionCallUpdate,System.Collections.Generic.IEnumerable{OpenAI.Chat.StreamingChatToolCallUpdate},System.Nullable{OpenAI.Chat.ChatMessageRole},System.String,System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatTokenLogProbabilityDetails},System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatTokenLogProbabilityDetails},System.Nullable{OpenAI.Chat.ChatFinishReason},System.DateTimeOffset,System.String,System.String,OpenAI.Chat.ChatTokenUsage)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Chat.StreamingChatCompletionUpdate"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Chat.StreamingChatCompletionUpdate"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Chat.OpenAIChatModelFactory.StreamingChatFunctionCallUpdate(System.String,System.BinaryData)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Chat.StreamingChatFunctionCallUpdate"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Chat.StreamingChatFunctionCallUpdate"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Chat.OpenAIChatModelFactory.StreamingChatToolCallUpdate(System.Int32,System.String,OpenAI.Chat.ChatToolCallKind,System.String,System.BinaryData)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Chat.StreamingChatToolCallUpdate"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Chat.StreamingChatToolCallUpdate"/> instance for mocking. </returns>
        </member>
        <member name="T:OpenAI.Chat.InternalAsyncStreamingChatCompletionUpdateCollection">
            <summary>
            Implementation of collection abstraction over streaming chat updates.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.InternalCreateChatCompletionStreamResponseChoice.FinishReason">
            <summary>
            The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,
            `length` if the maximum number of tokens specified in the request was reached,
            `content_filter` if content was omitted due to a flag from our content filters,
            `tool_calls` if the model called a tool, or `function_call` (deprecated) if the model called a function.
            </summary>
        </member>
        <member name="T:OpenAI.Chat.InternalStreamingChatCompletionUpdateCollection">
            <summary>
            Implementation of collection abstraction over streaming chat updates.
            </summary>
        </member>
        <member name="T:OpenAI.Chat.StreamingChatCompletionUpdate">
            <summary> An incremental update corresponding to a streaming chat completion generated by the model. </summary>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatCompletionUpdate.Object">
            <summary> The object type, which is always `chat.completion.chunk`. </summary>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatCompletionUpdate.CreatedAt">
            <summary> The timestamp when the chat completion was created. </summary>
            <remarks> Each update has the same timestamp. </remarks>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatCompletionUpdate.Usage">
            <summary> The token usage statistics for the entire chat completion. </summary>
            <remarks> Present only in the last streaming update. </remarks>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatCompletionUpdate.FinishReason">
            <summary>
                The reason the model stopped generating tokens. This will be:
                <list>
                    <item>
                        <see cref="F:OpenAI.Chat.ChatFinishReason.Stop"/> if the model hit a natural stop point or a provided stop sequence
                    </item>
                    <item>
                        <see cref="F:OpenAI.Chat.ChatFinishReason.Length"/> if the maximum number of tokens specified in the request was reached
                    </item>
                    <item>
                        <see cref="F:OpenAI.Chat.ChatFinishReason.ContentFilter"/> if content was omitted due to a flag from our content filters
                    </item>
                    <item>
                        <see cref="F:OpenAI.Chat.ChatFinishReason.ToolCalls"/> if the model called a tool
                    </item>
                    <item>
                        <see cref="F:OpenAI.Chat.ChatFinishReason.FunctionCall"/> (obsolte) if the model called a function
                    </item>
                </list>
            </summary>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatCompletionUpdate.ContentTokenLogProbabilities">
            <summary> The message content tokens with log probability information. </summary>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatCompletionUpdate.RefusalTokenLogProbabilities">
            <summary> The message refusal tokens with log probability information. </summary>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatCompletionUpdate.Role">
            <summary> The role of the author of this message. </summary>
            <remarks> Typically present in a single streaming update but applicable to the entire chat completion. </remarks>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatCompletionUpdate.ContentUpdate">
            <summary> The contents of the message update. </summary>
            <remarks> 
                Each streaming update contains only a small portion of tokens. To reconstitute the entire chat completion,
                all <see cref="P:OpenAI.Chat.StreamingChatCompletionUpdate.ContentUpdate"/> values across streaming updates must be combined.
            </remarks>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatCompletionUpdate.ToolCallUpdates">
            <summary> The tool calls generated by the model, such as function calls. </summary>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatCompletionUpdate.RefusalUpdate">
            <summary> The refusal message generated by the model. </summary>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatFunctionCallUpdate.FunctionName">
            <summary> The name of the function to call. </summary>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatFunctionCallUpdate.FunctionArgumentsUpdate">
            <summary>
            Gets a function arguments fragment associated with this update.
            </summary>
            <remarks>
                <para>
                    Each update contains only a small number of tokens. When presenting or reconstituting a full, streamed
                    arguments body, all <see cref="P:OpenAI.Chat.StreamingChatFunctionCallUpdate.FunctionArgumentsUpdate"/> values should be combined.
                </para>
                <para>
                    As is the case for non-streaming <see cref="P:OpenAI.Chat.ChatFunctionCall.FunctionArguments"/>, the content provided
                    for function arguments is not guaranteed to be well-formed JSON or to contain expected data. Callers
                    should validate function arguments before using them.
                </para>
            </remarks>
        </member>
        <member name="T:OpenAI.Chat.StreamingChatToolCallUpdate">
            <summary> A streaming update representing part of a tool call made by the model. </summary>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatToolCallUpdate.Kind">
            <summary> The kind of tool.Currently, only<see cref="F:OpenAI.Chat.ChatToolCallKind.Function"/> is supported. </summary>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatToolCallUpdate.ToolCallId">
            <summary>
            The unique identifier of the tool call being streamed, as used with e.g.
            <see cref="!:ChatToolCall.CreateFunctionToolCall(string, string, string)"/> or
            <see cref="M:OpenAI.Chat.ToolChatMessage.#ctor(System.String,System.String)"/>.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatToolCallUpdate.FunctionName">
            <summary>
            The name of the the tool that the streaming tool call requests invocation of.
            </summary>
        </member>
        <member name="P:OpenAI.Chat.StreamingChatToolCallUpdate.FunctionArgumentsUpdate">
            <summary> 
                The update to the arguments that the model is calling the function with, which are generated by the model
                in JSON format. As part of a streaming response, the arguments are chunked and streamed across streaming
                updates, and must therefore be accumulated in order to reconstruct them. Note that the model does not
                always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate
                the arguments in your code before calling your function.
            </summary>
        </member>
        <member name="T:OpenAI.Chat.SystemChatMessage">
            <summary>
            Represents a chat message of the <c>system</c> role as supplied to a chat completion request. A system message is
            generally supplied as the first message to a chat completion request and guides the model's behavior across future
            <c>assistant</c> role response messages. These messages may help control behavior, style, tone, and
            restrictions for a model-based assistant.
            </summary>
        </member>
        <member name="M:OpenAI.Chat.SystemChatMessage.#ctor(System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessageContentPart})">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.SystemChatMessage"/> using a collection of content items.
            For <c>system</c> messages, these can only be of type <c>text</c>.
            </summary>
            <param name="contentParts">
                The collection of content items associated with the message.
            </param>
        </member>
        <member name="M:OpenAI.Chat.SystemChatMessage.#ctor(OpenAI.Chat.ChatMessageContentPart[])">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.SystemChatMessage"/> using a collection of content items.
            For <c>system</c> messages, these can only be of type <c>text</c>.
            </summary>
            <param name="contentParts">
                The collection of content items associated with the message.
            </param>
        </member>
        <member name="M:OpenAI.Chat.SystemChatMessage.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.SystemChatMessage"/> with a single item of text content.
            </summary>
            <param name="content"> The text content of the message. </param>
        </member>
        <member name="P:OpenAI.Chat.SystemChatMessage.ParticipantName">
            <summary>
            An optional <c>name</c> for the participant.
            </summary>
        </member>
        <member name="T:OpenAI.Chat.ToolChatMessage">
            <summary>
            Represents a chat message of the <c>tool</c> role as supplied to a chat completion request. A tool message
            encapsulates a resolution of a <see cref="T:OpenAI.Chat.ChatToolCall"/> made by the model. The typical interaction flow featuring
            tool messages is:
            <list type="number">
            <item> A <see cref="T:OpenAI.Chat.ToolChatMessage"/> provides a <see cref="T:OpenAI.Chat.ToolChatMessage"/> on a request; </item>
            <item>
                Based on the <c>name</c> and <c>description</c> information of provided tools, the model responds with one or
                more <see cref="T:OpenAI.Chat.ChatToolCall"/> instances that need to be resolved to continue the logical conversation;
            </item>
            <item>
                For each <see cref="T:OpenAI.Chat.ChatToolCall"/>, the matching tool is invoked and its output is supplied back to the model
                via a <see cref="T:OpenAI.Chat.ToolChatMessage"/> to resolve the tool call and allow the logical conversation to
                continue.
            </item>
            </list>
            </summary>
        </member>
        <member name="M:OpenAI.Chat.ToolChatMessage.#ctor(System.String,System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessageContentPart})">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.ToolChatMessage"/> using a collection of content items.
            For <c>tool</c> messages, these can only be of type <c>text</c>.
            </summary>
            <param name="toolCallId">
                The ID of the tool call that this message responds to.
            </param>
            <param name="contentParts">
                The collection of content items associated with the message.
            </param>
        </member>
        <member name="M:OpenAI.Chat.ToolChatMessage.#ctor(System.String,OpenAI.Chat.ChatMessageContentPart[])">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.ToolChatMessage"/> using a collection of content items.
            For <c>tool</c> messages, these can only be of type <c>text</c>.
            </summary>
            <param name="toolCallId">
                The ID of the tool call that this message responds to.
            </param>
            <param name="contentParts">
                The collection of content items associated with the message.
            </param>
        </member>
        <member name="M:OpenAI.Chat.ToolChatMessage.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.ToolChatMessage"/> with a single item of text content.
            </summary>
            <param name="toolCallId">
                The ID of the tool call that this message responds to.
            </param>
            <param name="content"> The text content of the message. </param>
        </member>
        <member name="T:OpenAI.Chat.UserChatMessage">
            <summary>
            Represents a chat message of the <c>user</c> role as supplied to a chat completion request. A user message contains
            information originating from the caller and serves as a prompt for the model to complete. User messages may result
            in either direct <c>assistant</c> message responses or in calls to supplied <c>tools</c> or <c>functions</c>.
            </summary>
        </member>
        <member name="M:OpenAI.Chat.UserChatMessage.#ctor(System.Collections.Generic.IEnumerable{OpenAI.Chat.ChatMessageContentPart})">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.UserChatMessage"/> using a collection of content items that can
            include text and image information. This content format is currently only applicable to the
            <c>gpt-4o</c> and later models and will not be accepted by older models.
            </summary>
            <param name="contentParts">
                The collection of text and image content items associated with the message.
            </param>
        </member>
        <member name="M:OpenAI.Chat.UserChatMessage.#ctor(OpenAI.Chat.ChatMessageContentPart[])">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.UserChatMessage"/> using a collection of content items that can
            include text and image information. This content format is currently only applicable to the
            <c>gpt-4o</c> and later models and will not be accepted by older models.
            </summary>
            <param name="contentParts">
                The collection of text and image content items associated with the message.
            </param>
        </member>
        <member name="M:OpenAI.Chat.UserChatMessage.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Chat.UserChatMessage"/> with ordinary text <c>content</c>.
            </summary>
            <param name="content"> The textual content associated with the message. </param>
        </member>
        <member name="P:OpenAI.Chat.UserChatMessage.ParticipantName">
            <summary>
            An optional <c>name</c> for the participant.
            </summary>
        </member>
        <member name="T:OpenAI.Embeddings.EmbeddingClient">
            <summary> The service client for OpenAI embedding operations. </summary>
        </member>
        <member name="P:OpenAI.Embeddings.EmbeddingClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Embeddings.EmbeddingClient.#ctor(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Embeddings.EmbeddingClient.#ctor(System.String,System.ClientModel.ApiKeyCredential)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Embeddings.EmbeddingClient.#ctor(System.String,System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Embeddings.EmbeddingClient.#ctor(System.ClientModel.Primitives.ClientPipeline,System.String,OpenAI.OpenAIClientOptions)" -->
        <member name="M:OpenAI.Embeddings.EmbeddingClient.GenerateEmbeddingAsync(System.String,OpenAI.Embeddings.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
            <summary> Generates an embedding representing the text input. </summary>
            <param name="input"> The text input to generate an embedding for. </param>
            <param name="options"> The options to configure the embedding generation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="input"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="input"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Embeddings.EmbeddingClient.GenerateEmbedding(System.String,OpenAI.Embeddings.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
            <summary> Generates an embedding representing the text input. </summary>
            <param name="input"> The text input to generate an embedding for. </param>
            <param name="options"> The options to configure the embedding generation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="input"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="input"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Embeddings.EmbeddingClient.GenerateEmbeddingsAsync(System.Collections.Generic.IEnumerable{System.String},OpenAI.Embeddings.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
            <summary> Generates embeddings representing the text inputs. </summary>
            <param name="inputs"> The text inputs to generate embeddings for. </param>
            <param name="options"> The options to configure the embedding generation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="inputs"/> is an empty collection, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Embeddings.EmbeddingClient.GenerateEmbeddings(System.Collections.Generic.IEnumerable{System.String},OpenAI.Embeddings.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
            <summary> Generates embeddings representing the text inputs. </summary>
            <param name="inputs"> The text inputs to generate embeddings for. </param>
            <param name="options"> The options to configure the embedding generation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="inputs"/> is an empty collection, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Embeddings.EmbeddingClient.GenerateEmbeddingsAsync(System.Collections.Generic.IEnumerable{System.ReadOnlyMemory{System.Int32}},OpenAI.Embeddings.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
            <summary> Generates embeddings representing the text inputs. </summary>
            <param name="inputs"> The text inputs to generate embeddings for. </param>
            <param name="options"> The options to configure the embedding generation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="inputs"/> is an empty collection, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Embeddings.EmbeddingClient.GenerateEmbeddings(System.Collections.Generic.IEnumerable{System.ReadOnlyMemory{System.Int32}},OpenAI.Embeddings.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
            <summary> Generates embeddings representing the text inputs. </summary>
            <param name="inputs"> The text inputs to generate embeddings for. </param>
            <param name="options"> The options to configure the embedding generation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="inputs"/> is an empty collection, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Embeddings.EmbeddingClient.GenerateEmbeddingsAsync(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Creates an embedding vector representing the input text.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Embeddings.EmbeddingClient.GenerateEmbeddings(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Creates an embedding vector representing the input text.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="P:OpenAI.Embeddings.EmbeddingGenerationOptions.Input">
            <summary>
            Input text to embed, encoded as a string or array of tokens. To embed multiple inputs in a
            single request, pass an array of strings or array of token arrays. Each input must not exceed
            the max input tokens for the model (8191 tokens for `text-embedding-ada-002`) and cannot be an
            empty string.
            [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb)
            for counting tokens.
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)"/>.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)"/>.
            </para>
            <para>
            <remarks>
            Supported types:
            <list type="bullet">
            <item>
            <description><see cref="T:System.String"/></description>
            </item>
            <item>
            <description><see cref="T:System.Collections.Generic.IList`1"/> where <c>T</c> is of type <see cref="T:System.String"/></description>
            </item>
            <item>
            <description><see cref="T:System.Collections.Generic.IList`1"/> where <c>T</c> is of type <see cref="T:System.Int64"/></description>
            </item>
            <item>
            <description><see cref="T:System.Collections.Generic.IList`1"/> where <c>T</c> is of type <c>IList{long}</c></description>
            </item>
            </list>
            </remarks>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:OpenAI.Embeddings.EmbeddingGenerationOptions.Model">
            <summary>
            ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to
            see all of your available models, or see our [Model overview](/docs/models/overview) for
            descriptions of them.
            </summary>
        </member>
        <member name="P:OpenAI.Embeddings.EmbeddingGenerationOptions.EncodingFormat">
            <summary>
            The format to return the embeddings in. Can be either `float` or
            [`base64`](https://pypi.org/project/pybase64/).
            </summary>
        </member>
        <member name="M:OpenAI.Embeddings.EmbeddingGenerationOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Embeddings.EmbeddingGenerationOptions"/>. </summary>
        </member>
        <member name="P:OpenAI.Embeddings.EmbeddingGenerationOptions.EndUserId">
            <summary>
                A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
                <see href="https://platform.openai.com/docs/guides/safety-best-practices/end-user-ids">Learn more</see>.
            </summary>
        </member>
        <member name="P:OpenAI.Embeddings.EmbeddingTokenUsage.InputTokenCount">
            <summary> The number of tokens used by the input prompts. </summary>
        </member>
        <member name="T:OpenAI.Embeddings.OpenAIEmbedding">
            <summary>
            Represents an embedding vector returned by embedding endpoint.
            </summary>
        </member>
        <member name="P:OpenAI.Embeddings.OpenAIEmbedding.EmbeddingProperty">
            <summary>
            The embedding vector, which is a list of floats. The length of vector depends on the model as
            listed in the [embedding guide](/docs/guides/embeddings).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)"/>.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)"/>.
            </para>
            <para>
            <remarks>
            Supported types:
            <list type="bullet">
            <item>
            <description><see cref="T:System.Collections.Generic.IList`1"/> where <c>T</c> is of type <see cref="T:System.Double"/></description>
            </item>
            <item>
            <description><see cref="T:System.String"/></description>
            </item>
            </list>
            </remarks>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:OpenAI.Embeddings.OpenAIEmbedding.Object">
            <summary> The object type, which is always "embedding". </summary>
        </member>
        <member name="M:OpenAI.Embeddings.OpenAIEmbedding.#ctor(System.Int32,System.BinaryData,OpenAI.Embeddings.InternalEmbeddingObject,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Embeddings.OpenAIEmbedding"/>. </summary>
            <param name="index"> The index of the embedding in the list of embeddings. </param>
            <param name="embeddingProperty">
            The embedding vector, which is a list of floats. The length of vector depends on the model as
            listed in the [embedding guide](/docs/guides/embeddings).
            </param>
            <param name="object"> The object type, which is always "embedding". </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:OpenAI.Embeddings.OpenAIEmbedding.#ctor(System.Int32,System.ReadOnlyMemory{System.Single})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Embeddings.OpenAIEmbedding"/>. </summary>
            <param name="index"> The index of the embedding in the list of embeddings. </param>
            <param name="vector"> The embedding vector, which is a list of floats. </param>
        </member>
        <member name="M:OpenAI.Embeddings.OpenAIEmbedding.ToFloats">
            <summary>
            Gets the embedding vector as a list of floats.
            </summary>
            <returns>A read-only memory segment of floats representing the embedding vector.</returns>
        </member>
        <member name="P:OpenAI.Embeddings.OpenAIEmbeddingCollection.Object">
            <summary> The object type, which is always "list". </summary>
        </member>
        <member name="F:OpenAI.Embeddings.OpenAIEmbeddingCollection.SerializedAdditionalRawData">
            <summary>
            Keeps track of any properties unknown to the library.
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)"/>.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)"/>.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:OpenAI.Embeddings.OpenAIEmbeddingCollection.#ctor(System.Collections.Generic.IEnumerable{OpenAI.Embeddings.OpenAIEmbedding},System.String,OpenAI.Embeddings.EmbeddingTokenUsage)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Embeddings.OpenAIEmbeddingCollection"/>. </summary>
            <param name="data"> The list of embeddings generated by the model. </param>
            <param name="model"> The name of the model used to generate the embedding. </param>
            <param name="usage"> The usage information for the request. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data"/>, <paramref name="model"/> or <paramref name="usage"/> is null. </exception>
        </member>
        <member name="M:OpenAI.Embeddings.OpenAIEmbeddingCollection.#ctor(System.Collections.Generic.IReadOnlyList{OpenAI.Embeddings.OpenAIEmbedding},System.String,OpenAI.Embeddings.InternalCreateEmbeddingResponseObject,OpenAI.Embeddings.EmbeddingTokenUsage,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Embeddings.OpenAIEmbeddingCollection"/>. </summary>
            <param name="data"> The list of embeddings generated by the model. </param>
            <param name="model"> The name of the model used to generate the embedding. </param>
            <param name="object"> The object type, which is always "list". </param>
            <param name="usage"> The usage information for the request. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:OpenAI.Embeddings.OpenAIEmbeddingCollection.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Embeddings.OpenAIEmbeddingCollection"/> for deserialization. </summary>
        </member>
        <member name="T:OpenAI.Embeddings.OpenAIEmbeddingsModelFactory">
            <summary> Model factory for models. </summary>
        </member>
        <member name="M:OpenAI.Embeddings.OpenAIEmbeddingsModelFactory.OpenAIEmbedding(System.Int32,System.Collections.Generic.IEnumerable{System.Single})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Embeddings.OpenAIEmbedding"/>. </summary>
            <returns> A new <see cref="!:OpenAI.Embeddings.Embeddings"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Embeddings.OpenAIEmbeddingsModelFactory.OpenAIEmbeddingCollection(System.Collections.Generic.IEnumerable{OpenAI.Embeddings.OpenAIEmbedding},System.String,OpenAI.Embeddings.EmbeddingTokenUsage)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Embeddings.OpenAIEmbeddingCollection"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Embeddings.OpenAIEmbeddingCollection"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Embeddings.OpenAIEmbeddingsModelFactory.EmbeddingTokenUsage(System.Int32,System.Int32)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Embeddings.EmbeddingTokenUsage"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Embeddings.EmbeddingTokenUsage"/> instance for mocking. </returns>
        </member>
        <member name="P:OpenAI.Files.FileDeletionResult.Object">
            <summary> The object type, which is always `file`. </summary>
        </member>
        <member name="P:OpenAI.Files.InternalFileUploadOptions.File">
            <summary> The file object (not file name) to be uploaded. </summary>
        </member>
        <member name="P:OpenAI.Files.InternalFileUploadOptions.Purpose">
            <summary>
            The intended purpose of the uploaded file. Use "fine-tune" for
            [Fine-tuning](/docs/api-reference/fine-tuning) and "assistants" for
            [Assistants](/docs/api-reference/assistants) and [Messages](/docs/api-reference/messages). This
            allows us to validate the format of the uploaded file is correct for fine-tuning.
            </summary>
        </member>
        <member name="M:OpenAI.Files.InternalFileUploadOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Files.InternalFileUploadOptions"/> for deserialization. </summary>
        </member>
        <member name="P:OpenAI.Files.InternalUploadsClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Files.InternalUploadsClient.#ctor(System.ClientModel.ApiKeyCredential)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Files.InternalUploadsClient.#ctor(System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Files.InternalUploadsClient.#ctor(System.ClientModel.Primitives.ClientPipeline,OpenAI.OpenAIClientOptions)" -->
        <member name="P:OpenAI.Files.OpenAIFile.Object">
            <summary> The object type, which is always "file". </summary>
        </member>
        <member name="P:OpenAI.Files.OpenAIFile.SizeInBytes">
            <summary> The size of the file, in bytes. </summary>
        </member>
        <member name="T:OpenAI.Files.OpenAIFileClient">
            <summary> The service client for OpenAI file operations. </summary>
        </member>
        <member name="P:OpenAI.Files.OpenAIFileClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Files.OpenAIFileClient.#ctor(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Files.OpenAIFileClient.#ctor(System.ClientModel.ApiKeyCredential)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Files.OpenAIFileClient.#ctor(System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Files.OpenAIFileClient.#ctor(System.ClientModel.Primitives.ClientPipeline,OpenAI.OpenAIClientOptions)" -->
        <member name="M:OpenAI.Files.OpenAIFileClient.UploadFileAsync(System.IO.Stream,System.String,OpenAI.Files.FileUploadPurpose,System.Threading.CancellationToken)">
            <summary> Uploads a file that can be used across various operations. </summary>
            <remarks> Individual files can be up to 512 MB, and the size of all files uploaded by one organization can be up to 100 GB. </remarks>
            <param name="file"> The file stream to upload. </param>
            <param name="filename">
                The filename associated with the file stream. The filename's extension (for example: .json) will be used to
                validate the file format. The request may fail if the filename's extension and the actual file format do
                not match.
            </param>
            <param name="purpose"> The intended purpose of the uploaded file. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="file"/> or <paramref name="filename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="filename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.UploadFile(System.IO.Stream,System.String,OpenAI.Files.FileUploadPurpose,System.Threading.CancellationToken)">
            <summary> Uploads a file that can be used across various operations. </summary>
            <remarks> Individual files can be up to 512 MB, and the size of all files uploaded by one organization can be up to 100 GB. </remarks>
            <param name="file"> The file stream to upload. </param>
            <param name="filename">
                The filename associated with the file stream. The filename's extension (for example: .json) will be used to
                validate the file format. The request may fail if the filename's extension and the actual file format do
                not match.
            </param>
            <param name="purpose"> The intended purpose of the uploaded file. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="file"/> or <paramref name="filename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="filename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.UploadFileAsync(System.BinaryData,System.String,OpenAI.Files.FileUploadPurpose)">
            <summary> Uploads a file that can be used across various operations. </summary>
            <remarks> Individual files can be up to 512 MB, and the size of all files uploaded by one organization can be up to 100 GB. </remarks>
            <param name="file"> The file bytes to upload. </param>
            <param name="filename">
                The filename associated with the file bytes. The filename's extension (for example: .json) will be used to
                validate the file format. The request may fail if the filename's extension and the actual file format do
                not match.
            </param>
            <param name="purpose"> The intended purpose of the uploaded file. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="file"/> or <paramref name="filename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="filename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.UploadFile(System.BinaryData,System.String,OpenAI.Files.FileUploadPurpose)">
            <summary> Uploads a file that can be used across various operations. </summary>
            <remarks> Individual files can be up to 512 MB, and the size of all files uploaded by one organization can be up to 100 GB. </remarks>
            <param name="file"> The file bytes to upload. </param>
            <param name="filename">
                The filename associated with the file bytes. The filename's extension (for example: .json) will be used to
                validate the file format. The request may fail if the filename's extension and the actual file format do
                not match.
            </param>
            <param name="purpose"> The intended purpose of the uploaded file. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="file"/> or <paramref name="filename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="filename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.UploadFileAsync(System.String,OpenAI.Files.FileUploadPurpose)">
            <summary> Uploads a file that can be used across various operations. </summary>
            <remarks> Individual files can be up to 512 MB, and the size of all files uploaded by one organization can be up to 100 GB. </remarks>
            <param name="filePath">
                The path of the file to upload. The provided file path's extension (for example: .json) will be used to
                validate the file format. The request may fail if the file path's extension and the actual file format do
                not match.
            </param>
            <param name="purpose"> The intended purpose of the uploaded file. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="filePath"/> was null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="filePath"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.UploadFile(System.String,OpenAI.Files.FileUploadPurpose)">
            <summary> Uploads a file that can be used across various operations. </summary>
            <remarks> Individual files can be up to 512 MB, and the size of all files uploaded by one organization can be up to 100 GB. </remarks>
            <param name="filePath">
                The path of the file to upload. The provided file path's extension (for example: .json) will be used to
                validate the file format. The request may fail if the file path's extension and the actual file format do
                not match.
            </param>
            <param name="purpose"> The intended purpose of the uploaded file. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="filePath"/> was null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="filePath"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.GetFilesAsync(System.Threading.CancellationToken)">
            <summary> Gets basic information about each of the files belonging to the user's organization. </summary>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.GetFiles(System.Threading.CancellationToken)">
            <summary> Gets basic information about each of the files belonging to the user's organization. </summary>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.GetFilesAsync(OpenAI.Files.FilePurpose,System.Threading.CancellationToken)">
            <summary> Gets basic information about each of the files belonging to the user's organization. </summary>
            <param name="purpose"> Only return files with the given purpose. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.GetFiles(OpenAI.Files.FilePurpose,System.Threading.CancellationToken)">
            <summary> Gets basic information about each of the files belonging to the user's organization. </summary>
            <param name="purpose"> Only return files with the given purpose. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.GetFileAsync(System.String,System.Threading.CancellationToken)">
            <summary> Gets basic information about the specified file. </summary>
            <param name="fileId"> The ID of the desired file. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.GetFile(System.String,System.Threading.CancellationToken)">
            <summary> Gets basic information about the specified file. </summary>
            <param name="fileId"> The ID of the desired file. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.DeleteFileAsync(System.String,System.Threading.CancellationToken)">
            <summary> Deletes the specified file. </summary>
            <param name="fileId"> The ID of the file to delete. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.DeleteFile(System.String,System.Threading.CancellationToken)">
            <summary> Deletes the specified file. </summary>
            <param name="fileId"> The ID of the file to delete. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.DownloadFileAsync(System.String,System.Threading.CancellationToken)">
            <summary> Downloads the content of the specified file. </summary>
            <param name="fileId"> The ID of the file to download. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.DownloadFile(System.String,System.Threading.CancellationToken)">
            <summary> Downloads the content of the specified file. </summary>
            <param name="fileId"> The ID of the file to download. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.UploadFileAsync(System.ClientModel.BinaryContent,System.String,System.ClientModel.Primitives.RequestOptions)">
             <summary>
             [Protocol Method] Upload a file that can be used across various endpoints. The size of all the files uploaded by
             one organization can be up to 100 GB.
            
             The size of individual files can be a maximum of 512 MB or 2 million tokens for Assistants. See
             the <see href="https://platform.openai.com/docs/assistants/tools">Assistants Tools guide</see> to
             learn more about the types of files supported. The Fine-tuning API only supports `.jsonl` files.
            
             Please <see href="https://help.openai.com/">contact us</see> if you need to increase these
             storage limits.
             </summary>
             <param name="content"> The content to send as the body of the request. </param>
             <param name="contentType"> The content type of the request. </param>
             <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> or <paramref name="contentType"/> is null. </exception>
             <exception cref="T:System.ArgumentException"> <paramref name="contentType"/> is an empty string, and was expected to be non-empty. </exception>
             <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
             <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.UploadFile(System.ClientModel.BinaryContent,System.String,System.ClientModel.Primitives.RequestOptions)">
             <summary>
             [Protocol Method] Upload a file that can be used across various endpoints. The size of all the files uploaded by
             one organization can be up to 100 GB.
            
             The size of individual files can be a maximum of 512 MB or 2 million tokens for Assistants. See
             the <see href="https://platform.openai.com/docs/assistants/tools">Assistants Tools guide</see> to
             learn more about the types of files supported. The Fine-tuning API only supports `.jsonl` files.
            
             Please <see href="https://help.openai.com/">contact us</see> if you need to increase these
             storage limits.
             </summary>
             <param name="content"> The content to send as the body of the request. </param>
             <param name="contentType"> The content type of the request. </param>
             <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> or <paramref name="contentType"/> is null. </exception>
             <exception cref="T:System.ArgumentException"> <paramref name="contentType"/> is an empty string, and was expected to be non-empty. </exception>
             <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
             <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.GetFilesAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a list of files that belong to the user's organization.
            </summary>
            <param name="purpose"> Only return files with the given purpose. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.GetFiles(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a list of files that belong to the user's organization.
            </summary>
            <param name="purpose"> Only return files with the given purpose. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.GetFileAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves information about a specified file.
            </summary>
            <param name="fileId"> The ID of the file to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.GetFile(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves information about a specified file.
            </summary>
            <param name="fileId"> The ID of the file to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.DeleteFileAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Deletes a previously uploaded file.
            </summary>
            <param name="fileId"> The ID of the file to delete. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.DeleteFile(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Deletes a previously uploaded file.
            </summary>
            <param name="fileId"> The ID of the file to delete. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.DownloadFileAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Downloads the binary content of the specified file.
            </summary>
            <param name="fileId"> The ID of the file to download. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.DownloadFile(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Downloads the binary content of the specified file.
            </summary>
            <param name="fileId"> The ID of the file to download. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.CreateUploadAsync(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Creates an intermediate upload to which data can be added in chunks of bytes. An upload
            can accept at most 8 GB in total and expires an hour after it is created.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileClient.CreateUpload(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Creates an intermediate upload to which data can be added in chunks of bytes. An upload
            can accept at most 8 GB in total and expires an hour after it is created.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Files.OpenAIFileClient.AddUploadPartAsync(System.String,System.ClientModel.BinaryContent,System.String,System.ClientModel.Primitives.RequestOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Files.OpenAIFileClient.AddUploadPart(System.String,System.ClientModel.BinaryContent,System.String,System.ClientModel.Primitives.RequestOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Files.OpenAIFileClient.CompleteUploadAsync(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Files.OpenAIFileClient.CompleteUpload(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Files.OpenAIFileClient.CancelUploadAsync(System.String,System.ClientModel.Primitives.RequestOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Files.OpenAIFileClient.CancelUpload(System.String,System.ClientModel.Primitives.RequestOptions)" -->
        <member name="P:OpenAI.Files.OpenAIFileCollection.Object">
            <summary> Gets the object. </summary>
        </member>
        <member name="F:OpenAI.Files.OpenAIFileCollection.SerializedAdditionalRawData">
            <summary>
            Keeps track of any properties unknown to the library.
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)"/>.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)"/>.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileCollection.#ctor(System.Collections.Generic.IEnumerable{OpenAI.Files.OpenAIFile})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Files.OpenAIFileCollection"/>. </summary>
            <param name="data"></param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data"/> is null. </exception>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileCollection.#ctor(System.Collections.Generic.IReadOnlyList{OpenAI.Files.OpenAIFile},OpenAI.Files.InternalListFilesResponseObject,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Files.OpenAIFileCollection"/>. </summary>
            <param name="data"></param>
            <param name="object"></param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:OpenAI.Files.OpenAIFileCollection.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Files.OpenAIFileCollection"/> for deserialization. </summary>
        </member>
        <member name="T:OpenAI.Files.OpenAIFilesModelFactory">
            <summary> Model factory for models. </summary>
        </member>
        <member name="M:OpenAI.Files.OpenAIFilesModelFactory.FileDeletionResult(System.String,System.Boolean)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Files.FileDeletionResult"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Files.FileDeletionResult"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Files.OpenAIFilesModelFactory.OpenAIFileInfo(System.String,System.Nullable{System.Int32},System.DateTimeOffset,System.String,OpenAI.Files.FilePurpose,OpenAI.Files.FileStatus,System.String)">
            <summary> Initializes a new instance of <see cref="!:OpenAI.Files.OpenAIFileInfo"/>. </summary>
            <returns> A new <see cref="!:OpenAI.Files.OpenAIFileInfo"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Files.OpenAIFilesModelFactory.OpenAIFileCollection(System.Collections.Generic.IEnumerable{OpenAI.Files.OpenAIFile})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Files.OpenAIFileCollection"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Files.OpenAIFileCollection"/> instance for mocking. </returns>
        </member>
        <member name="T:OpenAI.FineTuning.FineTuningClient">
            <summary> The service client for OpenAI fine-tuning operations. </summary>
        </member>
        <member name="P:OpenAI.FineTuning.FineTuningClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.FineTuning.FineTuningClient.#ctor(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.FineTuning.FineTuningClient.#ctor(System.ClientModel.ApiKeyCredential)" -->
        <member name="M:OpenAI.FineTuning.FineTuningClient.#ctor(System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)">
            <summary>
            Initializes a new instance of <see cref="T:OpenAI.FineTuning.FineTuningClient"/> that will use an API key when authenticating.
            </summary>
            <param name="credential"> The API key used to authenticate with the service endpoint. </param>
            <param name="options"> Additional options to customize the client. </param>
            <exception cref="T:System.ArgumentNullException"> The provided <paramref name="credential"/> was null. </exception>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.FineTuning.FineTuningClient.#ctor(System.ClientModel.Primitives.ClientPipeline,OpenAI.OpenAIClientOptions)" -->
        <member name="M:OpenAI.FineTuning.FineTuningClient.CreateFineTuningJobAsync(System.ClientModel.BinaryContent,System.Boolean,System.ClientModel.Primitives.RequestOptions)">
             <summary>
             [Protocol Method] Creates a fine-tuning job which begins the process of creating a new model from a given dataset.
            
             Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.
            
             [Learn more about fine-tuning](/docs/guides/fine-tuning)
             </summary>
             <param name="waitUntilCompleted"> Value indicating whether the method
             should return after the operation has been started and is still running
             on the service, or wait until the operation has completed to return.
             </param>
             <param name="content"> The content to send as the body of the request. </param>
             <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
             <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
             <returns> A <see cref="T:OpenAI.FineTuning.FineTuningJobOperation"/> that can be used to wait for 
             the operation to complete, get information about the fine tuning job, or 
             cancel the operation. </returns>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningClient.CreateFineTuningJob(System.ClientModel.BinaryContent,System.Boolean,System.ClientModel.Primitives.RequestOptions)">
             <summary>
             [Protocol Method] Creates a fine-tuning job which begins the process of creating a new model from a given dataset.
            
             Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.
            
             [Learn more about fine-tuning](/docs/guides/fine-tuning)
             </summary>
             <param name="waitUntilCompleted"> Value indicating whether the method
             should return after the operation has been started and is still running
             on the service, or wait until the operation has completed to return.
             </param>
             <param name="content"> The content to send as the body of the request. </param>
             <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
             <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
             <returns> A <see cref="T:OpenAI.FineTuning.FineTuningJobOperation"/> that can be used to wait for 
             the operation to complete, get information about the fine tuning job, or 
             cancel the operation. </returns>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningClient.GetJobsAsync(System.String,System.Nullable{System.Int32},System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] List your organization's fine-tuning jobs
            </summary>
            <param name="after"> Identifier for the last job from the previous pagination request. </param>
            <param name="limit"> Number of fine-tuning jobs to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningClient.GetJobs(System.String,System.Nullable{System.Int32},System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] List your organization's fine-tuning jobs
            </summary>
            <param name="after"> Identifier for the last job from the previous pagination request. </param>
            <param name="limit"> Number of fine-tuning jobs to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningClient.GetJobAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
             <summary>
             [Protocol Method] Get info about a fine-tuning job.
            
             [Learn more about fine-tuning](/docs/guides/fine-tuning)
             </summary>
             <param name="fineTuningJobId"> The ID of the fine-tuning job. </param>
             <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="fineTuningJobId"/> is null. </exception>
             <exception cref="T:System.ArgumentException"> <paramref name="fineTuningJobId"/> is an empty string, and was expected to be non-empty. </exception>
             <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
             <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningClient.GetJob(System.String,System.ClientModel.Primitives.RequestOptions)">
             <summary>
             [Protocol Method] Get info about a fine-tuning job.
            
             [Learn more about fine-tuning](/docs/guides/fine-tuning)
             </summary>
             <param name="fineTuningJobId"> The ID of the fine-tuning job. </param>
             <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="fineTuningJobId"/> is null. </exception>
             <exception cref="T:System.ArgumentException"> <paramref name="fineTuningJobId"/> is an empty string, and was expected to be non-empty. </exception>
             <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
             <returns> The response returned from the service. </returns>
        </member>
        <member name="T:OpenAI.FineTuning.FineTuningJobOperation">
            <summary>
            A long-running operation for creating a new model from a given dataset.
            </summary>
        </member>
        <member name="P:OpenAI.FineTuning.FineTuningJobOperation.RehydrationToken">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.RehydrateAsync(OpenAI.FineTuning.FineTuningClient,System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Recreates a <see cref="T:OpenAI.FineTuning.FineTuningJobOperation"/> from a rehydration token.
            </summary>
            <param name="client"> The <see cref="T:OpenAI.FineTuning.FineTuningClient"/> used to obtain the 
            operation status from the service. </param>
            <param name="rehydrationToken"> The rehydration token corresponding to 
            the operation to rehydrate. </param>
            <param name="cancellationToken"> A token that can be used to cancel the 
            request. </param>
            <returns> The rehydrated operation. </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client"/> or <paramref name="rehydrationToken"/> is null. </exception>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.Rehydrate(OpenAI.FineTuning.FineTuningClient,System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Recreates a <see cref="T:OpenAI.FineTuning.FineTuningJobOperation"/> from a rehydration token.
            </summary>
            <param name="client"> The <see cref="T:OpenAI.FineTuning.FineTuningClient"/> used to obtain the 
            operation status from the service. </param>
            <param name="rehydrationToken"> The rehydration token corresponding to 
            the operation to rehydrate. </param>
            <param name="cancellationToken"> A token that can be used to cancel the 
            request. </param>
            <returns> The rehydrated operation. </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client"/> or <paramref name="rehydrationToken"/> is null. </exception>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.RehydrateAsync(OpenAI.FineTuning.FineTuningClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Recreates a <see cref="T:OpenAI.FineTuning.FineTuningJobOperation"/> from a rehydration token.
            </summary>
            <param name="client"> The <see cref="T:OpenAI.FineTuning.FineTuningClient"/> used to obtain the 
            operation status from the service. </param>
            <param name="fineTuningJobId"> The id of the fine tuning job to rehydrate.</param>
            <param name="cancellationToken"> A token that can be used to cancel the 
            request. </param>
            <returns> The rehydrated operation. </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client"/> or <paramref name="fineTuningJobId"/> is null. </exception>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.Rehydrate(OpenAI.FineTuning.FineTuningClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Recreates a <see cref="T:OpenAI.FineTuning.FineTuningJobOperation"/> from a rehydration token.
            </summary>
            <param name="client"> The <see cref="T:OpenAI.FineTuning.FineTuningClient"/> used to obtain the 
            operation status from the service. </param>
            <param name="fineTuningJobId"> The id of the fine tuning job to rehydrate.</param>
            <param name="cancellationToken"> A token that can be used to cancel the 
            request. </param>
            <returns> The rehydrated operation. </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client"/> or <paramref name="fineTuningJobId"/> is null. </exception>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.UpdateStatusAsync(System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.UpdateStatus(System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.GetJobAsync(System.ClientModel.Primitives.RequestOptions)">
             <summary>
             [Protocol Method] Get info about a fine-tuning job.
            
             [Learn more about fine-tuning](/docs/guides/fine-tuning)
             </summary>
             <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
             <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
             <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.GetJob(System.ClientModel.Primitives.RequestOptions)">
             <summary>
             [Protocol Method] Get info about a fine-tuning job.
            
             [Learn more about fine-tuning](/docs/guides/fine-tuning)
             </summary>
             <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
             <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
             <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.CancelAsync(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Immediately cancel a fine-tune job.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.Cancel(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Immediately cancel a fine-tune job.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.GetJobEventsAsync(System.String,System.Nullable{System.Int32},System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Get status updates for a fine-tuning job.
            </summary>
            <param name="after"> Identifier for the last event from the previous pagination request. </param>
            <param name="limit"> Number of events to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.GetJobEvents(System.String,System.Nullable{System.Int32},System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Get status updates for a fine-tuning job.
            </summary>
            <param name="after"> Identifier for the last event from the previous pagination request. </param>
            <param name="limit"> Number of events to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.GetJobCheckpointsAsync(System.String,System.Nullable{System.Int32},System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] List the checkpoints for a fine-tuning job.
            </summary>
            <param name="after"> Identifier for the last checkpoint ID from the previous pagination request. </param>
            <param name="limit"> Number of checkpoints to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.GetJobCheckpoints(System.String,System.Nullable{System.Int32},System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] List the checkpoints for a fine-tuning job.
            </summary>
            <param name="after"> Identifier for the last checkpoint ID from the previous pagination request. </param>
            <param name="limit"> Number of checkpoints to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.GetJobCheckpointsPageAsync(System.String,System.Nullable{System.Int32},System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] List the checkpoints for a fine-tuning job.
            </summary>
            <param name="after"> Identifier for the last checkpoint ID from the previous pagination request. </param>
            <param name="limit"> Number of checkpoints to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.GetJobPageCheckpoints(System.String,System.Nullable{System.Int32},System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] List the checkpoints for a fine-tuning job.
            </summary>
            <param name="after"> Identifier for the last checkpoint ID from the previous pagination request. </param>
            <param name="limit"> Number of checkpoints to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.FineTuning.FineTuningJobOperation.GetJobCheckpointsPage(System.String,System.Nullable{System.Int32},System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] List the checkpoints for a fine-tuning job.
            </summary>
            <param name="after"> Identifier for the last checkpoint ID from the previous pagination request. </param>
            <param name="limit"> Number of checkpoints to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="T:OpenAI.Images.GeneratedImage">
            <summary>
            Represents the result data for an image generation request.
            </summary>
        </member>
        <member name="P:OpenAI.Images.GeneratedImage.ImageBytes">
            <summary>
            The binary image data received from the response, provided when
            <see cref="P:OpenAI.Images.ImageGenerationOptions.ResponseFormat"/> is set to <see cref="P:OpenAI.Images.GeneratedImageFormat.Bytes"/>.
            </summary>
            <remarks>
            This property is mutually exclusive with <see cref="P:OpenAI.Images.GeneratedImage.ImageUri"/> and will be <c>null</c> when the other
            is present.
            </remarks>
        </member>
        <member name="P:OpenAI.Images.GeneratedImage.ImageUri">
            <summary>
            A temporary internet location for an image, provided by default or when
            <see cref="P:OpenAI.Images.ImageGenerationOptions.ResponseFormat"/> is set to <see cref="P:OpenAI.Images.GeneratedImageFormat.Uri"/>.
            </summary>
            <remarks>
            This property is mutually exclusive with <see cref="P:OpenAI.Images.GeneratedImage.ImageBytes"/> and will be <c>null</c> when the other
            is present.
            </remarks>
        </member>
        <member name="T:OpenAI.Images.GeneratedImageCollection">
            <summary>
            Represents an image generation response payload that contains information for multiple generated images.
            </summary>
        </member>
        <member name="F:OpenAI.Images.GeneratedImageCollection.SerializedAdditionalRawData">
            <summary>
            Keeps track of any properties unknown to the library.
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)"/>.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)"/>.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:OpenAI.Images.GeneratedImageCollection.#ctor(System.DateTimeOffset,System.Collections.Generic.IEnumerable{OpenAI.Images.GeneratedImage})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Images.GeneratedImageCollection"/>. </summary>
            <param name="created"></param>
            <param name="data"></param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data"/> is null. </exception>
        </member>
        <member name="M:OpenAI.Images.GeneratedImageCollection.#ctor(System.DateTimeOffset,System.Collections.Generic.IReadOnlyList{OpenAI.Images.GeneratedImage},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Images.GeneratedImageCollection"/>. </summary>
            <param name="created"></param>
            <param name="data"></param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:OpenAI.Images.GeneratedImageCollection.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Images.GeneratedImageCollection"/> for deserialization. </summary>
        </member>
        <member name="P:OpenAI.Images.GeneratedImageCollection.CreatedAt">
            <summary>
            The timestamp at which the result image was generated.
            </summary>
        </member>
        <member name="T:OpenAI.Images.GeneratedImageFormat">
            <summary> The format in which the generated images are returned by the service. </summary>
        </member>
        <member name="P:OpenAI.Images.GeneratedImageFormat.Bytes">
            <summary> Returned as bytes in a base64-encoded string. </summary>
        </member>
        <member name="P:OpenAI.Images.GeneratedImageFormat.Uri">
            <summary>
            Returned as a URI pointing to a temporary internet location from where the image can be downlaoded. This URI is
            only valid for 60 minutes after the image is generated.
            </summary>
        </member>
        <member name="T:OpenAI.Images.GeneratedImageQuality">
            <summary> 
                The quality of the image that will be generated. <see cref="P:OpenAI.Images.GeneratedImageQuality.High"/> creates images with finer details and
                greater consistency across the image.
            </summary>
        </member>
        <member name="T:OpenAI.Images.GeneratedImageSize">
            <summary> The size of the image that will be generated. </summary>
        </member>
        <member name="M:OpenAI.Images.GeneratedImageSize.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Images.GeneratedImageSize"/>. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value"/> is null. </exception>
        </member>
        <member name="M:OpenAI.Images.GeneratedImageSize.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.Images.GeneratedImageSize"/>.
            </summary>
            <remarks>
            <b>Note:</b> arbitrary dimensions are not supported and a given model will only support a set of predefined
            sizes. If supported dimensions are not known, try using one of the static properties like <see cref="F:OpenAI.Images.GeneratedImageSize.W1024xH1024"/>.
            </remarks>
            <param name="width"> The desired width, in pixels, for an image. </param>
            <param name="height"> The desired height, in pixels, for an image. </param>
        </member>
        <member name="F:OpenAI.Images.GeneratedImageSize.W256xH256">
            <summary>
            A small, square image with 256 pixels of both width and height.
            <para>
            Supported <b>only</b> for the older <c>dall-e-2</c> model.
            </para>
            </summary>
        </member>
        <member name="F:OpenAI.Images.GeneratedImageSize.W512xH512">
            <summary>
            A medium-small, square image with 512 pixels of both width and height.
            <para>
            Supported <b>only</b> for the older <c>dall-e-2</c> model.
            </para>
            </summary>
        </member>
        <member name="F:OpenAI.Images.GeneratedImageSize.W1024xH1024">
            <summary>
            A square image with 1024 pixels of both width and height.
            <para>
            <b>Supported</b> and <b>default</b> for both <c>dall-e-2</c> and <c>dall-e-3</c> models.
            </para>
            </summary>
        </member>
        <member name="F:OpenAI.Images.GeneratedImageSize.W1024xH1792">
            <summary>
            An extra tall image, 1024 pixels wide by 1792 pixels high.
            <para>
            Supported <b>only</b> for the <c>dall-e-3</c> model.
            </para>
            </summary>
        </member>
        <member name="F:OpenAI.Images.GeneratedImageSize.W1792xH1024">
            <summary>
            An extra wide image, 1792 pixels wide by 1024 pixels high.
            <para>
            Supported <b>only</b> for the <c>dall-e-3</c> model.
            </para>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:OpenAI.Images.GeneratedImageStyle" -->
        <member name="T:OpenAI.Images.ImageClient">
            <summary> The service client for OpenAI image operations. </summary>
        </member>
        <member name="P:OpenAI.Images.ImageClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Images.ImageClient.#ctor(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Images.ImageClient.#ctor(System.String,System.ClientModel.ApiKeyCredential)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Images.ImageClient.#ctor(System.String,System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Images.ImageClient.#ctor(System.ClientModel.Primitives.ClientPipeline,System.String,OpenAI.OpenAIClientOptions)" -->
        <member name="M:OpenAI.Images.ImageClient.GenerateImageAsync(System.String,OpenAI.Images.ImageGenerationOptions,System.Threading.CancellationToken)">
            <summary> Generates an image based on a prompt. </summary>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="options"> The options to configure the image generation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="prompt"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="prompt"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImage(System.String,OpenAI.Images.ImageGenerationOptions,System.Threading.CancellationToken)">
            <summary> Generates an image based on a prompt. </summary>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="options"> The options to configure the image generation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="prompt"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="prompt"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImagesAsync(System.String,System.Int32,OpenAI.Images.ImageGenerationOptions,System.Threading.CancellationToken)">
            <summary> Generates images based on a prompt. </summary>
            <param name="prompt"> A text description of the desired images. </param>
            <param name="imageCount"> The number of images to generate. </param>
            <param name="options"> The options to configure the image generation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="prompt"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="prompt"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImages(System.String,System.Int32,OpenAI.Images.ImageGenerationOptions,System.Threading.CancellationToken)">
            <summary> Generates images based on a prompt. </summary>
            <param name="prompt"> A text description of the desired images. </param>
            <param name="imageCount"> The number of images to generate. </param>
            <param name="options"> The options to configure the image generation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="prompt"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="prompt"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEditAsync(System.IO.Stream,System.String,System.String,OpenAI.Images.ImageEditOptions,System.Threading.CancellationToken)">
            <summary> Generates an edited or extended image based on an original image and a prompt. </summary>
            <param name="image">
                The image stream to edit. Must be a valid PNG file, less than 4MB, and square. The image must have transparency, which
                will be used as the mask.
            </param>
            <param name="imageFilename">
                The filename associated with the image stream. The filename's extension (for example: .png) will be used to
                validate the format of the input image. The request may fail if the filename's extension and the actual
                format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="options"> The options to configure the image edit. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="image"/>, <paramref name="imageFilename"/>, or <paramref name="prompt"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilename"/> or <paramref name="prompt"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEdit(System.IO.Stream,System.String,System.String,OpenAI.Images.ImageEditOptions,System.Threading.CancellationToken)">
            <summary> Generates an edited or extended image based on an original image and a prompt. </summary>
            <param name="image">
                The image stream to edit. Must be a valid PNG file, less than 4MB, and square. The image must have transparency, which
                will be used as the mask.
            </param>
            <param name="imageFilename">
                The filename associated with the image stream. The filename's extension (for example: .png) will be used to
                validate the format of the input image. The request may fail if the filename's extension and the actual
                format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="options"> The options to configure the image edit. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="image"/>, <paramref name="imageFilename"/>, or <paramref name="prompt"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilename"/> or <paramref name="prompt"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEditAsync(System.String,System.String,OpenAI.Images.ImageEditOptions)">
            <summary> Generates an edited or extended image based on an original image and a prompt. </summary>
            <param name="imageFilePath">
                The path of the image file to edit. Must be a valid PNG file, less than 4MB, and square. The image must
                have transparency, which will be used as the mask. The provided file path's extension (for example: .png)
                will be used to validate the format of the input image. The request may fail if the file path's extension
                and the actual format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="options"> The options to configure the image edit. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageFilePath"/> or <paramref name="prompt"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilePath"/> or <paramref name="prompt"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEdit(System.String,System.String,OpenAI.Images.ImageEditOptions)">
            <summary> Generates an edited or extended image based on an original image and a prompt. </summary>
            <param name="imageFilePath">
                The path of the image file to edit. Must be a valid PNG file, less than 4MB, and square. The image must
                have transparency, which will be used as the mask. The provided file path's extension (for example: .png)
                will be used to validate the format of the input image. The request may fail if the file path's extension
                and the actual format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="options"> The options to configure the image edit. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageFilePath"/> or <paramref name="prompt"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilePath"/> or <paramref name="prompt"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEditAsync(System.IO.Stream,System.String,System.String,System.IO.Stream,System.String,OpenAI.Images.ImageEditOptions,System.Threading.CancellationToken)">
            <summary> Generates an edited or extended image based on an original image, a prompt, and a mask. </summary>
            <param name="image"> The image stream to edit. Must be a valid PNG file, less than 4MB, and square. </param>
            <param name="imageFilename">
                The filename associated with the image stream. The filename's extension (for example: .png) will be used to
                validate the format of the input image. The request may fail if the filename's extension and the actual
                format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="mask">
                An additional image whose fully transparent areas (i.e., where alpha is zero) indicate where the original image
                should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as image.
            </param>
            <param name="maskFilename">
                The filename associated with the mask image stream. The filename's extension (for example: .png) will be
                used to validate the format of the mask image. The request may fail if the filename's extension and the
                actual format of the mask image do not match.
            </param>
            <param name="options"> The options to configure the image edit. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="image"/>, <paramref name="imageFilename"/>, <paramref name="prompt"/>, <paramref name="mask"/>, or <paramref name="maskFilename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilename"/>, <paramref name="prompt"/>, or <paramref name="maskFilename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEdit(System.IO.Stream,System.String,System.String,System.IO.Stream,System.String,OpenAI.Images.ImageEditOptions,System.Threading.CancellationToken)">
            <summary> Generates an edited or extended image based on an original image, a prompt, and a mask. </summary>
            <param name="image"> The image stream to edit. Must be a valid PNG file, less than 4MB, and square. </param>
            <param name="imageFilename">
                The filename associated with the image stream. The filename's extension (for example: .png) will be used to
                validate the format of the input image. The request may fail if the filename's extension and the actual
                format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="mask">
                An additional image whose fully transparent areas (i.e., where alpha is zero) indicate where the original image
                should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as image.
            </param>
            <param name="maskFilename">
                The filename associated with the mask image stream. The filename's extension (for example: .png) will be
                used to validate the format of the mask image. The request may fail if the filename's extension and the
                actual format of the mask image do not match.
            </param>
            <param name="options"> The options to configure the image edit. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="image"/>, <paramref name="imageFilename"/>, <paramref name="prompt"/>, <paramref name="mask"/>, or <paramref name="maskFilename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilename"/>, <paramref name="prompt"/>, or <paramref name="maskFilename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEditAsync(System.String,System.String,System.String,OpenAI.Images.ImageEditOptions)">
            <summary> Generates an edited or extended image based on an original image, a prompt, and a mask. </summary>
            <param name="imageFilePath">
                The path of the image file to edit. Must be a valid PNG file, less than 4MB, and square. The provided file
                path's extension (for example: .png) will be used to validate the format of the input image. The request
                may fail if the file path's extension and the actual format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="maskFilePath">
                The path of the mask image file whose fully transparent areas (i.e., where alpha is zero) indicate where
                the original image should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions
                as the original image. The provided file path's extension (for example: .png) will be used to validate the
                format of the mask image. The request may fail if the file path's extension and the actual format of the
                mask image do not match.
            </param>
            <param name="options"> The options to configure the image edit. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageFilePath"/>, <paramref name="prompt"/> or <paramref name="maskFilePath"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilePath"/>, <paramref name="prompt"/>, or <paramref name="maskFilePath"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEdit(System.String,System.String,System.String,OpenAI.Images.ImageEditOptions)">
            <summary> Generates an edited or extended image based on an original image, a prompt, and a mask. </summary>
            <param name="imageFilePath">
                The path of the image file to edit. Must be a valid PNG file, less than 4MB, and square. The provided file
                path's extension (for example: .png) will be used to validate the format of the input image. The request
                may fail if the file path's extension and the actual format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="maskFilePath">
                The path of the mask image file whose fully transparent areas (i.e., where alpha is zero) indicate where
                the original image should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions
                as the original image. The provided file path's extension (for example: .png) will be used to validate the
                format of the mask image. The request may fail if the file path's extension and the actual format of the
                mask image do not match.
            </param>
            <param name="options"> The options to configure the image edit. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageFilePath"/>, <paramref name="prompt"/> or <paramref name="maskFilePath"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilePath"/>, <paramref name="prompt"/>, or <paramref name="maskFilePath"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEditsAsync(System.IO.Stream,System.String,System.String,System.Int32,OpenAI.Images.ImageEditOptions,System.Threading.CancellationToken)">
            <summary> Generates edited or extended images based on an original image and a prompt. </summary>
            <param name="image">
                The image stream to edit. Must be a valid PNG file, less than 4MB, and square. The image must have transparency, which
                will be used as the mask.
            </param>
            <param name="imageFilename">
                The filename associated with the image stream. The filename's extension (for example: .png) will be used to
                validate the format of the input image. The request may fail if the filename's extension and the actual
                format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="imageCount"> The number of edited or extended images to generate. </param>
            <param name="options"> The options to configure the image edit. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="image"/>, <paramref name="imageFilename"/>, or <paramref name="prompt"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilename"/> or <paramref name="prompt"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEdits(System.IO.Stream,System.String,System.String,System.Int32,OpenAI.Images.ImageEditOptions,System.Threading.CancellationToken)">
            <summary> Generates edited or extended images based on an original image and a prompt. </summary>
            <param name="image">
                The image stream to edit. Must be a valid PNG file, less than 4MB, and square. The image must have transparency, which
                will be used as the mask.
            </param>
            <param name="imageFilename">
                The filename associated with the image stream. The filename's extension (for example: .png) will be used to
                validate the format of the input image. The request may fail if the filename's extension and the actual
                format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="imageCount"> The number of edited or extended images to generate. </param>
            <param name="options"> The options to configure the image edit. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="image"/>, <paramref name="imageFilename"/>, or <paramref name="prompt"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilename"/> or <paramref name="prompt"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEditsAsync(System.String,System.String,System.Int32,OpenAI.Images.ImageEditOptions)">
            <summary> Generates edited or extended images based on an original image and a prompt. </summary>
            <param name="imageFilePath">
                The path of the image file to edit. Must be a valid PNG file, less than 4MB, and square. The image must
                have transparency, which will be used as the mask. The provided file path's extension (for example: .png)
                will be used to validate the format of the input image. The request may fail if the file path's extension
                and the actual format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="imageCount"> The number of edited or extended images to generate. </param>
            <param name="options"> The options to configure the image edit. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageFilePath"/> or <paramref name="prompt"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilePath"/> or <paramref name="prompt"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEdits(System.String,System.String,System.Int32,OpenAI.Images.ImageEditOptions)">
            <summary> Generates edited or extended images based on an original image and a prompt. </summary>
            <param name="imageFilePath">
                The path of the image file to edit. Must be a valid PNG file, less than 4MB, and square. The image must
                have transparency, which will be used as the mask. The provided file path's extension (for example: .png)
                will be used to validate the format of the input image. The request may fail if the file path's extension
                and the actual format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="imageCount"> The number of edited or extended images to generate. </param>
            <param name="options"> The options to configure the image edit. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageFilePath"/> or <paramref name="prompt"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilePath"/> or <paramref name="prompt"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEditsAsync(System.IO.Stream,System.String,System.String,System.IO.Stream,System.String,System.Int32,OpenAI.Images.ImageEditOptions,System.Threading.CancellationToken)">
            <summary> Generates edited or extended images based on an original image, a prompt, and a mask. </summary>
            <param name="image"> The image stream to edit. Must be a valid PNG file, less than 4MB, and square. </param>
            <param name="imageFilename">
                The filename associated with the image stream. The filename's extension (for example: .png) will be used to
                validate the format of the input image. The request may fail if the filename's extension and the actual
                format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="mask">
                An additional image whose fully transparent areas (i.e., where alpha is zero) indicate where the original image
                should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as image.
            </param>
            <param name="maskFilename">
                The filename associated with the mask image stream. The filename's extension (for example: .png) will be
                used to validate the format of the mask image. The request may fail if the filename's extension and the
                actual format of the mask image do not match.
            </param>
            <param name="imageCount"> The number of edited or extended images to generate. </param>
            <param name="options"> The options to configure the image edit. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="image"/>, <paramref name="imageFilename"/>, <paramref name="prompt"/>, <paramref name="mask"/>, or <paramref name="maskFilename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilename"/>, <paramref name="prompt"/>, or <paramref name="maskFilename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEdits(System.IO.Stream,System.String,System.String,System.IO.Stream,System.String,System.Int32,OpenAI.Images.ImageEditOptions,System.Threading.CancellationToken)">
            <summary> Generates edited or extended images based on an original image, a prompt, and a mask. </summary>
            <param name="image"> The image stream to edit. Must be a valid PNG file, less than 4MB, and square. </param>
            <param name="imageFilename">
                The filename associated with the image stream. The filename's extension (for example: .png) will be used to
                validate the format of the input image. The request may fail if the filename's extension and the actual
                format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="mask">
                An additional image whose fully transparent areas (i.e., where alpha is zero) indicate where the original image
                should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as image.
            </param>
            <param name="maskFilename">
                The filename associated with the mask image stream. The filename's extension (for example: .png) will be
                used to validate the format of the mask image. The request may fail if the filename's extension and the
                actual format of the mask image do not match.
            </param>
            <param name="imageCount"> The number of edited or extended images to generate. </param>
            <param name="options"> The options to configure the image edit. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="image"/>, <paramref name="imageFilename"/>, <paramref name="prompt"/>, <paramref name="mask"/>, or <paramref name="maskFilename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilename"/>, <paramref name="prompt"/>, or <paramref name="maskFilename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEditsAsync(System.String,System.String,System.String,System.Int32,OpenAI.Images.ImageEditOptions)">
            <summary> Generates edited or extended images based on an original image, a prompt, and a mask. </summary>
            <param name="imageFilePath">
                The path of the image file to edit. Must be a valid PNG file, less than 4MB, and square. The provided file
                path's extension (for example: .png) will be used to validate the format of the input image. The request
                may fail if the file path's extension and the actual format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="maskFilePath">
                The path of the mask image file whose fully transparent areas (i.e., where alpha is zero) indicate where
                the original image should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions
                as the original image. The provided file path's extension (for example: .png) will be used to validate the
                format of the mask image. The request may fail if the file path's extension and the actual format of the
                mask image do not match.
            </param>
            <param name="imageCount"> The number of edited or extended images to generate. </param>
            <param name="options"> The options to configure the image edit. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageFilePath"/>, <paramref name="prompt"/> or <paramref name="maskFilePath"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilePath"/>, <paramref name="prompt"/>, or <paramref name="maskFilePath"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEdits(System.String,System.String,System.String,System.Int32,OpenAI.Images.ImageEditOptions)">
            <summary> Generates edited or extended images based on an original image, a prompt, and a mask. </summary>
            <param name="imageFilePath">
                The path of the image file to edit. Must be a valid PNG file, less than 4MB, and square. The provided file
                path's extension (for example: .png) will be used to validate the format of the input image. The request
                may fail if the file path's extension and the actual format of the input image do not match.
            </param>
            <param name="prompt"> A text description of the desired image. </param>
            <param name="maskFilePath">
                The path of the mask image file whose fully transparent areas (i.e., where alpha is zero) indicate where
                the original image should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions
                as the original image. The provided file path's extension (for example: .png) will be used to validate the
                format of the mask image. The request may fail if the file path's extension and the actual format of the
                mask image do not match.
            </param>
            <param name="imageCount"> The number of edited or extended images to generate. </param>
            <param name="options"> The options to configure the image edit. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageFilePath"/>, <paramref name="prompt"/> or <paramref name="maskFilePath"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilePath"/>, <paramref name="prompt"/>, or <paramref name="maskFilePath"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageVariationAsync(System.IO.Stream,System.String,OpenAI.Images.ImageVariationOptions,System.Threading.CancellationToken)">
            <summary> Generates a variation of a given image. </summary>
            <param name="image"> The image stream to use as the basis for the variation. Must be a valid PNG file, less than 4MB, and square. </param>
            <param name="imageFilename">
                The filename associated with the image stream. The filename's extension (for example: .png) will be used to
                validate the format of the input image. The request may fail if the filename's extension and the actual
                format of the input image do not match.
            </param>
            <param name="options"> The options to configure the image variation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="image"/> or <paramref name="imageFilename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageVariation(System.IO.Stream,System.String,OpenAI.Images.ImageVariationOptions,System.Threading.CancellationToken)">
            <summary> Generates a variation of a given image. </summary>
            <param name="image"> The image stream to use as the basis for the variation. Must be a valid PNG file, less than 4MB, and square. </param>
            <param name="imageFilename">
                The filename associated with the image stream. The filename's extension (for example: .png) will be used to
                validate the format of the input image. The request may fail if the filename's extension and the actual
                format of the input image do not match.
            </param>
            <param name="options"> The options to configure the image variation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="image"/> or <paramref name="imageFilename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageVariationAsync(System.String,OpenAI.Images.ImageVariationOptions)">
            <summary> Generates a variation of a given image. </summary>
            <param name="imageFilePath">
                The path of the image file to use as the basis for the variation. Must be a valid PNG file, less than 4MB,
                and square. The provided file path's extension (for example: .png) will be used to validate the format of
                the input image. The request may fail if the file path's extension and the actual format of the input image
                do not match.
            </param>
            <param name="options"> The options to configure the image variation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageFilePath"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilePath"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageVariation(System.String,OpenAI.Images.ImageVariationOptions)">
            <summary> Generates a variation of a given image. </summary>
            <param name="imageFilePath">
                The path of the image file to use as the basis for the variation. Must be a valid PNG file, less than 4MB,
                and square. The provided file path's extension (for example: .png) will be used to validate the format of
                the input image. The request may fail if the file path's extension and the actual format of the input image
                do not match.
            </param>
            <param name="options"> The options to configure the image variation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageFilePath"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilePath"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageVariationsAsync(System.IO.Stream,System.String,System.Int32,OpenAI.Images.ImageVariationOptions,System.Threading.CancellationToken)">
            <summary> Generates variations of a given image. </summary>
            <param name="image"> The image stream to use as the basis for the variation. Must be a valid PNG file, less than 4MB, and square. </param>
            <param name="imageFilename">
                The filename associated with the image stream. The filename's extension (for example: .png) will be used to
                validate the format of the input image. The request may fail if the filename's extension and the actual
                format of the input image do not match.
            </param>
            <param name="imageCount"> The number of image variations to generate. </param>
            <param name="options"> The options to configure the image variation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="image"/> or <paramref name="imageFilename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageVariations(System.IO.Stream,System.String,System.Int32,OpenAI.Images.ImageVariationOptions,System.Threading.CancellationToken)">
            <summary> Generates variations of a given image. </summary>
            <param name="image"> The image stream to use as the basis for the variation. Must be a valid PNG file, less than 4MB, and square. </param>
            <param name="imageFilename">
                The filename associated with the image stream. The filename's extension (for example: .png) will be used to
                validate the format of the input image. The request may fail if the filename's extension and the actual
                format of the input image do not match.
            </param>
            <param name="imageCount"> The number of image variations to generate. </param>
            <param name="options"> The options to configure the image variation. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="image"/> or <paramref name="imageFilename"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilename"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageVariationsAsync(System.String,System.Int32,OpenAI.Images.ImageVariationOptions)">
            <summary> Generates variations of a given image. </summary>
            <param name="imageFilePath">
                The path of the image file to use as the basis for the variation. Must be a valid PNG file, less than 4MB,
                and square. The provided file path's extension (for example: .png) will be used to validate the format of
                the input image. The request may fail if the file path's extension and the actual format of the input image
                do not match.
            </param>
            <param name="imageCount"> The number of image variations to generate. </param>
            <param name="options"> The options to configure the image variation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageFilePath"/> was null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilePath"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageVariations(System.String,System.Int32,OpenAI.Images.ImageVariationOptions)">
            <summary> Generates variations of a given image. </summary>
            <param name="imageFilePath">
                The path of the image file to use as the basis for the variation. Must be a valid PNG file, less than 4MB,
                and square. The provided file path's extension (for example: .png) will be used to validate the format of
                the input image. The request may fail if the file path's extension and the actual format of the input image
                do not match.
            </param>
            <param name="imageCount"> The number of image variations to generate. </param>
            <param name="options"> The options to configure the image variation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageFilePath"/> was null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="imageFilePath"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImagesAsync(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Generates images based on a given prompt.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImages(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Generates images based on a given prompt.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEditsAsync(System.ClientModel.BinaryContent,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Generates edited or extended images given an original image and a prompt.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="contentType"> The content type of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> or <paramref name="contentType"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="contentType"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageEdits(System.ClientModel.BinaryContent,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Generates edited or extended images given an original image and a prompt.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="contentType"> The content type of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> or <paramref name="contentType"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="contentType"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageVariationsAsync(System.ClientModel.BinaryContent,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method]  Generates variations of a given image.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="contentType"> The content type of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> or <paramref name="contentType"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="contentType"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Images.ImageClient.GenerateImageVariations(System.ClientModel.BinaryContent,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Generates variations of a given image.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="contentType"> The content type of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> or <paramref name="contentType"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="contentType"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="T:OpenAI.Images.ImageEditOptions">
            <summary>
            Represents additional options available to control the behavior of an image generation operation.
            </summary>
        </member>
        <member name="P:OpenAI.Images.ImageEditOptions.Model">
            <summary> The model to use for image generation. Only `dall-e-2` is supported at this time. </summary>
        </member>
        <member name="P:OpenAI.Images.ImageEditOptions.Image">
            <summary>
            The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not
            provided, image must have transparency, which will be used as the mask.
            <para>
            To assign a byte[] to this property use <see cref="M:System.BinaryData.FromBytes(System.Byte[])"/>.
            The byte[] will be serialized to a Base64 encoded string.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromBytes(new byte[] { 1, 2, 3 })</term>
            <description>Creates a payload of "AQID".</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:OpenAI.Images.ImageEditOptions.Prompt">
            <summary> A text description of the desired image(s). The maximum length is 1000 characters. </summary>
        </member>
        <member name="P:OpenAI.Images.ImageEditOptions.Mask">
            <summary>
            An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where
            `image` should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions
            as `image`.
            <para>
            To assign a byte[] to this property use <see cref="M:System.BinaryData.FromBytes(System.Byte[])"/>.
            The byte[] will be serialized to a Base64 encoded string.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromBytes(new byte[] { 1, 2, 3 })</term>
            <description>Creates a payload of "AQID".</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:OpenAI.Images.ImageEditOptions.N">
            <summary> The number of images to generate. Must be between 1 and 10. </summary>
        </member>
        <member name="M:OpenAI.Images.ImageEditOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Images.ImageEditOptions"/>. </summary>
        </member>
        <member name="P:OpenAI.Images.ImageEditOptions.Size">
            <summary> The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`. </summary>
        </member>
        <member name="P:OpenAI.Images.ImageEditOptions.ResponseFormat">
            <summary> The format in which the generated images are returned. Must be one of `url` or `b64_json`. </summary>
        </member>
        <member name="P:OpenAI.Images.ImageEditOptions.EndUserId">
            <summary>
                A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
                <see href="https://platform.openai.com/docs/guides/safety-best-practices/end-user-ids">Learn more</see>.
            </summary>
        </member>
        <member name="T:OpenAI.Images.ImageGenerationOptions">
            <summary>
            Represents additional options available to control the behavior of an image generation operation.
            </summary>
        </member>
        <member name="P:OpenAI.Images.ImageGenerationOptions.Model">
            <summary> The model to use for image generation. </summary>
        </member>
        <member name="P:OpenAI.Images.ImageGenerationOptions.Prompt">
            <summary>
            A text description of the desired image(s). The maximum length is 1000 characters for
            `dall-e-2` and 4000 characters for `dall-e-3`.
            </summary>
        </member>
        <member name="P:OpenAI.Images.ImageGenerationOptions.N">
            <summary>
            The number of images to generate. Must be between 1 and 10. For `dall-e-3`, only `n=1` is
            supported.
            </summary>
        </member>
        <member name="M:OpenAI.Images.ImageGenerationOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Images.ImageGenerationOptions"/>. </summary>
        </member>
        <member name="P:OpenAI.Images.ImageGenerationOptions.EndUserId">
            <summary>
                A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
                <see href="https://platform.openai.com/docs/guides/safety-best-practices/end-user-ids">Learn more</see>.
            </summary>
        </member>
        <member name="T:OpenAI.Images.ImageVariationOptions">
            <summary>
            Represents additional options available to control the behavior of an image generation operation.
            </summary>
        </member>
        <member name="P:OpenAI.Images.ImageVariationOptions.Model">
            <summary> The model to use for image generation. Only `dall-e-2` is supported at this time. </summary>
        </member>
        <member name="P:OpenAI.Images.ImageVariationOptions.Image">
            <summary>
            The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB,
            and square.
            <para>
            To assign a byte[] to this property use <see cref="M:System.BinaryData.FromBytes(System.Byte[])"/>.
            The byte[] will be serialized to a Base64 encoded string.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromBytes(new byte[] { 1, 2, 3 })</term>
            <description>Creates a payload of "AQID".</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:OpenAI.Images.ImageVariationOptions.N">
            <summary> The number of images to generate. Must be between 1 and 10. </summary>
        </member>
        <member name="M:OpenAI.Images.ImageVariationOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Images.ImageVariationOptions"/>. </summary>
        </member>
        <member name="P:OpenAI.Images.ImageVariationOptions.Size">
            <summary> The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`. </summary>
        </member>
        <member name="P:OpenAI.Images.ImageVariationOptions.ResponseFormat">
            <summary> The format in which the generated images are returned. Must be one of `url` or `b64_json`. </summary>
        </member>
        <member name="P:OpenAI.Images.ImageVariationOptions.EndUserId">
            <summary>
                A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
                <see href="https://platform.openai.com/docs/guides/safety-best-practices/end-user-ids">Learn more</see>.
            </summary>
        </member>
        <member name="T:OpenAI.Images.OpenAIImagesModelFactory">
            <summary> Model factory for models. </summary>
        </member>
        <member name="M:OpenAI.Images.OpenAIImagesModelFactory.GeneratedImage(System.BinaryData,System.Uri,System.String)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Images.GeneratedImage"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Images.GeneratedImage"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Images.OpenAIImagesModelFactory.GeneratedImageCollection(System.DateTimeOffset,System.Collections.Generic.IEnumerable{OpenAI.Images.GeneratedImage})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Images.GeneratedImageCollection"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Images.GeneratedImageCollection"/> instance for mocking. </returns>
        </member>
        <member name="F:OpenAI.InternalFunctionDefinition.Parameters">
            <summary>
            The parameters to the function, formatting as a JSON Schema object.
            </summary>
        </member>
        <member name="T:OpenAI.TelemetryDetails">
            <summary>
            Details about the package to be included in UserAgent telemetry
            </summary>
        </member>
        <member name="P:OpenAI.TelemetryDetails.Assembly">
            <summary>
            The package type represented by this <see cref="T:OpenAI.TelemetryDetails"/> instance.
            </summary>
        </member>
        <member name="P:OpenAI.TelemetryDetails.ApplicationId">
            <summary>
            The value of the applicationId used to initialize this <see cref="T:OpenAI.TelemetryDetails"/> instance.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.TelemetryDetails.#ctor(System.Reflection.Assembly,System.String)" -->
        <member name="M:OpenAI.TelemetryDetails.ToString">
            <summary>
            The properly formatted UserAgent string based on this <see cref="T:OpenAI.TelemetryDetails"/> instance.
            </summary>
        </member>
        <member name="M:OpenAI.TelemetryDetails.EscapeProductInformation(System.String)">
            <summary>
            If the ProductInformation is not in the proper format, this escapes any ')' , '(' or '\' characters per https://www.rfc-editor.org/rfc/rfc7230#section-3.2.6
            </summary>
            <param name="productInfo">The ProductInfo portion of the UserAgent</param>
            <returns></returns>
        </member>
        <member name="T:OpenAI.LegacyCompletions.LegacyCompletionClient">
            <summary> The service client for OpenAI legacy completion operations. </summary>
        </member>
        <member name="P:OpenAI.LegacyCompletions.LegacyCompletionClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.LegacyCompletions.LegacyCompletionClient.#ctor(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.LegacyCompletions.LegacyCompletionClient.#ctor(System.String,System.ClientModel.ApiKeyCredential)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.LegacyCompletions.LegacyCompletionClient.#ctor(System.String,System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.LegacyCompletions.LegacyCompletionClient.#ctor(System.ClientModel.Primitives.ClientPipeline,System.String,OpenAI.OpenAIClientOptions)" -->
        <member name="P:OpenAI.Models.ModelDeletionResult.Object">
            <summary> The object type, which is always `model`. </summary>
        </member>
        <member name="T:OpenAI.Models.OpenAIModel">
            <summary>
            Represents information about a single available model entry.
            </summary>
        </member>
        <member name="P:OpenAI.Models.OpenAIModel.Object">
            <summary> The object type, which is always "model". </summary>
        </member>
        <member name="P:OpenAI.Models.OpenAIModel.CreatedAt">
            <summary> The Unix timestamp (in seconds) when the model was created. </summary>
        </member>
        <member name="T:OpenAI.Models.OpenAIModelClient">
            <summary> The service client for OpenAI model operations. </summary>
        </member>
        <member name="P:OpenAI.Models.OpenAIModelClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Models.OpenAIModelClient.#ctor(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Models.OpenAIModelClient.#ctor(System.ClientModel.ApiKeyCredential)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Models.OpenAIModelClient.#ctor(System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Models.OpenAIModelClient.#ctor(System.ClientModel.Primitives.ClientPipeline,OpenAI.OpenAIClientOptions)" -->
        <member name="M:OpenAI.Models.OpenAIModelClient.GetModelsAsync(System.Threading.CancellationToken)">
            <summary> Gets basic information about each of the models that are currently available, such as their corresponding owner and availability. </summary>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelClient.GetModels(System.Threading.CancellationToken)">
            <summary> Gets basic information about each of the models that are currently available, such as their corresponding owner and availability. </summary>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelClient.GetModelAsync(System.String,System.Threading.CancellationToken)">
            <summary> Gets basic information about the specified model, such as its owner and availability. </summary>
            <param name="model"> The name of the desired model. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="model"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="model"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelClient.GetModel(System.String,System.Threading.CancellationToken)">
            <summary> Gets basic information about the specified model, such as its owner and availability. </summary>
            <param name="model"> The name of the desired model. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="model"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="model"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelClient.DeleteModelAsync(System.String,System.Threading.CancellationToken)">
            <summary> Deletes the specified fine-tuned model. </summary>
            <remarks> You must have the role of "owner" within your organization in order to be able to delete a model. </remarks>
            <param name="model"> The name of the model to delete. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="model"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="model"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelClient.DeleteModel(System.String,System.Threading.CancellationToken)">
            <summary> Deletes the specified fine-tuned model. </summary>
            <remarks> You must have the role of "owner" within your organization in order to be able to delete a model. </remarks>
            <param name="model"> The name of the model to delete. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="model"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="model"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelClient.GetModelsAsync(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Lists the currently available models, and provides basic information about each one such as the
            owner and availability.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelClient.GetModels(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Lists the currently available models, and provides basic information about each one such as the
            owner and availability.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelClient.GetModelAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a model instance, providing basic information about the model such as the owner and
            permissioning.
            </summary>
            <param name="model"> The ID of the model to use for this request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="model"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="model"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelClient.GetModel(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a model instance, providing basic information about the model such as the owner and
            permissioning.
            </summary>
            <param name="model"> The ID of the model to use for this request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="model"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="model"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelClient.DeleteModelAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.
            </summary>
            <param name="model"> The model to delete. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="model"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="model"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelClient.DeleteModel(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.
            </summary>
            <param name="model"> The model to delete. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="model"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="model"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="T:OpenAI.Models.OpenAIModelCollection">
            <summary>
            Represents a collection of entries for available models.
            </summary>
        </member>
        <member name="P:OpenAI.Models.OpenAIModelCollection.Object">
            <summary> Gets the object. </summary>
        </member>
        <member name="F:OpenAI.Models.OpenAIModelCollection.SerializedAdditionalRawData">
            <summary>
            Keeps track of any properties unknown to the library.
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)"/>.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)"/>.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelCollection.#ctor(System.Collections.Generic.IEnumerable{OpenAI.Models.OpenAIModel})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Models.OpenAIModelCollection"/>. </summary>
            <param name="data"></param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data"/> is null. </exception>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelCollection.#ctor(OpenAI.Models.InternalListModelsResponseObject,System.Collections.Generic.IReadOnlyList{OpenAI.Models.OpenAIModel},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Models.OpenAIModelCollection"/>. </summary>
            <param name="object"></param>
            <param name="data"></param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelCollection.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Models.OpenAIModelCollection"/> for deserialization. </summary>
        </member>
        <member name="T:OpenAI.Models.OpenAIModelsModelFactory">
            <summary> Model factory for models. </summary>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelsModelFactory.ModelDeletionResult(System.String,System.Boolean)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Models.ModelDeletionResult"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Models.ModelDeletionResult"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelsModelFactory.OpenAIModel(System.String,System.DateTimeOffset,System.String)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Models.OpenAIModel"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Models.OpenAIModel"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Models.OpenAIModelsModelFactory.OpenAIModelCollection(System.Collections.Generic.IEnumerable{OpenAI.Models.OpenAIModel})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Models.OpenAIModelCollection"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Models.OpenAIModelCollection"/> instance for mocking. </returns>
        </member>
        <member name="T:OpenAI.Moderations.ModerationClient">
            <summary> The service client for OpenAI moderation operations. </summary>
        </member>
        <member name="P:OpenAI.Moderations.ModerationClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Moderations.ModerationClient.#ctor(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Moderations.ModerationClient.#ctor(System.String,System.ClientModel.ApiKeyCredential)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Moderations.ModerationClient.#ctor(System.String,System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.Moderations.ModerationClient.#ctor(System.ClientModel.Primitives.ClientPipeline,System.String,OpenAI.OpenAIClientOptions)" -->
        <member name="M:OpenAI.Moderations.ModerationClient.ClassifyTextAsync(System.String,System.Threading.CancellationToken)">
            <summary> Classifies if the text input is potentially harmful across several categories. </summary>
            <param name="input"> The text input to classify. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="input"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="input"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Moderations.ModerationClient.ClassifyText(System.String,System.Threading.CancellationToken)">
            <summary> Classifies if the text input is potentially harmful across several categories. </summary>
            <param name="input"> The text input to classify. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="input"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="input"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Moderations.ModerationClient.ClassifyTextAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary> Classifies if the text inputs are potentially harmful across several categories. </summary>
            <param name="inputs"> The text inputs to classify. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="inputs"/> is an empty collection, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Moderations.ModerationClient.ClassifyText(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary> Classifies if the text inputs are potentially harmful across several categories. </summary>
            <param name="inputs"> The text inputs to classify. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="inputs"/> is an empty collection, and was expected to be non-empty. </exception>
        </member>
        <member name="M:OpenAI.Moderations.ModerationClient.ClassifyTextAsync(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Classifies if text is potentially harmful.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.Moderations.ModerationClient.ClassifyText(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Classifies if text is potentially harmful.
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="P:OpenAI.Moderations.ModerationOptions.Input">
            <summary>
            The input text to classify
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)"/>.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)"/>.
            </para>
            <para>
            <remarks>
            Supported types:
            <list type="bullet">
            <item>
            <description><see cref="T:System.String"/></description>
            </item>
            <item>
            <description><see cref="T:System.Collections.Generic.IList`1"/> where <c>T</c> is of type <see cref="T:System.String"/></description>
            </item>
            </list>
            </remarks>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:OpenAI.Moderations.ModerationOptions.Model">
            <summary>
            Two content moderations models are available: `text-moderation-stable` and
            `text-moderation-latest`. The default is `text-moderation-latest` which will be automatically
            upgraded over time. This ensures you are always using our most accurate model. If you use
            `text-moderation-stable`, we will provide advanced notice before updating the model. Accuracy
            of `text-moderation-stable` may be slightly lower than for `text-moderation-latest`.
            </summary>
        </member>
        <member name="M:OpenAI.Moderations.ModerationOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Moderations.ModerationOptions"/> for deserialization. </summary>
        </member>
        <member name="F:OpenAI.Moderations.ModerationResultCollection.SerializedAdditionalRawData">
            <summary>
            Keeps track of any properties unknown to the library.
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)"/>.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)"/>.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:OpenAI.Moderations.ModerationResultCollection.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{OpenAI.Moderations.ModerationResult})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Moderations.ModerationResultCollection"/>. </summary>
            <param name="id"> The unique identifier for the moderation request. </param>
            <param name="model"> The model used to generate the moderation results. </param>
            <param name="results"> A list of moderation objects. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id"/>, <paramref name="model"/> or <paramref name="results"/> is null. </exception>
        </member>
        <member name="M:OpenAI.Moderations.ModerationResultCollection.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyList{OpenAI.Moderations.ModerationResult},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Moderations.ModerationResultCollection"/>. </summary>
            <param name="id"> The unique identifier for the moderation request. </param>
            <param name="model"> The model used to generate the moderation results. </param>
            <param name="results"> A list of moderation objects. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:OpenAI.Moderations.ModerationResultCollection.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Moderations.ModerationResultCollection"/> for deserialization. </summary>
        </member>
        <member name="T:OpenAI.Moderations.OpenAIModerationsModelFactory">
            <summary> Model factory for models. </summary>
        </member>
        <member name="M:OpenAI.Moderations.OpenAIModerationsModelFactory.ModerationCategory(System.Boolean,System.Single,OpenAI.Moderations.ModerationApplicableInputKinds)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Moderations.ModerationCategory"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Moderations.ModerationCategory"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Moderations.OpenAIModerationsModelFactory.ModerationResultCollection(System.String,System.String,System.Collections.Generic.IEnumerable{OpenAI.Moderations.ModerationResult})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Moderations.ModerationResultCollection"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Moderations.ModerationResultCollection"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.Moderations.OpenAIModerationsModelFactory.ModerationResult(System.Boolean,OpenAI.Moderations.ModerationCategory,OpenAI.Moderations.ModerationCategory,OpenAI.Moderations.ModerationCategory,OpenAI.Moderations.ModerationCategory,OpenAI.Moderations.ModerationCategory,OpenAI.Moderations.ModerationCategory,OpenAI.Moderations.ModerationCategory,OpenAI.Moderations.ModerationCategory,OpenAI.Moderations.ModerationCategory,OpenAI.Moderations.ModerationCategory,OpenAI.Moderations.ModerationCategory,OpenAI.Moderations.ModerationCategory,OpenAI.Moderations.ModerationCategory)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Moderations.ModerationResult"/>. </summary>
            <returns> A new <see cref="T:OpenAI.Moderations.ModerationResult"/> instance for mocking. </returns>
        </member>
        <member name="T:OpenAI.OpenAIClient">
            <summary>
            A top-level client factory that enables convenient creation of scenario-specific sub-clients while reusing shared
            configuration details like endpoint, authentication, and pipeline customization.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.OpenAIClient.#ctor(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.OpenAIClient.#ctor(System.ClientModel.ApiKeyCredential)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.OpenAIClient.#ctor(System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.OpenAIClient.#ctor(System.ClientModel.Primitives.ClientPipeline,OpenAI.OpenAIClientOptions)" -->
        <member name="M:OpenAI.OpenAIClient.GetAssistantClient">
            <summary>
            Gets a new instance of <see cref="T:OpenAI.Assistants.AssistantClient"/> that reuses the client configuration details provided to
            the <see cref="T:OpenAI.OpenAIClient"/> instance.
            </summary>
            <remarks>
            This method is functionally equivalent to using the <see cref="T:OpenAI.Assistants.AssistantClient"/> constructor directly with
            the same configuration details.
            </remarks>
            <returns> A new <see cref="T:OpenAI.Assistants.AssistantClient"/>. </returns>
        </member>
        <member name="M:OpenAI.OpenAIClient.GetAudioClient(System.String)">
            <summary>
            Gets a new instance of <see cref="T:OpenAI.Audio.AudioClient"/> that reuses the client configuration details provided to
            the <see cref="T:OpenAI.OpenAIClient"/> instance.
            </summary>
            <remarks>
            This method is functionally equivalent to using the <see cref="T:OpenAI.Audio.AudioClient"/> constructor directly with
            the same configuration details.
            </remarks>
            <returns> A new <see cref="T:OpenAI.Audio.AudioClient"/>. </returns>
        </member>
        <member name="M:OpenAI.OpenAIClient.GetBatchClient">
            <summary>
            Gets a new instance of <see cref="T:OpenAI.Batch.BatchClient"/> that reuses the client configuration details provided to
            the <see cref="T:OpenAI.OpenAIClient"/> instance.
            </summary>
            <remarks>
            This method is functionally equivalent to using the <see cref="T:OpenAI.Batch.BatchClient"/> constructor directly with
            the same configuration details.
            </remarks>
            <returns> A new <see cref="T:OpenAI.Batch.BatchClient"/>. </returns>
        </member>
        <member name="M:OpenAI.OpenAIClient.GetChatClient(System.String)">
            <summary>
            Gets a new instance of <see cref="T:OpenAI.Chat.ChatClient"/> that reuses the client configuration details provided to
            the <see cref="T:OpenAI.OpenAIClient"/> instance.
            </summary>
            <remarks>
            This method is functionally equivalent to using the <see cref="T:OpenAI.Chat.ChatClient"/> constructor directly with
            the same configuration details.
            </remarks>
            <returns> A new <see cref="T:OpenAI.Chat.ChatClient"/>. </returns>
        </member>
        <member name="M:OpenAI.OpenAIClient.GetEmbeddingClient(System.String)">
            <summary>
            Gets a new instance of <see cref="T:OpenAI.Embeddings.EmbeddingClient"/> that reuses the client configuration details provided to
            the <see cref="T:OpenAI.OpenAIClient"/> instance.
            </summary>
            <remarks>
            This method is functionally equivalent to using the <see cref="T:OpenAI.Embeddings.EmbeddingClient"/> constructor directly with
            the same configuration details.
            </remarks>
            <returns> A new <see cref="T:OpenAI.Embeddings.EmbeddingClient"/>. </returns>
        </member>
        <member name="M:OpenAI.OpenAIClient.GetOpenAIFileClient">
            <summary>
            Gets a new instance of <see cref="T:OpenAI.Files.OpenAIFileClient"/> that reuses the client configuration details provided to
            the <see cref="T:OpenAI.OpenAIClient"/> instance.
            </summary>
            <remarks>
            This method is functionally equivalent to using the <see cref="T:OpenAI.Files.OpenAIFileClient"/> constructor directly with
            the same configuration details.
            </remarks>
            <returns> A new <see cref="T:OpenAI.Files.OpenAIFileClient"/>. </returns>
        </member>
        <member name="M:OpenAI.OpenAIClient.GetFineTuningClient">
            <summary>
            Gets a new instance of <see cref="T:OpenAI.FineTuning.FineTuningClient"/> that reuses the client configuration details provided to
            the <see cref="T:OpenAI.OpenAIClient"/> instance.
            </summary>
            <remarks>
            This method is functionally equivalent to using the <see cref="T:OpenAI.FineTuning.FineTuningClient"/> constructor directly with
            the same configuration details.
            </remarks>
            <returns> A new <see cref="T:OpenAI.FineTuning.FineTuningClient"/>. </returns>
        </member>
        <member name="M:OpenAI.OpenAIClient.GetImageClient(System.String)">
            <summary>
            Gets a new instance of <see cref="T:OpenAI.Images.ImageClient"/> that reuses the client configuration details provided to
            the <see cref="T:OpenAI.OpenAIClient"/> instance.
            </summary>
            <remarks>
            This method is functionally equivalent to using the <see cref="T:OpenAI.Images.ImageClient"/> constructor directly with
            the same configuration details.
            </remarks>
            <returns> A new <see cref="T:OpenAI.Images.ImageClient"/>. </returns>
        </member>
        <member name="M:OpenAI.OpenAIClient.GetOpenAIModelClient">
            <summary>
            Gets a new instance of <see cref="T:OpenAI.Models.OpenAIModelClient"/> that reuses the client configuration details provided to
            the <see cref="T:OpenAI.OpenAIClient"/> instance.
            </summary>
            <remarks>
            This method is functionally equivalent to using the <see cref="T:OpenAI.Models.OpenAIModelClient"/> constructor directly with
            the same configuration details.
            </remarks>
            <returns> A new <see cref="T:OpenAI.Models.OpenAIModelClient"/>. </returns>
        </member>
        <member name="M:OpenAI.OpenAIClient.GetModerationClient(System.String)">
            <summary>
            Gets a new instance of <see cref="T:OpenAI.Moderations.ModerationClient"/> that reuses the client configuration details provided to
            the <see cref="T:OpenAI.OpenAIClient"/> instance.
            </summary>
            <remarks>
            This method is functionally equivalent to using the <see cref="T:OpenAI.Moderations.ModerationClient"/> constructor directly with
            the same configuration details.
            </remarks>
            <returns> A new <see cref="T:OpenAI.Moderations.ModerationClient"/>. </returns>
        </member>
        <member name="M:OpenAI.OpenAIClient.GetVectorStoreClient">
            <summary>
            Gets a new instance of <see cref="T:OpenAI.VectorStores.VectorStoreClient"/> that reuses the client configuration details provided to
            the <see cref="T:OpenAI.OpenAIClient"/> instance.
            </summary>
            <remarks>
            This method is functionally equivalent to using the <see cref="T:OpenAI.VectorStores.VectorStoreClient"/> constructor directly with
            the same configuration details.
            </remarks>
            <returns> A new <see cref="T:OpenAI.Models.OpenAIModelClient"/>. </returns>
        </member>
        <member name="T:OpenAI.OpenAIClientOptions">
            <summary> The options to configure the client. </summary>
        </member>
        <member name="P:OpenAI.OpenAIClientOptions.Endpoint">
            <summary>
            The service endpoint that the client will send requests to. If not set, the default endpoint will be used.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIClientOptions.OrganizationId">
            <summary>
            The value to use for the <c>OpenAI-Organization</c> request header. Users who belong to multiple organizations
            can set this value to specify which organization is used for an API request. Usage from these API requests will
            count against the specified organization's quota. If not set, the header will be omitted, and the default
            organization will be billed. You can change your default organization in your user settings.
            <see href="https://platform.openai.com/docs/guides/production-best-practices/setting-up-your-organization">Learn more</see>.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIClientOptions.ProjectId">
            <summary>
            The value to use for the <c>OpenAI-Project</c> request header. Users who are accessing their projects through
            their legacy user API key can set this value to specify which project is used for an API request. Usage from
            these API requests will count as usage for the specified project. If not set, the header will be omitted, and
            the default project will be accessed.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIClientOptions.UserAgentApplicationId">
            <summary>
            An optional application ID to use as part of the request User-Agent header.
            </summary>
        </member>
        <member name="M:OpenAI.OpenAIModelFactory.OpenAIEmbeddingCollection(System.Collections.Generic.IEnumerable{OpenAI.Embeddings.OpenAIEmbedding},OpenAI.Embeddings.EmbeddingTokenUsage,System.String)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Embeddings.OpenAIEmbeddingCollection"/>. </summary>
            <param name="data"> The list of embeddings generated by the model. </param>
            <param name="model"> The name of the model used to generate the embedding. </param>
            <param name="usage"> The usage information for the request. </param>
            <returns> A new <see cref="T:OpenAI.Embeddings.OpenAIEmbeddingCollection"/> instance for mocking. </returns>
        </member>
        <member name="M:OpenAI.OpenAIModelFactory.OpenAIEmbedding(System.ReadOnlyMemory{System.Single},System.Int32)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.Embeddings.OpenAIEmbedding"/>. </summary>
            <param name="index"> The index of the embedding in the list of embeddings. </param>
            <param name="vector">
            The embedding vector, which is a list of floats. The length of vector depends on the model as
            listed in the [embedding guide](/docs/guides/embeddings).
            </param>
            <returns> A new <see cref="T:OpenAI.Embeddings.OpenAIEmbedding"/> instance for mocking. </returns>
        </member>
        <member name="T:OpenAI.RealtimeConversation.InternalRealtimeServerEventResponseAudioDelta">
            <summary>
            The update (response command) of type <c>response.audio.delta</c>, which is received after correlated
            <see cref="T:OpenAI.RealtimeConversation.ConversationItemStreamingStartedUpdate"/> (<c>response.output_item.added</c>),
            <see cref="T:OpenAI.RealtimeConversation.ConversationItemCreatedUpdate"/> (<c>conversation.item.created</c>), and
            <see cref="!:InternalConversationContentPartStartedUpdate"/> (<c>response.content_part.added)</c> commands that initialize
            an audio content part. This and other related delta events append audio data into the associated content part.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.InternalRealtimeServerEventResponseAudioTranscriptDelta">
            <summary>
            The update (response command) of type <c>response.audio_transcript.delta</c>, which is received while populating
            an output audio content part of a conversation item.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.InternalRealtimeServerEventResponseContentPartAdded">
            <summary>
            The update (response command) of type <c>response.content_part.added</c>, which is received when a response turn
            has begun emission of a content part within a conversation item. This will be followed by some number of
            <c>*delta</c> commands (e.g. <see cref="!:InternalConversationTextContentDeltaUpdate"/> or
            <see cref="!:InternalConversationOutputTranscriptionDeltaUpdate"/>) before finalization via a
            <see cref="!:InternalConversationContentPartFinishedUpdate"/> command (<c>response.content_part.done</c>).
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.InternalRealtimeServerEventResponseContentPartDone">
            <summary>
            The update (response command) of type <c>response.content_part.done</c>, which is received when a response turn
            has completed emission of a content part within a conversation item. This will be preceded by a
            <see cref="!:InternalConversationContentPartStartedUpdate"/> command (<c>response.content_part.added</c>) and some number of
            <c>*delta</c> commands (e.g. <see cref="!:InternalConversationTextContentDeltaUpdate"/> or
            <see cref="!:InternalConversationOutputTranscriptionDeltaUpdate"/>).
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.InternalRealtimeServerEventResponseFunctionCallArgumentsDelta">
            <summary>
            The update (response command) of type <c>response.function_call_arguments.delta</c>, which is received after correlated
            <see cref="T:OpenAI.RealtimeConversation.ConversationItemStreamingStartedUpdate"/> (<c>response.output_item.added</c>) and
            <see cref="T:OpenAI.RealtimeConversation.ConversationItemCreatedUpdate"/> (<c>conversation.item.created</c>) commands that initialize
            a conversation function call item. This and other related delta events append function arguments to the item as
            incremental JSON.
            </summary>
            <remarks>
            Each <c>delta</c> payload only contains a small, incremental portion of the overall function call argument payload
            and is not a valid JSON document on its own. For the complete JSON arguments, refer to
            <see cref="!:InternalConversationFunctionCallArgumentsFinishedUpdate"/> commands or
            <see cref="P:OpenAI.RealtimeConversation.ConversationItemStreamingFinishedUpdate.FunctionCallArguments"/>. Using this incremental JSON deltas requires the
            use of a compatible, incremental parser.
            </remarks>
        </member>
        <member name="T:OpenAI.RealtimeConversation.InternalRealtimeServerEventResponseFunctionCallArgumentsDone">
            <summary>
            The update (response command) of type <c>response.function_call_arguments.done</c>, which is received after all
            associated <see cref="!:InternalConversationFunctionCallArgumentsDeltaUpdate"/> commands have finished incrementally
            streaming the arguments to a conversation function call item. This update contains the complete body of the
            function call arguments and is typically interpreted as a JSON document with parameterization matching the
            associated function definition.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.InternalRealtimeServerEventResponseTextDelta">
            <summary>
            The update (response command) of type <c>response.text.delta</c>, which is received after correlated
            <see cref="T:OpenAI.RealtimeConversation.ConversationItemStreamingStartedUpdate"/> (<c>response.output_item.added</c>),
            <see cref="T:OpenAI.RealtimeConversation.ConversationItemCreatedUpdate"/> (<c>conversation.item.created</c>), and
            <see cref="!:InternalConversationContentPartStartedUpdate"/> (<c>response.content_part.added)</c> commands that initialize
            a text content part. This and other related delta events append text data into the associated content part.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.WebsocketPipelineResponse">
            <summary>
            Represents a <see cref="T:System.ClientModel.Primitives.PipelineResponse"/> encapsulating the data from a WebSocket response message.
            </summary>
            <remarks>
            WebSocket messages can be split across multiple network receive operations and a single
            <see cref="T:OpenAI.RealtimeConversation.WebsocketPipelineResponse"/> may thus ingest and present data across several such operations.
            </remarks>
        </member>
        <member name="M:OpenAI.RealtimeConversation.RealtimeConversationClient.#ctor(System.String,System.ClientModel.ApiKeyCredential)">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.RealtimeConversation.RealtimeConversationClient"/> using an API key for authentication.
            </summary>
            <param name="credential"> The API key to use for authentication. </param>
        </member>
        <member name="M:OpenAI.RealtimeConversation.RealtimeConversationClient.#ctor(System.String,System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.RealtimeConversation.RealtimeConversationClient"/> using an API key for authentication.
            </summary>
            <param name="credential"> The API key to use for authentication. </param>
            <param name="options"> Additional options for configuring the client. </param>
        </member>
        <member name="M:OpenAI.RealtimeConversation.RealtimeConversationClient.StartConversationSessionAsync(System.Threading.CancellationToken)">
            <summary>
            Starts a new <see cref="T:OpenAI.RealtimeConversation.RealtimeConversationSession"/>, optionally applying initial configuration to the session and
            default conversation for the session.
            </summary>
            <remarks>
            The <see cref="T:OpenAI.RealtimeConversation.RealtimeConversationSession"/> abstracts bidirectional communication between the caller and service,
            simultaneously sending and receiving WebSocket messages.
            </remarks>
            <param name="cancellationToken"></param>
            <returns> A new, connected, configured instance of <see cref="T:OpenAI.RealtimeConversation.RealtimeConversationSession"/>. </returns>
        </member>
        <member name="M:OpenAI.RealtimeConversation.RealtimeConversationClient.StartConversationSessionAsync(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            <para>[Protocol Method]</para>
            Creates a new realtime conversation operation instance, establishing the connection and optionally sending an
            initial configuration message payload.
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.RealtimeConversation.RealtimeConversationSession.SendInputAudioAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Transmits audio data from a stream, ending the client turn once the stream is complete.
            </summary>
            <param name="audio"> The audio stream to transmit. </param>
            <param name="cancellationToken"> An optional cancellation token. </param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:OpenAI.RealtimeConversation.RealtimeConversationSession.SendInputAudioAsync(System.BinaryData,System.Threading.CancellationToken)">
            <summary>
            Transmits a single chunk of audio.
            </summary>
            <param name="audio"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:OpenAI.RealtimeConversation.RealtimeConversationSession.SendInputAudio(System.BinaryData,System.Threading.CancellationToken)">
            <summary>
            Transmits a single chunk of audio.
            </summary>
            <param name="audio"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:OpenAI.RealtimeConversation.RealtimeConversationSession.ConnectAsync(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            Initializes an underlying <see cref="P:OpenAI.RealtimeConversation.RealtimeConversationSession.WebSocket"/> instance for communication with the /realtime edpoint and
            then connects to the service using this socket.
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationErrorUpdate">
            <summary>
            The update (response command) of type <c>error</c>, which is received when a problem is encountered while
            processing a request command or generating another response command.
            </summary>
        </member>
        <member name="P:OpenAI.RealtimeConversation.ConversationErrorUpdate.ErrorEventId">
            <summary>
            Gets the identifier that correlates to a prior event associated with this error.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationInputAudioClearedUpdate">
            <summary>
            The update (response command) of type <c>input_audio_buffer.cleared</c>, which is received when a preceding
            <c>input_audio_buffer.clear</c> command
            (<see cref="M:OpenAI.RealtimeConversation.RealtimeConversationSession.ClearInputAudioAsync(System.Threading.CancellationToken)"/> has completed
            purging the user audio input buffer.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationInputAudioCommittedUpdate">
            <summary>
            The update (response command) of type <c>input_audio_buffer.committed</c>, which is received when a preceding
            <c>input_audio_buffer.commit</c> command
            (<see cref="M:OpenAI.RealtimeConversation.RealtimeConversationSession.CommitPendingAudioAsync(System.Threading.CancellationToken)"/> has
            completed submission of the user audio input buffer.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationInputSpeechFinishedUpdate">
            <summary>
            The update (response command) of type <c>input_audio_buffer.speech_started</c>, which is received when a configured
            <c>server_vad</c> <c>turn_detection</c> (including the default) processes the beginning of evaluated human speech
            within the input audio buffer. This will be paired with a matching
            <see cref="T:OpenAI.RealtimeConversation.ConversationInputSpeechFinishedUpdate"/> when the end of speech is detected.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationInputSpeechStartedUpdate">
            <summary>
            The update (response command) of type <c>input_audio_buffer.speech_started</c>, which is received when a configured
            <c>server_vad</c> <c>turn_detection</c> (including the default) processes the end of evaluated human speech
            within the input audio buffer. This will be paired with a matching
            <see cref="T:OpenAI.RealtimeConversation.ConversationInputSpeechStartedUpdate"/> that precedes this command, received when the beginning of human
            speech is detected.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationInputTranscriptionFailedUpdate">
            <summary>
            The update (response command) of type <c>conversation.item.input_audio_transcription.failed</c>, which is received
            when a problem is encountered while processing transcription of the user audio input buffer via configured
            <see cref="T:OpenAI.RealtimeConversation.ConversationInputTranscriptionOptions"/> (<c>input_audio_transcription</c> in <c>session.update</c>)
            settings.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationInputTranscriptionFinishedUpdate">
            <summary>
            The update (response command) of type <c>conversation.item.input_audio_transcription.completed</c>, which is
            received when a configured <c>input_audio_transcription</c> has completed its parallel processing of the user
            audio input buffer.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationItemCreatedUpdate">
            <summary>
            The update (response command) of type <c>conversation.item.created</c>, which is received when a new item has
            been emplaced into the conversation. In the case of model-generated items, this may be preceded by a
            <see cref="T:OpenAI.RealtimeConversation.ConversationItemStreamingStartedUpdate"/> (<c>response.output_item.added</c>) command, in which case the newly-
            created item associated with this update will not yet have content associated with it and will instead have
            content streamed via <c>*delta</c> commands before finalization via a
            <see cref="T:OpenAI.RealtimeConversation.ConversationItemStreamingFinishedUpdate"/> (<c>response.output_item.done</c>).
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationItemDeletedUpdate">
            <summary>
            The update (response command) of type <c>conversation.item.deleted</c>, which is received in response to a
            <c>conversation.item.delete</c> request command
            (<see cref="M:OpenAI.RealtimeConversation.RealtimeConversationSession.DeleteItemAsync(System.String,System.Threading.CancellationToken)"/>).
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationItemStreamingAudioFinishedUpdate">
            <summary>
            The update (response command) of type <c>response.audio.done</c>, which is received after correlated
            <see cref="T:OpenAI.RealtimeConversation.ConversationItemStreamingStartedUpdate"/> (<c>response.output_item.added</c>),
            <see cref="T:OpenAI.RealtimeConversation.ConversationItemCreatedUpdate"/> (<c>conversation.item.created</c>),
            <see cref="!:InternalConversationContentPartStartedUpdate"/> (<c>response.content_part.added)</c>, and
            <see cref="!:InternalConversationAudioContentDeltaUpdate"/> commands. This update indicates that all streamed <c>delta</c> content
            has completed and the associated content part will soon be completed.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationItemStreamingAudioTranscriptionFinishedUpdate">
            <summary>
            The update (response command) of type <c>response.audio_transcript.done</c>, which is received after all
            <see cref="!:InternalConversationOutputTranscriptionDeltaUpdate"/> commands for an output audio content part have been
            received.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationItemStreamingFinishedUpdate">
            <summary>
            The update (response command) of type <c>response.output_item.done</c>, which is received when a new item that was
            added to a conversation by the model has finished streaming all of its content parts and other data. This update
            is preceded by a <see cref="T:OpenAI.RealtimeConversation.ConversationItemStreamingStartedUpdate"/> and some number of <c>*delta</c> commands (such as
            <see cref="!:InternalConversationTextContentDeltaUpdate"/>).
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationItemStreamingPartDeltaUpdate">
            <summary>
            </summary>
            <remarks>
            This type is a shared representation of the following response command types:
            <list type="bullet">
            <item><c>response.content_part.added</c></item>
            <item><c>response.audio.delta</c></item>
            <item><c>response.text.delta</c></item>
            <item><c>response.audio_transcript.delta</c></item>
            <item><c>response.function_call_arguments.delta</c></item>
            </list>
            </remarks>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationItemStreamingPartFinishedUpdate">
            <summary>
            </summary>
            <remarks>
            This type is a shared representation of the <c>response.function_call_arguments.done</c> and
            <c>response.content_part.done</c> response commands.
            </remarks>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationItemStreamingStartedUpdate">
            <summary>
            The update (response command) of type <c>response.output_item.added</c>, which is received when a response turn
            has begun generation of a new conversation item. This new item will have content streamed via <c>*delta</c>
            commands and paired with an ending <c>response.output_item.done</c> update.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationItemStreamingTextFinishedUpdate">
            <summary>
            The update (response command) of type <c>response.text.done</c>, which is received after correlated
            <see cref="T:OpenAI.RealtimeConversation.ConversationItemStreamingStartedUpdate"/> (<c>response.output_item.added</c>),
            <see cref="T:OpenAI.RealtimeConversation.ConversationItemCreatedUpdate"/> (<c>conversation.item.created</c>),
            <see cref="!:InternalConversationContentPartStartedUpdate"/> (<c>response.content_part.added)</c>, and
            <see cref="!:InternalConversationTextContentDeltaUpdate"/> commands. This update indicates that all streamed <c>delta</c> content
            has completed and the associated content part will soon be completed.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationItemTruncatedUpdate">
            <summary>
            The update (response command) of type <c>conversation.item.truncated</c>, which is received in response to a
            <c>conversation.item.truncate</c> request command
            (<see cref="M:OpenAI.RealtimeConversation.RealtimeConversationSession.TruncateItemAsync(System.String,System.Int32,System.TimeSpan,System.Threading.CancellationToken)"/>).
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationRateLimitsUpdate">
            <summary>
            The update (response command) of type <c>rate_limits_updated</c>, which is received during a response and provides
            the most recent information about configured rate limits.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationResponseFinishedUpdate">
            <summary>
            The update (response command) of type <c>response.done</c>, which is received when a model response turn has
            completed and no further content part or item information will be transmitted.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationResponseStartedUpdate">
            <summary>
            The update (response command) of type <c>response.created</c>, which is received when a new service response turn
            has been initiated. A response will snapshot conversation and input audio buffer state for the duration of
            generation and may be triggered by either configured voice activity detection at end of speech or by a caller-
            initiated <c>response.create</c>
            (<see cref="M:OpenAI.RealtimeConversation.RealtimeConversationSession.StartResponseAsync(System.Threading.CancellationToken)"/>).
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationSessionConfiguredUpdate">
            <summary>
            The update (response command) of type <c>session.updated</c>, which is received when a preceding
            <c>session.update</c> request command
            (<see cref="M:OpenAI.RealtimeConversation.RealtimeConversationSession.ConfigureSessionAsync(OpenAI.RealtimeConversation.ConversationSessionOptions,System.Threading.CancellationToken)"/>)
            has been applied to the session. New session configuration related to response generation will not take effect
            until the next response; shared session configuration, such as input audio format, will apply immediately.
            </summary>
        </member>
        <member name="T:OpenAI.RealtimeConversation.ConversationSessionStartedUpdate">
            <summary>
            The update (response command) of type <c>session.created</c>, which is received when a new session has been
            established. This is typically received immediately following connection and the <c>session</c> properties reflect
            the initial, default state of the session. Configuration changes can be made via the <c>session.update</c> request
            command
            (<see cref="M:OpenAI.RealtimeConversation.RealtimeConversationSession.ConfigureSessionAsync(OpenAI.RealtimeConversation.ConversationSessionOptions,System.Threading.CancellationToken)"/>).
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.Unknown">
            <summary>
            A response command that does not map to a <c>type</c> currently handled by the library.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.SessionStarted">
            <summary>
            The <c>session.created</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.SessionConfigured">
            <summary>
            The <c>session.updated</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ItemCreated">
            <summary>
            The <c>conversation.item.created</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ConversationCreated">
            <summary>
            The <c>conversation.c.reated</c> response command.
            </summary>
            <remarks>
            This update kind is currently unused.
            </remarks>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ItemDeleted">
            <summary>
            The <c>conversation.item.deleted</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ItemTruncated">
            <summary>
            The <c>conversation.item.truncated</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ResponseStarted">
            <summary>
            The <c>response.created</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ResponseFinished">
            <summary>
            The <c>response.done</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.RateLimitsUpdated">
            <summary>
            The <c>rate_limits.updated</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ItemStreamingStarted">
            <summary>
            The <c>response.output_item.added</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ItemStreamingFinished">
            <summary>
            The <c>response.output_item.done</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ItemContentPartStarted">
            <summary>
            The <c>response.content_part.added</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ItemContentPartFinished">
            <summary>
            The <c>response.content_part.done</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ItemStreamingPartAudioDelta">
            <summary>
            The <c>response.audio.delta</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ItemStreamingPartAudioFinished">
            <summary>
            The <c>response.audio.done</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ItemStreamingPartAudioTranscriptionDelta">
            <summary>
            The <c>response.audio_transcript.delta</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ItemStreamingPartAudioTranscriptionFinished">
            <summary>
            The <c>response.audio_transcript.done</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ItemStreamingPartTextDelta">
            <summary>
            The <c>response.text.delta</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ItemStreamingPartTextFinished">
            <summary>
            The <c>response.text.done</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ItemStreamingFunctionCallArgumentsDelta">
            <summary>
            The <c>response.function_call_arguments.delta</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.ItemStreamingFunctionCallArgumentsFinished">
            <summary>
            The <c>response.function_call_arguments.done</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.InputSpeechStarted">
            <summary>
            The <c>input_audio_buffer.speech_started</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.InputSpeechStopped">
            <summary>
            The <c>input_audio_buffer.speech_stopped</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.InputTranscriptionFinished">
            <summary>
            The <c>conversation.item.input_audio_transcription.completed</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.InputTranscriptionFailed">
            <summary>
            The <c>conversation.item.input_audio_transcription.failed</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.InputAudioCommitted">
            <summary>
            The <c>input_audio_buffer.committed</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.InputAudioCleared">
            <summary>
            The <c>input_audio_buffer.cleared</c> response command.
            </summary>
        </member>
        <member name="F:OpenAI.RealtimeConversation.ConversationUpdateKind.Error">
            <summary>
            The <c>error</c> response command.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.AddFileToVectorStoreOperation.Value">
            <summary>
            The current value of the add file to vector store operation in progress.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.AddFileToVectorStoreOperation.Status">
            <summary>
            The current status of the add file to vector store operation in progress.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.AddFileToVectorStoreOperation.VectorStoreId">
            <summary>
            The ID of the vector store the file is being added to.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.AddFileToVectorStoreOperation.FileId">
            <summary>
            The ID of the file being added to the vector store.
            </summary>
        </member>
        <member name="M:OpenAI.VectorStores.AddFileToVectorStoreOperation.RehydrateAsync(OpenAI.VectorStores.VectorStoreClient,System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Recreates a <see cref="T:OpenAI.VectorStores.AddFileToVectorStoreOperation"/> from a rehydration token.
            </summary>
            <param name="client"> The <see cref="T:OpenAI.VectorStores.VectorStoreClient"/> used to obtain the 
            operation status from the service. </param>
            <param name="rehydrationToken"> The rehydration token corresponding to 
            the operation to rehydrate. </param>
            <param name="cancellationToken"> A token that can be used to cancel the 
            request. </param>
            <returns> The rehydrated operation. </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client"/> or <paramref name="rehydrationToken"/> is null. </exception>
        </member>
        <member name="M:OpenAI.VectorStores.AddFileToVectorStoreOperation.Rehydrate(OpenAI.VectorStores.VectorStoreClient,System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Recreates a <see cref="T:OpenAI.VectorStores.AddFileToVectorStoreOperation"/> from a rehydration token.
            </summary>
            <param name="client"> The <see cref="T:OpenAI.VectorStores.VectorStoreClient"/> used to obtain the 
            operation status from the service. </param>
            <param name="rehydrationToken"> The rehydration token corresponding to 
            the operation to rehydrate. </param>
            <param name="cancellationToken"> A token that can be used to cancel the 
            request. </param>
            <returns> The rehydrated operation. </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client"/> or <paramref name="rehydrationToken"/> is null. </exception>
        </member>
        <member name="M:OpenAI.VectorStores.AddFileToVectorStoreOperation.UpdateStatusAsync(System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.VectorStores.AddFileToVectorStoreOperation.UpdateStatus(System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.VectorStores.AddFileToVectorStoreOperation.GetFileAssociationAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> instance representing an existing association between a known
            vector store ID and file ID.
            </summary>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> instance. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.AddFileToVectorStoreOperation.GetFileAssociation(System.Threading.CancellationToken)">
            <summary>
            Gets a <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> instance representing an existing association between a known
            vector store ID and file ID.
            </summary>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> instance. </returns>
        </member>
        <member name="P:OpenAI.VectorStores.AddFileToVectorStoreOperation.RehydrationToken">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.VectorStores.AddFileToVectorStoreOperation.GetFileAssociationAsync(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a vector store file.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.AddFileToVectorStoreOperation.GetFileAssociation(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a vector store file.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="T:OpenAI.VectorStores.CreateBatchFileJobOperation">
            <summary>
            Long-running operation for creating a vector store file batch.
            </summary>
            <summary>
            Long-running operation for creating a vector store file batch.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.CreateBatchFileJobOperation.Value">
            <summary>
            The current value of the <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/> in progress.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.CreateBatchFileJobOperation.Status">
            <summary>
            The current status of the <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/> in progress.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.CreateBatchFileJobOperation.VectorStoreId">
            <summary>
            The ID of the vector store corresponding to this batch file operation.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.CreateBatchFileJobOperation.BatchId">
            <summary>
            The ID of the batch file job represented by this operation.
            </summary>
        </member>
        <member name="M:OpenAI.VectorStores.CreateBatchFileJobOperation.RehydrateAsync(OpenAI.VectorStores.VectorStoreClient,System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Recreates a <see cref="T:OpenAI.VectorStores.CreateBatchFileJobOperation"/> from a rehydration token.
            </summary>
            <param name="client"> The <see cref="T:OpenAI.VectorStores.VectorStoreClient"/> used to obtain the 
            operation status from the service. </param>
            <param name="rehydrationToken"> The rehydration token corresponding to 
            the operation to rehydrate. </param>
            <param name="cancellationToken"> A token that can be used to cancel the 
            request. </param>
            <returns> The rehydrated operation. </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client"/> or <paramref name="rehydrationToken"/> is null. </exception>
        </member>
        <member name="M:OpenAI.VectorStores.CreateBatchFileJobOperation.Rehydrate(OpenAI.VectorStores.VectorStoreClient,System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Recreates a <see cref="T:OpenAI.VectorStores.CreateBatchFileJobOperation"/> from a rehydration token.
            </summary>
            <param name="client"> The <see cref="T:OpenAI.VectorStores.VectorStoreClient"/> used to obtain the 
            operation status from the service. </param>
            <param name="rehydrationToken"> The rehydration token corresponding to 
            the operation to rehydrate. </param>
            <param name="cancellationToken"> A token that can be used to cancel the 
            request. </param>
            <returns> The rehydrated operation. </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client"/> or <paramref name="rehydrationToken"/> is null. </exception>
        </member>
        <member name="M:OpenAI.VectorStores.CreateBatchFileJobOperation.UpdateStatusAsync(System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.VectorStores.CreateBatchFileJobOperation.UpdateStatus(System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.VectorStores.CreateBatchFileJobOperation.GetFileBatchAsync(System.Threading.CancellationToken)">
            <summary>
            Gets an existing vector store batch file ingestion job from a known vector store ID and job ID.
            </summary>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/> instance representing the ingestion operation. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.CreateBatchFileJobOperation.GetFileBatch(System.Threading.CancellationToken)">
            <summary>
            Gets an existing vector store batch file ingestion job from a known vector store ID and job ID.
            </summary>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/> instance representing the ingestion operation. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.CreateBatchFileJobOperation.CancelAsync(System.Threading.CancellationToken)">
            <summary>
            Cancels an in-progress <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/>.
            </summary>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> An updated <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/> instance. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.CreateBatchFileJobOperation.Cancel(System.Threading.CancellationToken)">
            <summary>
            Cancels an in-progress <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/>.
            </summary>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> An updated <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/> instance. </returns>
        </member>
        <member name="P:OpenAI.VectorStores.CreateBatchFileJobOperation.RehydrationToken">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.VectorStores.CreateBatchFileJobOperation.GetFileBatchAsync(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a vector store file batch.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.CreateBatchFileJobOperation.GetFileBatch(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a vector store file batch.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.CreateBatchFileJobOperation.CancelAsync(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Cancel a vector store file batch. This attempts to cancel the processing of files in this batch as soon as possible.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.CreateBatchFileJobOperation.Cancel(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Cancel a vector store file batch. This attempts to cancel the processing of files in this batch as soon as possible.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="P:OpenAI.VectorStores.CreateVectorStoreOperation.Value">
            <summary>
            The current value of the create <see cref="T:OpenAI.VectorStores.VectorStore"/> operation in progress.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.CreateVectorStoreOperation.Status">
            <summary>
            The current status of the create <see cref="T:OpenAI.VectorStores.VectorStore"/> operation in progress.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.CreateVectorStoreOperation.VectorStoreId">
            <summary>
            The ID of the vector store being created.
            </summary>
        </member>
        <member name="M:OpenAI.VectorStores.CreateVectorStoreOperation.RehydrateAsync(OpenAI.VectorStores.VectorStoreClient,System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Recreates a <see cref="T:OpenAI.VectorStores.CreateVectorStoreOperation"/> from a rehydration token.
            </summary>
            <param name="client"> The <see cref="T:OpenAI.VectorStores.VectorStoreClient"/> used to obtain the 
            operation status from the service. </param>
            <param name="rehydrationToken"> The rehydration token corresponding to 
            the operation to rehydrate. </param>
            <param name="cancellationToken"> A token that can be used to cancel the 
            request. </param>
            <returns> The rehydrated operation. </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client"/> or <paramref name="rehydrationToken"/> is null. </exception>
        </member>
        <member name="M:OpenAI.VectorStores.CreateVectorStoreOperation.Rehydrate(OpenAI.VectorStores.VectorStoreClient,System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Recreates a <see cref="T:OpenAI.VectorStores.CreateVectorStoreOperation"/> from a rehydration token.
            </summary>
            <param name="client"> The <see cref="T:OpenAI.VectorStores.VectorStoreClient"/> used to obtain the 
            operation status from the service. </param>
            <param name="rehydrationToken"> The rehydration token corresponding to 
            the operation to rehydrate. </param>
            <param name="cancellationToken"> A token that can be used to cancel the 
            request. </param>
            <returns> The rehydrated operation. </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client"/> or <paramref name="rehydrationToken"/> is null. </exception>
        </member>
        <member name="M:OpenAI.VectorStores.CreateVectorStoreOperation.UpdateStatusAsync(System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.VectorStores.CreateVectorStoreOperation.UpdateStatus(System.ClientModel.Primitives.RequestOptions)">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.VectorStores.CreateVectorStoreOperation.GetVectorStoreAsync(System.Threading.CancellationToken)">
            <summary>
            Gets an instance representing an existing <see cref="T:OpenAI.VectorStores.VectorStore"/>.
            </summary>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <returns> A representation of an existing <see cref="T:OpenAI.VectorStores.VectorStore"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.CreateVectorStoreOperation.GetVectorStore(System.Threading.CancellationToken)">
            <summary>
            Gets an instance representing an existing <see cref="T:OpenAI.VectorStores.VectorStore"/>.
            </summary>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <returns> A representation of an existing <see cref="T:OpenAI.VectorStores.VectorStore"/>. </returns>
        </member>
        <member name="P:OpenAI.VectorStores.CreateVectorStoreOperation.RehydrationToken">
            <inheritdoc/>
        </member>
        <member name="M:OpenAI.VectorStores.CreateVectorStoreOperation.GetVectorStoreAsync(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a vector store.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.CreateVectorStoreOperation.GetVectorStore(System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a vector store.
            </summary>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="P:OpenAI.VectorStores.FileChunkingStrategy.Auto">
            <summary>
            Gets a value representing the default, automatic selection for a file chunking strategy.
            </summary>
            <remarks>
            This value is only valid on vector store requests. <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> response instances
            will report the concrete chunking strategy applied after automatic selection.
            </remarks>
        </member>
        <member name="P:OpenAI.VectorStores.FileChunkingStrategy.Unknown">
            <summary>
            Gets a value representing the <c>other</c>, unknown strategy type.
            </summary>
            <remarks>
            This value is present on responses when no chunking strategy could be found. This is typically only true for
            vector stores created earlier than file chunking strategy availability.
            </remarks>
        </member>
        <member name="M:OpenAI.VectorStores.FileChunkingStrategy.CreateStaticStrategy(System.Int32,System.Int32)">
            <inheritdoc cref="M:OpenAI.VectorStores.StaticFileChunkingStrategy.#ctor(System.Int32,System.Int32)"/>
        </member>
        <member name="P:OpenAI.VectorStores.FileFromStoreRemovalResult.Object">
            <summary> The object type, which is always `vector_store.file.deleted`. </summary>
        </member>
        <member name="M:OpenAI.VectorStores.StaticFileChunkingStrategy.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:OpenAI.VectorStores.StaticFileChunkingStrategy"/>, which allows for direct specification of
            file chunk size and chunk overlap windows.
            </summary>
            <param name="maxTokensPerChunk"></param>
            <param name="overlappingTokenCount"></param>
        </member>
        <member name="P:OpenAI.VectorStores.StaticFileChunkingStrategy.MaxTokensPerChunk">
            <summary>
            The maximum size of a file chunk, in tokens.
            </summary>
            <remarks>
            If not otherwise specified, a default of <c>800</c> will be used.
            </remarks>
        </member>
        <member name="P:OpenAI.VectorStores.StaticFileChunkingStrategy.OverlappingTokenCount">
            <summary>
            The number of shared, overlapping tokens allowed between chunks.
            </summary>
            <remarks>
            <para>
            This value may not exceed half of <see cref="P:OpenAI.VectorStores.StaticFileChunkingStrategy.MaxTokensPerChunk"/>.
            </para>
            If not otherwise specified, a default of <c>400</c> will be used.
            </remarks>
        </member>
        <member name="T:OpenAI.VectorStores.VectorStore">
            <summary>
            A representation of a file storage and indexing container used by the <c>file_search</c> tool for assistants.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStore.Object">
            <summary> The object type, which is always `vector_store`. </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStore.ExpirationPolicy">
            <summary>
            Gets the policy that controls when this vector store will be automatically deleted.
            </summary>
        </member>
        <member name="T:OpenAI.VectorStores.VectorStoreBatchFileJob">
            <summary>
            Represents information about a bulk ingestion job of files into a vector store.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreBatchFileJob.BatchId">
            <summary>
            The ID of the batch file ingestion job into the vector store corresponding to <see cref="P:OpenAI.VectorStores.VectorStoreBatchFileJob.VectorStoreId"/>.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreBatchFileJob.FileCounts">
            <summary> Gets the file counts. </summary>
        </member>
        <member name="T:OpenAI.VectorStores.VectorStoreClient">
            <summary>
            The service client for OpenAI vector store operations.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreClient.Pipeline">
            <summary>
            The HTTP pipeline for sending and receiving REST requests and responses.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.VectorStores.VectorStoreClient.#ctor(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenAI.VectorStores.VectorStoreClient.#ctor(System.ClientModel.ApiKeyCredential)" -->
        <member name="M:OpenAI.VectorStores.VectorStoreClient.#ctor(System.ClientModel.ApiKeyCredential,OpenAI.OpenAIClientOptions)">
            <summary>
            Initializes a new instance of <see cref="T:OpenAI.VectorStores.VectorStoreClient"/> that will use an API key when authenticating.
            </summary>
            <param name="credential"> The API key used to authenticate with the service endpoint. </param>
            <param name="options"> Additional options to customize the client. </param>
            <exception cref="T:System.ArgumentNullException"> The provided <paramref name="credential"/> was null. </exception>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenAI.VectorStores.VectorStoreClient.#ctor(System.ClientModel.Primitives.ClientPipeline,OpenAI.OpenAIClientOptions)" -->
        <member name="M:OpenAI.VectorStores.VectorStoreClient.CreateVectorStoreAsync(System.Boolean,OpenAI.VectorStores.VectorStoreCreationOptions,System.Threading.CancellationToken)">
            <summary> Creates a vector store. </summary>
            <param name="waitUntilCompleted"> Value indicating whether the method
            should return after the operation has been started and is still running
            on the service, or wait until the operation has completed to return.
            </param>
            <param name="vectorStore"> The <see cref="T:OpenAI.VectorStores.VectorStoreCreationOptions"/> to use. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStore"/> is null. </exception>
            <returns> A <see cref="T:OpenAI.VectorStores.CreateVectorStoreOperation"/> that can be used to wait for 
            the vector store creation to complete. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.CreateVectorStore(System.Boolean,OpenAI.VectorStores.VectorStoreCreationOptions,System.Threading.CancellationToken)">
            <summary> Creates a vector store. </summary>
            <param name="waitUntilCompleted"> Value indicating whether the method
            should return after the operation has been started and is still running
            on the service, or wait until the operation has completed to return.
            </param>
            <param name="vectorStore"> The <see cref="T:OpenAI.VectorStores.VectorStoreCreationOptions"/> to use. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStore"/> is null. </exception>
            <returns> A <see cref="T:OpenAI.VectorStores.CreateVectorStoreOperation"/> that can be used to wait for 
            the vector store creation to complete. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetVectorStoreAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an instance representing an existing <see cref="T:OpenAI.VectorStores.VectorStore"/> based on its ID.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store to retrieve. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <returns> A representation of an existing <see cref="T:OpenAI.VectorStores.VectorStore"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetVectorStore(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an instance representing an existing <see cref="T:OpenAI.VectorStores.VectorStore"/> based on its ID.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store to retrieve. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <returns> A representation of an existing <see cref="T:OpenAI.VectorStores.VectorStore"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.ModifyVectorStoreAsync(System.String,OpenAI.VectorStores.VectorStoreModificationOptions,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing <see cref="T:OpenAI.VectorStores.VectorStore"/>.
            </summary>
            <param name="vectorStoreId"> The ID of the <see cref="T:OpenAI.VectorStores.VectorStore"/> to modify. </param>
            <param name="vectorStore"> The new options to apply to the <see cref="T:OpenAI.VectorStores.VectorStore"/>. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <returns> An updated representation of the modified <see cref="T:OpenAI.VectorStores.VectorStore"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.ModifyVectorStore(System.String,OpenAI.VectorStores.VectorStoreModificationOptions,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing <see cref="T:OpenAI.VectorStores.VectorStore"/>.
            </summary>
            <param name="vectorStoreId"> The ID of the <see cref="T:OpenAI.VectorStores.VectorStore"/> to modify. </param>
            <param name="vectorStore"> The new options to apply to the <see cref="T:OpenAI.VectorStores.VectorStore"/>. </param>
            <param name="cancellationToken"> A token that can be used to cancel this method call. </param>
            <returns> An updated representation of the modified <see cref="T:OpenAI.VectorStores.VectorStore"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.DeleteVectorStoreAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a vector store.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store to delete. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.VectorStores.VectorStoreDeletionResult"/> instance. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.DeleteVectorStore(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a vector store.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store to delete. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.VectorStores.VectorStoreDeletionResult"/> instance. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetVectorStoresAsync(OpenAI.VectorStores.VectorStoreCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a page collection holding <see cref="T:OpenAI.VectorStores.VectorStore"/> instances for the configured organization.
            </summary>
            <param name="options"> Options describing the collection to return. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.VectorStores.VectorStore"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetVectorStoresAsync(System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Rehydrates a page collection holding <see cref="T:OpenAI.VectorStores.VectorStore"/> instances from a page token.
            </summary>
            <param name="firstPageToken"> Page token corresponding to the first page of the collection to rehydrate. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.VectorStores.VectorStore"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetVectorStores(OpenAI.VectorStores.VectorStoreCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a page collection holding <see cref="T:OpenAI.VectorStores.VectorStore"/> instances for the configured organization.
            </summary>
            <param name="options"> Options describing the collection to return. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.VectorStores.VectorStore"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetVectorStores(System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Rehydrates a page collection holding <see cref="T:OpenAI.VectorStores.VectorStore"/> instances from a page token.
            </summary>
            <param name="firstPageToken"> Page token corresponding to the first page of the collection to rehydrate. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.VectorStores.VectorStore"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.AddFileToVectorStoreAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Associates a single, uploaded file with a vector store, beginning ingestion of the file into the vector store.
            </summary>
            <param name="waitUntilCompleted"> Value indicating whether the method
            should return after the operation has been started and is still running
            on the service, or wait until the operation has completed to return.
            </param>
            <param name="vectorStoreId"> The ID of the vector store to associate the file with. </param>
            <param name="fileId"> The ID of the file to associate with the vector store. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.VectorStores.AddFileToVectorStoreOperation"/> that can be used to wait for 
            the vector store file addition to complete. </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="fileId"/> is null. </exception>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.AddFileToVectorStore(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Associates a single, uploaded file with a vector store, beginning ingestion of the file into the vector store.
            </summary>
            <param name="waitUntilCompleted"> Value indicating whether the method
            should return after the operation has been started and is still running
            on the service, or wait until the operation has completed to return.
            </param>
            <param name="vectorStoreId"> The ID of the vector store to associate the file with. </param>
            <param name="fileId"> The ID of the file to associate with the vector store. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.VectorStores.AddFileToVectorStoreOperation"/> that can be used to wait for 
            the vector store file addition to complete. </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="fileId"/> is null. </exception>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociationsAsync(System.String,OpenAI.VectorStores.VectorStoreFileAssociationCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a page collection holding <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> instances that represent file inclusions in the
            specified vector store.
            </summary>
            <param name="vectorStoreId">
            The ID of the vector store to enumerate the file associations of.
            </param>
            <param name="options"> Options describing the collection to return. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociationsAsync(System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Rehydrates a page collection holding <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> instances from a page token.
            </summary>
            <param name="firstPageToken"> Page token corresponding to the first page of the collection to rehydrate. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociations(System.String,OpenAI.VectorStores.VectorStoreFileAssociationCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a page collection holding <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> instances that represent file inclusions in the
            specified vector store.
            </summary>
            <param name="vectorStoreId">
            The ID of the vector store to enumerate the file associations of.
            </param>
            <param name="options"> Options describing the collection to return. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociations(System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Rehydrates a page collection holding <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> instances from a page token.
            </summary>
            <param name="firstPageToken"> Page token corresponding to the first page of the collection to rehydrate. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociationAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> instance representing an existing association between a known
            vector store ID and file ID.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store associated with the file. </param>
            <param name="fileId"> The ID of the file associated with the vector store. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> instance. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociation(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> instance representing an existing association between a known
            vector store ID and file ID.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store associated with the file. </param>
            <param name="fileId"> The ID of the file associated with the vector store. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> instance. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.RemoveFileFromStoreAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes the association between a file and vector store, which makes the file no longer available to the vector
            store.
            </summary>
            <remarks>
            This does not delete the file. To delete the file, use <see cref="!:OpenAIFileClient.DeleteFile(string)"/>.
            </remarks>
            <param name="vectorStoreId"> The ID of the vector store that the file should be removed from. </param>
            <param name="fileId"> The ID of the file to remove from the vector store. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.VectorStores.FileFromStoreRemovalResult"/> instance. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.RemoveFileFromStore(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes the association between a file and vector store, which makes the file no longer available to the vector
            store.
            </summary>
            <remarks>
            This does not delete the file. To delete the file, use <see cref="!:OpenAIFileClient.DeleteFile(string)"/>.
            </remarks>
            <param name="vectorStoreId"> The ID of the vector store that the file should be removed from. </param>
            <param name="fileId"> The ID of the file to remove from the vector store. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.VectorStores.FileFromStoreRemovalResult"/> instance. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.CreateBatchFileJobAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Adds multiple files in a batch to the vector store, beginning the ingestion process.
            </summary>
            <param name="waitUntilCompleted"> Value indicating whether the method
            should return after the operation has been started and is still running
            on the service, or wait until the operation has completed to return.
            </param>
            <param name="vectorStoreId"> The ID of the vector store to associate files with. </param>
            <param name="fileIds"> The IDs of the files to associate with the vector store. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="M:OpenAI.VectorStores.VectorStoreClient.CreateBatchFileJobOperation(System.ClientModel.ClientResult{OpenAI.VectorStores.VectorStoreBatchFileJob})"/> that can be used to wait for 
            the operation to complete, get information about the batch file job, or cancel the operation. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.CreateBatchFileJob(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Begins a batch job to associate multiple jobs with a vector store, beginning the ingestion process.
            </summary>
            <param name="waitUntilCompleted"> Value indicating whether the method
            should return after the operation has been started and is still running
            on the service, or wait until the operation has completed to return.
            </param>
            <param name="vectorStoreId"> The ID of the vector store to associate files with. </param>
            <param name="fileIds"> The IDs of the files to associate with the vector store. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="M:OpenAI.VectorStores.VectorStoreClient.CreateBatchFileJobOperation(System.ClientModel.ClientResult{OpenAI.VectorStores.VectorStoreBatchFileJob})"/> that can be used to wait for 
            the operation to complete, get information about the batch file job, or cancel the operation. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociationsAsync(System.String,System.String,OpenAI.VectorStores.VectorStoreFileAssociationCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a page collection of file associations associated with a vector store batch file job, representing the files
            that were scheduled for ingestion into the vector store.
            </summary>
            <param name="vectorStoreId">
            The ID of the vector store into which the file batch was scheduled for ingestion.
            </param>
            <param name="batchJobId">
            The ID of the batch file job that was previously scheduled.
            </param>
            <param name="options"> Options describing the collection to return. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociationsAsync(System.String,System.String,System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Rehydrates a page collection of file associations from a page token.
            </summary>
            <param name="vectorStoreId">
            The ID of the vector store into which the file batch was scheduled for ingestion.
            </param>
            <param name="batchJobId">
            The ID of the batch file job that was previously scheduled.
            </param>
            <param name="firstPageToken"> Page token corresponding to the first page of the collection to rehydrate. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociations(System.String,System.String,OpenAI.VectorStores.VectorStoreFileAssociationCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a page collection of file associations associated with a vector store batch file job, representing the files
            that were scheduled for ingestion into the vector store.
            </summary>
            <param name="vectorStoreId">
            The ID of the vector store into which the file batch was scheduled for ingestion.
            </param>
            <param name="batchJobId">
            The ID of the batch file job that was previously scheduled.
            </param>
            <param name="options"> Options describing the collection to return. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociations(System.String,System.String,System.ClientModel.ContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Rehydrates a page collection of file associations from a page token.
            that were scheduled for ingestion into the vector store.
            </summary>
            <param name="vectorStoreId">
            The ID of the vector store into which the file batch was scheduled for ingestion.
            </param>
            <param name="batchJobId">
            The ID of the batch file job that was previously scheduled.
            </param>
            <param name="firstPageToken"> Page token corresponding to the first page of the collection to rehydrate. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A collection of <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/>. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetBatchFileJobAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an existing vector store batch file ingestion job from a known vector store ID and job ID.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store into which the batch of files was started. </param>
            <param name="batchJobId"> The ID of the batch operation adding files to the vector store. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/> instance representing the ingestion operation. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetBatchFileJob(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an existing vector store batch file ingestion job from a known vector store ID and job ID.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store into which the batch of files was started. </param>
            <param name="batchJobId"> The ID of the batch operation adding files to the vector store. </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> A <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/> instance representing the ingestion operation. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.CancelBatchFileJobAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels an in-progress <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/>.
            </summary>
            <param name="vectorStoreId">
            The ID of the <see cref="T:OpenAI.VectorStores.VectorStore"/> that is the ingestion target of the batch job being cancelled.
            </param>
            <param name="batchJobId">
            The ID of the <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/> that should be canceled. 
            </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> An updated <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/> instance. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.CancelBatchFileJob(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels an in-progress <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/>.
            </summary>
            <param name="vectorStoreId">
            The ID of the <see cref="T:OpenAI.VectorStores.VectorStore"/> that is the ingestion target of the batch job being cancelled.
            </param>
            <param name="batchJobId">
            The ID of the <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/> that should be canceled. 
            </param>
            <param name="cancellationToken">A token that can be used to cancel this method call.</param>
            <returns> An updated <see cref="T:OpenAI.VectorStores.VectorStoreBatchFileJob"/> instance. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetVectorStoresAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Returns a paginated collection of vector-stores.
            </summary>
            <param name="limit">
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the
            default is 20.
            </param>
            <param name="order">
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`
            for descending order. Allowed values: "asc" | "desc"
            </param>
            <param name="after">
            A cursor for use in pagination. `after` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include after=obj_foo in order to fetch the next page of the list.
            </param>
            <param name="before">
            A cursor for use in pagination. `before` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include before=obj_foo in order to fetch the previous page of the list.
            </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A collection of service responses, each holding a page of values. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetVectorStores(System.Nullable{System.Int32},System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Returns a paginated collection of vector-stores.
            </summary>
            <param name="limit">
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the
            default is 20.
            </param>
            <param name="order">
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`
            for descending order. Allowed values: "asc" | "desc"
            </param>
            <param name="after">
            A cursor for use in pagination. `after` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include after=obj_foo in order to fetch the next page of the list.
            </param>
            <param name="before">
            A cursor for use in pagination. `before` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include before=obj_foo in order to fetch the previous page of the list.
            </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A collection of service responses, each holding a page of values. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.CreateVectorStoreAsync(System.ClientModel.BinaryContent,System.Boolean,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Creates a vector store.
            </summary>
            <param name="waitUntilCompleted"> Value indicating whether the method
            should return after the operation has been started and is still running
            on the service, or wait until the operation has completed to return.
            </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A <see cref="T:OpenAI.VectorStores.CreateVectorStoreOperation"/> that can be used to wait for 
            the vector store creation to complete. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.CreateVectorStore(System.ClientModel.BinaryContent,System.Boolean,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Creates a vector store.
            </summary>
            <param name="waitUntilCompleted"> Value indicating whether the method
            should return after the operation has been started and is still running
            on the service, or wait until the operation has completed to return.
            </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A <see cref="T:OpenAI.VectorStores.CreateVectorStoreOperation"/> that can be used to wait for 
            the vector store creation to complete. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetVectorStoreAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a vector store.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetVectorStore(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a vector store.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store to retrieve. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.ModifyVectorStoreAsync(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Modifies a vector store.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store to modify. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.ModifyVectorStore(System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Modifies a vector store.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store to modify. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.DeleteVectorStoreAsync(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Delete a vector store.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store to delete. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.DeleteVectorStore(System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Delete a vector store.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store to delete. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociationsAsync(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Returns a paginated collection of vector store files.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store that the files belong to. </param>
            <param name="limit">
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the
            default is 20.
            </param>
            <param name="order">
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`
            for descending order. Allowed values: "asc" | "desc"
            </param>
            <param name="after">
            A cursor for use in pagination. `after` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include after=obj_foo in order to fetch the next page of the list.
            </param>
            <param name="before">
            A cursor for use in pagination. `before` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include before=obj_foo in order to fetch the previous page of the list.
            </param>
            <param name="filter"> Filter by file status. One of `in_progress`, `completed`, `failed`, `cancelled`. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A collection of service responses, each holding a page of values. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociations(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Returns a paginated collection of vector store files.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store that the files belong to. </param>
            <param name="limit">
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the
            default is 20.
            </param>
            <param name="order">
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`
            for descending order. Allowed values: "asc" | "desc"
            </param>
            <param name="after">
            A cursor for use in pagination. `after` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include after=obj_foo in order to fetch the next page of the list.
            </param>
            <param name="before">
            A cursor for use in pagination. `before` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include before=obj_foo in order to fetch the previous page of the list.
            </param>
            <param name="filter"> Filter by file status. One of `in_progress`, `completed`, `failed`, `cancelled`. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A collection of service responses, each holding a page of values. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.AddFileToVectorStoreAsync(System.String,System.ClientModel.BinaryContent,System.Boolean,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Create a vector store file by attaching a [File](/docs/api-reference/files) to a [vector store](/docs/api-reference/vector-stores/object).
            </summary>
            <param name="waitUntilCompleted"> Value indicating whether the method
            should return after the operation has been started and is still running
            on the service, or wait until the operation has completed to return.
            </param>
            <param name="vectorStoreId"> The ID of the vector store for which to create a File. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A <see cref="T:OpenAI.VectorStores.AddFileToVectorStoreOperation"/> that can be used to wait for 
            the vector store file addition to complete. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.AddFileToVectorStore(System.String,System.ClientModel.BinaryContent,System.Boolean,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Create a vector store file by attaching a [File](/docs/api-reference/files) to a [vector store](/docs/api-reference/vector-stores/object).
            </summary>
            <param name="waitUntilCompleted"> Value indicating whether the method
            should return after the operation has been started and is still running
            on the service, or wait until the operation has completed to return.
            </param>
            <param name="vectorStoreId"> The ID of the vector store for which to create a File. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A <see cref="T:OpenAI.VectorStores.AddFileToVectorStoreOperation"/> that can be used to wait for 
            the vector store file addition to complete. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociationAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a vector store file.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store that the file belongs to. </param>
            <param name="fileId"> The ID of the file being retrieved. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> or <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociation(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a vector store file.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store that the file belongs to. </param>
            <param name="fileId"> The ID of the file being retrieved. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> or <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.CancelBatchFileJobAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Cancel a vector store file batch. This attempts to cancel the processing of files in this batch as soon as possible.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store that the file batch belongs to. </param>
            <param name="batchId"> The ID of the file batch to cancel. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="batchId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> or <paramref name="batchId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.CancelBatchFileJob(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Cancel a vector store file batch. This attempts to cancel the processing of files in this batch as soon as possible.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store that the file batch belongs to. </param>
            <param name="batchId"> The ID of the file batch to cancel. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="batchId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> or <paramref name="batchId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociationsAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Returns a paginated collection of vector store files in a batch.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store that the file batch belongs to. </param>
            <param name="batchId"> The ID of the file batch that the files belong to. </param>
            <param name="limit">
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the
            default is 20.
            </param>
            <param name="order">
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`
            for descending order. Allowed values: "asc" | "desc"
            </param>
            <param name="after">
            A cursor for use in pagination. `after` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include after=obj_foo in order to fetch the next page of the list.
            </param>
            <param name="before">
            A cursor for use in pagination. `before` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include before=obj_foo in order to fetch the previous page of the list.
            </param>
            <param name="filter"> Filter by file status. One of `in_progress`, `completed`, `failed`, `cancelled`. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="batchId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> or <paramref name="batchId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A collection of service responses, each holding a page of values. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetFileAssociations(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Returns a paginated collection of vector store files in a batch.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store that the file batch belongs to. </param>
            <param name="batchId"> The ID of the file batch that the files belong to. </param>
            <param name="limit">
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the
            default is 20.
            </param>
            <param name="order">
            Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`
            for descending order. Allowed values: "asc" | "desc"
            </param>
            <param name="after">
            A cursor for use in pagination. `after` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include after=obj_foo in order to fetch the next page of the list.
            </param>
            <param name="before">
            A cursor for use in pagination. `before` is an object ID that defines your place in the list.
            For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
            subsequent call can include before=obj_foo in order to fetch the previous page of the list.
            </param>
            <param name="filter"> Filter by file status. One of `in_progress`, `completed`, `failed`, `cancelled`. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="batchId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> or <paramref name="batchId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A collection of service responses, each holding a page of values. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.RemoveFileFromStoreAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Delete a vector store file. This will remove the file from the vector store but the file itself will not be deleted. To delete the file, use the [delete file](/docs/api-reference/files/delete) endpoint.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store that the file belongs to. </param>
            <param name="fileId"> The ID of the file to delete. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> or <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.RemoveFileFromStore(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Delete a vector store file. This will remove the file from the vector store but the file itself will not be deleted. To delete the file, use the [delete file](/docs/api-reference/files/delete) endpoint.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store that the file belongs to. </param>
            <param name="fileId"> The ID of the file to delete. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="fileId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> or <paramref name="fileId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.CreateBatchFileJobAsync(System.String,System.ClientModel.BinaryContent,System.Boolean,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Create a vector store file batch.
            </summary>
            <param name="waitUntilCompleted"> Value indicating whether the method
            should return after the operation has been started and is still running
            on the service, or wait until the operation has completed to return.
            </param>
            <param name="vectorStoreId"> The ID of the vector store for which to create a file batch. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A <see cref="M:OpenAI.VectorStores.VectorStoreClient.CreateBatchFileJobOperation(System.ClientModel.ClientResult{OpenAI.VectorStores.VectorStoreBatchFileJob})"/> that can be used to wait for 
            the operation to complete, get information about the batch file job, or cancel the operation. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.CreateBatchFileJob(System.String,System.ClientModel.BinaryContent,System.Boolean,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Create a vector store file batch.
            </summary>
            <param name="waitUntilCompleted"> Value indicating whether the method
            should return after the operation has been started and is still running
            on the service, or wait until the operation has completed to return.
            </param>
            <param name="vectorStoreId"> The ID of the vector store for which to create a file batch. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> A <see cref="M:OpenAI.VectorStores.VectorStoreClient.CreateBatchFileJobOperation(System.ClientModel.ClientResult{OpenAI.VectorStores.VectorStoreBatchFileJob})"/> that can be used to wait for 
            the operation to complete, get information about the batch file job, or cancel the operation. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetBatchFileJobAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a vector store file batch.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store that the file batch belongs to. </param>
            <param name="batchId"> The ID of the file batch being retrieved. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="batchId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> or <paramref name="batchId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreClient.GetBatchFileJob(System.String,System.String,System.ClientModel.Primitives.RequestOptions)">
            <summary>
            [Protocol Method] Retrieves a vector store file batch.
            </summary>
            <param name="vectorStoreId"> The ID of the vector store that the file batch belongs to. </param>
            <param name="batchId"> The ID of the file batch being retrieved. </param>
            <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="vectorStoreId"/> or <paramref name="batchId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="vectorStoreId"/> or <paramref name="batchId"/> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="T:OpenAI.VectorStores.VectorStoreCollectionOptions">
            <summary> The options to configure how <see cref="T:OpenAI.VectorStores.VectorStore"/> objects are retrieved and paginated. </summary>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreCollectionOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.VectorStores.VectorStoreCollectionOptions"/>. </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreCollectionOptions.PageSizeLimit">
            <summary> 
                A limit on the number of <see cref="T:OpenAI.VectorStores.VectorStore"/> objects to be returned per page.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreCollectionOptions.Order">
            <summary>
                The order in which to retrieve <see cref="T:OpenAI.VectorStores.VectorStore"/> objects when sorted by their
                <see cref="P:OpenAI.VectorStores.VectorStore.CreatedAt"/> timestamp.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreCollectionOptions.AfterId">
            <summary>
                The <see cref="P:OpenAI.VectorStores.VectorStore.Id"/> used to retrieve the page of <see cref="T:OpenAI.VectorStores.VectorStore"/> objects that come
                after this one.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreCollectionOptions.BeforeId">
            <summary>
                The <see cref="P:OpenAI.VectorStores.VectorStore.Id"/> used to retrieve the page of <see cref="T:OpenAI.VectorStores.VectorStore"/> objects that come
                before this one.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreCreationOptions.ExpirationPolicy">
            <summary> Gets or sets the policy that controls when the new vector store will be automatically deleted. </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreDeletionResult.Object">
            <summary> The object type, which is always `vector_store.deleted`. </summary>
        </member>
        <member name="T:OpenAI.VectorStores.VectorStoreExpirationAnchor">
            <summary>
            Represents the available timestamps to which the duration in a <see cref="T:OpenAI.VectorStores.VectorStoreExpirationPolicy"/> will apply.
            </summary>
        </member>
        <member name="F:OpenAI.VectorStores.VectorStoreExpirationAnchor.Unknown">
            <summary>
            An unknown anchor.
            </summary>
        </member>
        <member name="F:OpenAI.VectorStores.VectorStoreExpirationAnchor.LastActiveAt">
            <summary>
            Specifies that the expiration policy should apply relative to the last timestamp at which the vector store was
            used.
            </summary>
        </member>
        <member name="T:OpenAI.VectorStores.VectorStoreExpirationPolicy">
            <summary>
            Represents the the configuration that controls when a vector store will be automatically deleted.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreExpirationPolicy.Anchor">
            <summary> Anchor timestamp after which the expiration policy applies. Supported anchors: `last_active_at`. </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreExpirationPolicy.Days">
            <summary> The number of days after the anchor time that the vector store will expire. </summary>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreExpirationPolicy.#ctor(OpenAI.VectorStores.VectorStoreExpirationAnchor,System.Int32)">
            <summary> Initializes a new instance of <see cref="T:OpenAI.VectorStores.VectorStoreExpirationPolicy"/>. </summary>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreExpirationPolicy.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.VectorStores.VectorStoreExpirationPolicy"/>. </summary>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreExpirationPolicy.#ctor(OpenAI.VectorStores.VectorStoreExpirationAnchor,System.Int32,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:OpenAI.VectorStores.VectorStoreExpirationPolicy"/>. </summary>
            <param name="anchor"> Anchor timestamp after which the expiration policy applies. Supported anchors: `last_active_at`. </param>
            <param name="days"> The number of days after the anchor time that the vector store will expire. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="T:OpenAI.VectorStores.VectorStoreFileAssociation">
            <summary>
            A representation of a file association between an uploaded file and a vector store.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreFileAssociation.Object">
            <summary> The object type, which is always `vector_store.file`. </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreFileAssociation.FileId">
            <summary>
            The ID of the file that is associated with the vector store.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreFileAssociation.Size">
            <summary>
            The total count of bytes used for vector storage of the file. Note that this may differ from the size of the
            file.
            </summary>
        </member>
        <member name="T:OpenAI.VectorStores.VectorStoreFileAssociationCollectionOptions">
            <summary> The options to configure how <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> objects are retrieved and paginated. </summary>
        </member>
        <member name="M:OpenAI.VectorStores.VectorStoreFileAssociationCollectionOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociationCollectionOptions"/>. </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreFileAssociationCollectionOptions.PageSizeLimit">
            <summary> 
                A limit on the number of <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> objects to be returned per page.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreFileAssociationCollectionOptions.Order">
            <summary>
                The order in which to retrieve <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> objects when sorted by their
                <see cref="P:OpenAI.VectorStores.VectorStoreFileAssociation.CreatedAt"/> timestamp.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreFileAssociationCollectionOptions.AfterId">
            <summary>
                The <see cref="!:VectorStoreFileAssociation.Id"/> used to retrieve the page of <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> objects that come
                after this one.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreFileAssociationCollectionOptions.BeforeId">
            <summary>
                The <see cref="!:VectorStoreFileAssociation.Id"/> used to retrieve the page of <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> objects that come
                before this one.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreFileAssociationCollectionOptions.Filter">
            <summary>
                A filter to only retrieve the <see cref="T:OpenAI.VectorStores.VectorStoreFileAssociation"/> objects with a matching
                <see cref="P:OpenAI.VectorStores.VectorStoreFileAssociation.Status"/>.
            </summary>
        </member>
        <member name="T:OpenAI.VectorStores.VectorStoreFileAssociationStatus">
            <summary>
            Represents the possible states for a vector store file association.
            </summary>
        </member>
        <member name="F:OpenAI.VectorStores.VectorStoreFileAssociationStatus.Unknown">
            <summary>
            An unknown vector store file association status.
            </summary>
        </member>
        <member name="P:OpenAI.VectorStores.VectorStoreModificationOptions.ExpirationPolicy">
            <summary> Gets or sets the policy that controls when the new vector store will be automatically deleted. </summary>
        </member>
        <member name="T:OpenAI.VectorStores.VectorStoreStatus">
            <summary>
            Represents the possible states for a vector store.
            </summary>
        </member>
        <member name="F:OpenAI.VectorStores.VectorStoreStatus.Unknown">
            <summary>
            An unknown vector store status.
            </summary>
        </member>
        <member name="M:OpenAI.AppContextSwitchHelper.GetConfigValue(System.String,System.String)">
            <summary>
            Determines if either an AppContext switch or its corresponding Environment Variable is set
            </summary>
            <param name="appContextSwitchName">Name of the AppContext switch.</param>
            <param name="environmentVariableName">Name of the Environment variable.</param>
            <returns>If the AppContext switch has been set, returns the value of the switch.
            If the AppContext switch has not been set, returns the value of the environment variable.
            False if neither is set.
            </returns>
        </member>
        <member name="P:OpenAI.CodeGenModelAttribute.Usage">
            <summary>
            Gets or sets a coma separated list of additional model usage modes. Allowed values: model, error, intput, output.
            </summary>
        </member>
        <member name="P:OpenAI.CodeGenModelAttribute.Formats">
            <summary>
            Gets or sets a coma separated list of additional model serialization formats.
            </summary>
        </member>
        <member name="P:OpenAI.CodeGenSerializationAttribute.PropertyName">
            <summary>
            Gets or sets the property name which these hooks should apply to
            </summary>
        </member>
        <member name="P:OpenAI.CodeGenSerializationAttribute.SerializationPath">
            <summary>
            Gets or sets the serialization path of the property in the JSON
            </summary>
        </member>
        <member name="P:OpenAI.CodeGenSerializationAttribute.SerializationValueHook">
            <summary>
            Gets or sets the method name to use when serializing the property value (property name excluded)
            The signature of the serialization hook method must be or compatible with when invoking:
            private void SerializeHook(Utf8JsonWriter writer);
            </summary>
        </member>
        <member name="P:OpenAI.CodeGenSerializationAttribute.DeserializationValueHook">
            <summary>
            Gets or sets the method name to use when deserializing the property value from the JSON
            private static void DeserializationHook(JsonProperty property, ref TypeOfTheProperty propertyValue); // if the property is required
            private static void DeserializationHook(JsonProperty property, ref Optional&lt;TypeOfTheProperty&gt; propertyValue); // if the property is optional
            </summary>
        </member>
        <member name="P:OpenAI.CodeGenSerializationAttribute.BicepSerializationValueHook">
            <summary>
            Gets or sets the method name to use when serializing the property value (property name excluded)
            The signature of the serialization hook method must be or compatible with when invoking:
            private void SerializeHook(StringBuilder builder);
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.ExperimentalAttribute">
            <summary>
             Indicates that an API is experimental and it may change in the future.
            </summary>
            <remarks>
              This attribute allows call sites to be flagged with a diagnostic that indicates that an experimental
              feature is used. Authors can use this attribute to ship preview features in their assemblies.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.#ctor(System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.ExperimentalAttribute"/> class, specifying the ID that the compiler will use
             when reporting a use of the API the attribute applies to.
            </summary>
            <param name="diagnosticId">The ID that the compiler will use when reporting a use of the API the attribute applies to.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.DiagnosticId">
            <summary>
             Gets the ID that the compiler will use when reporting a use of the API the attribute applies to.
            </summary>
            <value>The unique diagnostic ID.</value>
            <remarks>
             The diagnostic ID is shown in build output for warnings and errors.
             <para>This property represents the unique ID that can be used to suppress the warnings or errors, if needed.</para>
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.UrlFormat">
            <summary>
             Gets or sets the URL for corresponding documentation.
             The API accepts a format string instead of an actual URL, creating a generic URL that includes the diagnostic ID.
            </summary>
            <value>The format string that represents a URL to corresponding documentation.</value>
            <remarks>An example format string is <c>https://contoso.com/obsoletion-warnings/{0}</c>.</remarks>
        </member>
        <member name="T:System.Net.ServerSentEvents.SseItem`1">
            <summary>Represents a server-sent event.</summary>
            <typeparam name="T">Specifies the type of data payload in the event.</typeparam>
        </member>
        <member name="M:System.Net.ServerSentEvents.SseItem`1.#ctor(`0,System.String)">
            <summary>Initializes the server-sent event.</summary>
            <param name="data">The event's payload.</param>
            <param name="eventType">The event's type.</param>
        </member>
        <member name="P:System.Net.ServerSentEvents.SseItem`1.Data">
            <summary>Gets the event's payload.</summary>
        </member>
        <member name="P:System.Net.ServerSentEvents.SseItem`1.EventType">
            <summary>Gets the event's type.</summary>
        </member>
        <member name="T:System.Net.ServerSentEvents.SseItemParser`1">
            <summary>Encapsulates a method for parsing the bytes payload of a server-sent event.</summary>
            <typeparam name="T">Specifies the type of the return value of the parser.</typeparam>
            <param name="eventType">The event's type.</param>
            <param name="data">The event's payload bytes.</param>
            <returns>The parsed <typeparamref name="T"/>.</returns>
        </member>
        <member name="T:System.Net.ServerSentEvents.SseParser">
            <summary>Provides a parser for parsing server-sent events.</summary>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser.EventTypeDefault">
            <summary>The default <see cref="P:System.Net.ServerSentEvents.SseItem`1.EventType"/> ("message") for an event that did not explicitly specify a type.</summary>
        </member>
        <member name="M:System.Net.ServerSentEvents.SseParser.Create(System.IO.Stream)">
            <summary>Creates a parser for parsing a <paramref name="sseStream"/> of server-sent events into a sequence of <see cref="T:System.Net.ServerSentEvents.SseItem`1"/> values.</summary>
            <param name="sseStream">The stream containing the data to parse.</param>
            <returns>
            The enumerable of strings, which may be enumerated synchronously or asynchronously. The strings
            are decoded from the UTF8-encoded bytes of the payload of each event.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="sseStream"/> is null.</exception>
            <remarks>
            This overload has behavior equivalent to calling <see cref="M:System.Net.ServerSentEvents.SseParser.Create``1(System.IO.Stream,System.Net.ServerSentEvents.SseItemParser{``0})"/> with a delegate
            that decodes the data of each event using <see cref="P:System.Text.Encoding.UTF8"/>'s GetString method.
            </remarks>
        </member>
        <member name="M:System.Net.ServerSentEvents.SseParser.Create``1(System.IO.Stream,System.Net.ServerSentEvents.SseItemParser{``0})">
            <summary>Creates a parser for parsing a <paramref name="sseStream"/> of server-sent events into a sequence of <see cref="T:System.Net.ServerSentEvents.SseItem`1"/> values.</summary>
            <typeparam name="T">Specifies the type of data in each event.</typeparam>
            <param name="sseStream">The stream containing the data to parse.</param>
            <param name="itemParser">The parser to use to transform each payload of bytes into a data element.</param>
            <returns>The enumerable, which may be enumerated synchronously or asynchronously.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="sseStream"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="itemParser"/> is null.</exception>
        </member>
        <member name="M:System.Net.ServerSentEvents.SseParser.Utf8GetString(System.ReadOnlySpan{System.Byte})">
            <summary>Encoding.UTF8.GetString(bytes)</summary>
        </member>
        <member name="T:System.Net.ServerSentEvents.SseParser`1">
            <summary>Provides a parser for server-sent events information.</summary>
            <typeparam name="T">Specifies the type of data parsed from an event.</typeparam>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1.CR">
            <summary>Carriage Return.</summary>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1.LF">
            <summary>Line Feed.</summary>
        </member>
        <member name="P:System.Net.ServerSentEvents.SseParser`1.CRLF">
            <summary>Carriage Return Line Feed.</summary>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1.DefaultArrayPoolRentSize">
            <summary>The default size of an ArrayPool buffer to rent.</summary>
            <remarks>Larger size used by default to minimize number of reads. Smaller size used in debug to stress growth/shifting logic.</remarks>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1._stream">
            <summary>The stream to be parsed.</summary>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1._itemParser">
            <summary>The parser delegate used to transform bytes into a <typeparamref name="T"/>.</summary>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1._used">
            <summary>Indicates whether the enumerable has already been used for enumeration.</summary>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1._lineBuffer">
            <summary>Buffer, either empty or rented, containing the data being read from the stream while looking for the next line.</summary>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1._lineOffset">
            <summary>The starting offset of valid data in <see cref="F:System.Net.ServerSentEvents.SseParser`1._lineBuffer"/>.</summary>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1._lineLength">
            <summary>The length of valid data in <see cref="F:System.Net.ServerSentEvents.SseParser`1._lineBuffer"/>, starting from <see cref="F:System.Net.ServerSentEvents.SseParser`1._lineOffset"/>.</summary>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1._newlineIndex">
            <summary>The index in <see cref="F:System.Net.ServerSentEvents.SseParser`1._lineBuffer"/> where a newline ('\r', '\n', or "\r\n") was found.</summary>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1._lastSearchedForNewline">
            <summary>The index in <see cref="F:System.Net.ServerSentEvents.SseParser`1._lineBuffer"/> of characters already checked for newlines.</summary>
            <remarks>
            This is to avoid O(LineLength^2) behavior in the rare case where we have long lines that are built-up over multiple reads.
            We want to avoid re-checking the same characters we've already checked over and over again.
            </remarks>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1._eof">
            <summary>Set when eof has been reached in the stream.</summary>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1._dataBuffer">
            <summary>Rented buffer containing buffered data for the next event.</summary>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1._dataLength">
            <summary>The length of valid data in <see cref="F:System.Net.ServerSentEvents.SseParser`1._dataBuffer"/>, starting from index 0.</summary>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1._dataAppended">
            <summary>Whether data has been appended to <see cref="F:System.Net.ServerSentEvents.SseParser`1._dataBuffer"/>.</summary>
            <remarks>This can be different than <see cref="F:System.Net.ServerSentEvents.SseParser`1._dataLength"/> != 0 if empty data was appended.</remarks>
        </member>
        <member name="F:System.Net.ServerSentEvents.SseParser`1._eventType">
            <summary>The event type for the next event.</summary>
        </member>
        <member name="M:System.Net.ServerSentEvents.SseParser`1.#ctor(System.IO.Stream,System.Net.ServerSentEvents.SseItemParser{`0})">
            <summary>Initialize the enumerable.</summary>
            <param name="stream">The stream to parse.</param>
            <param name="itemParser">The function to use to parse payload bytes into a <typeparamref name="T"/>.</param>
        </member>
        <member name="M:System.Net.ServerSentEvents.SseParser`1.Enumerate">
            <summary>Gets an enumerable of the server-sent events from this parser.</summary>
            <exception cref="T:System.InvalidOperationException">The parser has already been enumerated. Such an exception may propagate out of a call to <see cref="!:IEnumerator.MoveNext"/>.</exception>
        </member>
        <member name="M:System.Net.ServerSentEvents.SseParser`1.EnumerateAsync(System.Threading.CancellationToken)">
            <summary>Gets an asynchronous enumerable of the server-sent events from this parser.</summary>
            <param name="cancellationToken">The cancellation token to use to cancel the enumeration.</param>
            <exception cref="T:System.InvalidOperationException">The parser has already been enumerated. Such an exception may propagate out of a call to <see cref="M:System.Collections.Generic.IAsyncEnumerator`1.MoveNextAsync"/>.</exception>
            <exception cref="T:System.OperationCanceledException">The enumeration was canceled. Such an exception may propagate out of a call to <see cref="M:System.Collections.Generic.IAsyncEnumerator`1.MoveNextAsync"/>.</exception>
        </member>
        <member name="M:System.Net.ServerSentEvents.SseParser`1.GetNextSearchOffsetAndLength(System.Int32@,System.Int32@)">
            <summary>Gets the next index and length with which to perform a newline search.</summary>
        </member>
        <member name="M:System.Net.ServerSentEvents.SseParser`1.ShiftOrGrowLineBufferIfNecessary">
            <summary>
            If there's no room remaining in the line buffer, either shifts the contents
            left or grows the buffer in order to make room for the next read.
            </summary>
        </member>
        <member name="M:System.Net.ServerSentEvents.SseParser`1.ProcessLine(System.Net.ServerSentEvents.SseItem{`0}@,System.Int32@)">
            <summary>Processes a complete line from the SSE stream.</summary>
            <param name="sseItem">The parsed item if the method returns true.</param>
            <param name="advance">How many characters to advance in the line buffer.</param>
            <returns>true if an SSE item was successfully parsed; otherwise, false.</returns>
        </member>
        <member name="P:System.Net.ServerSentEvents.SseParser`1.LastEventId">
            <summary>Gets the last event ID.</summary>
            <remarks>This value is updated any time a new last event ID is parsed. It is not reset between SSE items.</remarks>
        </member>
        <member name="P:System.Net.ServerSentEvents.SseParser`1.ReconnectionInterval">
            <summary>Gets the reconnection interval.</summary>
            <remarks>
            If no retry event was received, this defaults to <see cref="F:System.Threading.Timeout.InfiniteTimeSpan"/>, and it will only
            ever be <see cref="F:System.Threading.Timeout.InfiniteTimeSpan"/> in that situation. If a client wishes to retry, the server-sent
            events specification states that the interval may then be decided by the client implementation and should be a
            few seconds.
            </remarks>
        </member>
        <member name="M:System.Net.ServerSentEvents.SseParser`1.ThrowIfNotFirstEnumeration">
            <summary>Transitions the object to a used state, throwing if it's already been used.</summary>
        </member>
        <member name="M:System.Net.ServerSentEvents.SseParser`1.FillLineBuffer">
            <summary>Reads data from the stream into the line buffer.</summary>
        </member>
        <member name="M:System.Net.ServerSentEvents.SseParser`1.FillLineBufferAsync(System.Threading.CancellationToken)">
            <summary>Reads data asynchronously from the stream into the line buffer.</summary>
        </member>
        <member name="P:System.Net.ServerSentEvents.SseParser`1.Utf8Bom">
            <summary>Gets the UTF8 BOM.</summary>
        </member>
        <member name="M:System.Net.ServerSentEvents.SseParser`1.SkipBomIfPresent">
            <summary>Called at the beginning of processing to skip over an optional UTF8 byte order mark.</summary>
        </member>
        <member name="M:System.Net.ServerSentEvents.SseParser`1.GrowBuffer(System.Byte[]@,System.Int32)">
            <summary>Grows the buffer, returning the existing one to the ArrayPool and renting an ArrayPool replacement.</summary>
        </member>
    </members>
</doc>
